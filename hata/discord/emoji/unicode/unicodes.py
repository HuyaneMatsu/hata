__all__ = ()

from ..emoji import Emoji

from .unicode_type import Unicode


UNICODES = (
    Unicode(
        'skin_tone_1',
        b'\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'skin_tone_2',
        b'\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'skin_tone_3',
        b'\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'skin_tone_4',
        b'\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'skin_tone_5',
        b'\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'sweat',
        b'\xf0\x9f\x98\x93'.decode('utf8'),
        False,
        None,
        (',:(', ',:-(', ',=(', ',=-('),
        (
            '\ud83d\ude13',
        ),
    ),
    Unicode(
        'sweat_smile',
        b'\xf0\x9f\x98\x85'.decode('utf8'),
        False,
        None,
        (',:)', ',:-)', ',=)', ',=-)'),
        (
            '\ud83d\ude05',
        ),
    ),
    Unicode(
        'innocent',
        b'\xf0\x9f\x98\x87'.decode('utf8'),
        False,
        None,
        ('0:)', '0:-)', '0=)', '0=-)', 'o:)', 'O:)', 'o:-)', 'O:-)', 'o=)', 'O=)', 'o=-)', 'O=-)'),
        (
            '\ud83d\ude07',
        ),
    ),
    Unicode(
        'sunglasses',
        b'\xf0\x9f\x98\x8e'.decode('utf8'),
        False,
        None,
        ('8-)', 'B-)'),
        (
            '\ud83d\ude0e',
        ),
    ),
    Unicode(
        'unamused',
        b'\xf0\x9f\x98\x92'.decode('utf8'),
        False,
        None,
        (':$', ':-$', ':-S', ':-Z', ':s', ':z', '=$', '=-$', '=-S', '=-Z', '=s', '=z'),
        (
            '\ud83d\ude12',
        ),
    ),
    Unicode(
        'cry',
        b'\xf0\x9f\x98\xa2'.decode('utf8'),
        False,
        None,
        (':\'(', ':\'-(', ':,(', ':,-(', '=\'(', '=\'-(', '=,(', '=,-('),
        (
            '\ud83d\ude22',
        ),
    ),
    Unicode(
        'joy',
        b'\xf0\x9f\x98\x82'.decode('utf8'),
        False,
        None,
        (
            ':\')', ':\'-)', ':\'-D', ':\'D', ':,)', ':,-)', ':,-D', ':,D', '=\')', '=\'-)', '=\'-D', '=\'D',
            '=,)', '=,-)', '=,-D', '=,D'
        ),
        (
            '\ud83d\ude02',
        ),
    ),
    Unicode(
        'frowning',
        b'\xf0\x9f\x98\xa6'.decode('utf8'),
        False,
        None,
        (':(', ':-(', '=(', '=-('),
        (
            '\ud83d\ude26',
        ),
    ),
    Unicode(
        'smiley',
        b'\xf0\x9f\x98\x83'.decode('utf8'),
        False,
        None,
        (':)', ':-)', '=)', '=-)'),
        (
            '\ud83d\ude03',
        ),
    ),
    Unicode(
        'kissing',
        b'\xf0\x9f\x98\x97'.decode('utf8'),
        False,
        None,
        (':*', ':-*', '=*', '=-*'),
        (
            '\ud83d\ude17',
        ),
    ),
    Unicode(
        'thumbsup',
        b'\xf0\x9f\x91\x8d'.decode('utf8'),
        False,
        (
            'thumbup',
            '+1'
        ),
        None,
        (
            '\ud83d\udc4d',
        ),
    ),
    Unicode(
        'thumbsup_tone1',
        b'\xf0\x9f\x91\x8d\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'thumbup_tone1',
            '+1_tone1'
        ),
        None,
        (
            '\ud83d\udc4d\ud83c\udffb',
        ),
    ),
    Unicode(
        'thumbsup_tone2',
        b'\xf0\x9f\x91\x8d\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'thumbup_tone2',
            '+1_tone2'
        ),
        None,
        (
            '\ud83d\udc4d\ud83c\udffc',
        ),
    ),
    Unicode(
        'thumbsup_tone3',
        b'\xf0\x9f\x91\x8d\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'thumbup_tone3',
            '+1_tone3'
        ),
        None,
        (
            '\ud83d\udc4d\ud83c\udffd',
        ),
    ),
    Unicode(
        'thumbsup_tone4',
        b'\xf0\x9f\x91\x8d\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'thumbup_tone4',
            '+1_tone4'
        ),
        None,
        (
            '\ud83d\udc4d\ud83c\udffe',
        ),
    ),
    Unicode(
        'thumbsup_tone5',
        b'\xf0\x9f\x91\x8d\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'thumbup_tone5',
            '+1_tone5'
        ),
        None,
        (
            '\ud83d\udc4d\ud83c\udfff',
        ),
    ),
    Unicode(
        'sob',
        b'\xf0\x9f\x98\xad'.decode('utf8'),
        False,
        None,
        (':,\'(', ':,\'-(', ';(', ';-(', '=,\'(', '=,\'-('),
        (
            '\ud83d\ude2d',
        ),
    ),
    Unicode(
        'confused',
        b'\xf0\x9f\x98\x95'.decode('utf8'),
        False,
        None,
        (':-/', ':-\\', '=-/', '=-\\'),
        (
            '\ud83d\ude15',
        ),
    ),
    Unicode(
        'thumbdown',
        b'\xf0\x9f\x91\x8e'.decode('utf8'),
        False,
        (
            'thumbsdown',
        ),
        ('-1',),
        (
            '\ud83d\udc4e',
        ),
    ),
    Unicode(
        'thumbdown_tone1',
        b'\xf0\x9f\x91\x8e\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'thumbsdown_tone1',
            '_1_tone1'
        ),
        ('-1_tone1',),
        (
            '\ud83d\udc4e\ud83c\udffb',
        ),
    ),
    Unicode(
        'thumbdown_tone2',
        b'\xf0\x9f\x91\x8e\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'thumbsdown_tone2',
            '_1_tone2'
        ),
        ('-1_tone2',),
        (
            '\ud83d\udc4e\ud83c\udffc',
        ),
    ),
    Unicode(
        'thumbdown_tone3',
        b'\xf0\x9f\x91\x8e\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'thumbsdown_tone3',
            '_1_tone3'
        ),
        ('-1_tone3',),
        (
            '\ud83d\udc4e\ud83c\udffd',
        ),
    ),
    Unicode(
        'thumbdown_tone4',
        b'\xf0\x9f\x91\x8e\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'thumbsdown_tone4',
            '_1_tone4'
        ),
        ('-1_tone4',),
        (
            '\ud83d\udc4e\ud83c\udffe',
        ),
    ),
    Unicode(
        'thumbdown_tone5',
        b'\xf0\x9f\x91\x8e\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'thumbsdown_tone5',
            '_1_tone5'
        ),
        ('-1_tone5',),
        (
            '\ud83d\udc4e\ud83c\udfff',
        ),
    ),
    Unicode(
        'rage',
        b'\xf0\x9f\x98\xa1'.decode('utf8'),
        False,
        None,
        (':-@', ':@', '=-@', '=@'),
        (
            '\ud83d\ude21',
        ),
    ),
    Unicode(
        'blush',
        b'\xf0\x9f\x98\x8a'.decode('utf8'),
        False,
        None,
        (':-")', ':")', '=-")', '=")'),
        (
            '\ud83d\ude0a',
        ),
    ),
    Unicode(
        'smile',
        b'\xf0\x9f\x98\x84'.decode('utf8'),
        False,
        None,
        (':-D', ':D', '=-D', '=D'),
        (
            '\ud83d\ude04',
        ),
    ),
    Unicode(
        'open_mouth',
        b'\xf0\x9f\x98\xae'.decode('utf8'),
        False,
        None,
        (':-o', ':-O', ':o', ':O', '=-o', '=-O', '=o', '=O'),
        (
            '\ud83d\ude2e',
        ),
    ),
    Unicode(
        'stuck_out_tongue',
        b'\xf0\x9f\x98\x9b'.decode('utf8'),
        False,
        None,
        (':-P', ':P', '=-P', '=P'),
        (
            '\ud83d\ude1b',
        ),
    ),
    Unicode(
        'neutral_face',
        b'\xf0\x9f\x98\x90'.decode('utf8'),
        False,
        None,
        (':-|', ':|', '=-|', '=|'),
        (
            '\ud83d\ude10',
        ),
    ),
    Unicode(
        '100',
        b'\xf0\x9f\x92\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcaf',
        ),
    ),
    Unicode(
        '1234',
        b'\xf0\x9f\x94\xa2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd22',
        ),
    ),
    Unicode(
        '8ball',
        b'\xf0\x9f\x8e\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfb1',
        ),
    ),
    Unicode(
        'a',
        b'\xf0\x9f\x85\xb0'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'ab',
        b'\xf0\x9f\x86\x8e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udd8e',
        ),
    ),
    Unicode(
        'abc',
        b'\xf0\x9f\x94\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd24',
        ),
    ),
    Unicode(
        'abcd',
        b'\xf0\x9f\x94\xa1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd21',
        ),
    ),
    Unicode(
        'accept',
        b'\xf0\x9f\x89\x91'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\ude51',
        ),
    ),
    Unicode(
        'admission_tickets',
        b'\xf0\x9f\x8e\x9f'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'aerial_tramway',
        b'\xf0\x9f\x9a\xa1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udea1',
        ),
    ),
    Unicode(
        'airplane',
        b'\xe2\x9c\x88'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'airplane_arriving',
        b'\xf0\x9f\x9b\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeec',
        ),
    ),
    Unicode(
        'airplane_departure',
        b'\xf0\x9f\x9b\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeeb',
        ),
    ),
    Unicode(
        'airplane_small',
        b'\xf0\x9f\x9b\xa9'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'alarm_clock',
        b'\xe2\x8f\xb0'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'alembic',
        b'\xe2\x9a\x97'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'alien',
        b'\xf0\x9f\x91\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc7d',
        ),
    ),
    Unicode(
        'ambulance',
        b'\xf0\x9f\x9a\x91'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude91',
        ),
    ),
    Unicode(
        'amphora',
        b'\xf0\x9f\x8f\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udffa',
        ),
    ),
    Unicode(
        'anchor',
        b'\xe2\x9a\x93'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'angel',
        b'\xf0\x9f\x91\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc7c',
        ),
    ),
    Unicode(
        'angel_tone1',
        b'\xf0\x9f\x91\xbc\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc7c\ud83c\udffb',
        ),
    ),
    Unicode(
        'angel_tone2',
        b'\xf0\x9f\x91\xbc\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc7c\ud83c\udffc',
        ),
    ),
    Unicode(
        'angel_tone3',
        b'\xf0\x9f\x91\xbc\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc7c\ud83c\udffd',
        ),
    ),
    Unicode(
        'angel_tone4',
        b'\xf0\x9f\x91\xbc\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc7c\ud83c\udffe',
        ),
    ),
    Unicode(
        'angel_tone5',
        b'\xf0\x9f\x91\xbc\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc7c\ud83c\udfff',
        ),
    ),
    Unicode(
        'anger',
        b'\xf0\x9f\x92\xa2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udca2',
        ),
    ),
    Unicode(
        'anger_right',
        b'\xf0\x9f\x97\xaf'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'angry',
        b'\xf0\x9f\x98\xa0'.decode('utf8'),
        False,
        None,
        ('>:(', '>:-(', '>=(', '>=-('),
        (
            '\ud83d\ude20',
        ),
    ),
    Unicode(
        'anguished',
        b'\xf0\x9f\x98\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude27',
        ),
    ),
    Unicode(
        'ant',
        b'\xf0\x9f\x90\x9c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc1c',
        ),
    ),
    Unicode(
        'apple',
        b'\xf0\x9f\x8d\x8e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf4e',
        ),
    ),
    Unicode(
        'aquarius',
        b'\xe2\x99\x92'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'archery',
        b'\xf0\x9f\x8f\xb9'.decode('utf8'),
        False,
        (
            'bow_and_arrow',
        ),
        None,
        (
            '\ud83c\udff9',
        ),
    ),
    Unicode(
        'aries',
        b'\xe2\x99\x88'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'arrow_backward',
        b'\xe2\x97\x80'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'arrow_double_down',
        b'\xe2\x8f\xac'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'arrow_double_up',
        b'\xe2\x8f\xab'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'arrow_down',
        b'\xe2\xac\x87'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'arrow_down_small',
        b'\xf0\x9f\x94\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd3d',
        ),
    ),
    Unicode(
        'arrow_forward',
        b'\xe2\x96\xb6'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'arrow_heading_down',
        b'\xe2\xa4\xb5'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'arrow_heading_up',
        b'\xe2\xa4\xb4'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'arrow_left',
        b'\xe2\xac\x85'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'arrow_lower_left',
        b'\xe2\x86\x99'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'arrow_lower_right',
        b'\xe2\x86\x98'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'arrow_right',
        b'\xe2\x9e\xa1'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'arrow_right_hook',
        b'\xe2\x86\xaa'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'arrow_up',
        b'\xe2\xac\x86'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'arrow_up_down',
        b'\xe2\x86\x95'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'arrow_up_small',
        b'\xf0\x9f\x94\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd3c',
        ),
    ),
    Unicode(
        'arrow_upper_left',
        b'\xe2\x86\x96'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'arrow_upper_right',
        b'\xe2\x86\x97'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'arrows_clockwise',
        b'\xf0\x9f\x94\x83'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd03',
        ),
    ),
    Unicode(
        'arrows_counterclockwise',
        b'\xf0\x9f\x94\x84'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd04',
        ),
    ),
    Unicode(
        'art',
        b'\xf0\x9f\x8e\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfa8',
        ),
    ),
    Unicode(
        'articulated_lorry',
        b'\xf0\x9f\x9a\x9b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude9b',
        ),
    ),
    Unicode(
        'asterisk',
        b'*\xe2\x83\xa3'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'astonished',
        b'\xf0\x9f\x98\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude32',
        ),
    ),
    Unicode(
        'athletic_shoe',
        b'\xf0\x9f\x91\x9f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc5f',
        ),
    ),
    Unicode(
        'atm',
        b'\xf0\x9f\x8f\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfe7',
        ),
    ),
    Unicode(
        'atom',
        b'\xe2\x9a\x9b'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'avocado',
        b'\xf0\x9f\xa5\x91'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd51',
        ),
    ),
    Unicode(
        'b',
        b'\xf0\x9f\x85\xb1'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'baby',
        b'\xf0\x9f\x91\xb6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc76',
        ),
    ),
    Unicode(
        'baby_tone1',
        b'\xf0\x9f\x91\xb6\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc76\ud83c\udffb',
        ),
    ),
    Unicode(
        'baby_tone2',
        b'\xf0\x9f\x91\xb6\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc76\ud83c\udffc',
        ),
    ),
    Unicode(
        'baby_tone3',
        b'\xf0\x9f\x91\xb6\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc76\ud83c\udffd',
        ),
    ),
    Unicode(
        'baby_tone4',
        b'\xf0\x9f\x91\xb6\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc76\ud83c\udffe',
        ),
    ),
    Unicode(
        'baby_tone5',
        b'\xf0\x9f\x91\xb6\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc76\ud83c\udfff',
        ),
    ),
    Unicode(
        'baby_bottle',
        b'\xf0\x9f\x8d\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf7c',
        ),
    ),
    Unicode(
        'baby_chick',
        b'\xf0\x9f\x90\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc24',
        ),
    ),
    Unicode(
        'baby_symbol',
        b'\xf0\x9f\x9a\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udebc',
        ),
    ),
    Unicode(
        'back',
        b'\xf0\x9f\x94\x99'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd19',
        ),
    ),
    Unicode(
        'back_of_hand',
        b'\xf0\x9f\xa4\x9a'.decode('utf8'),
        False,
        (
            'raised_back_of_hand',
        ),
        None,
        (
            '\ud83e\udd1a',
        ),
    ),
    Unicode(
        'back_of_hand_tone1',
        b'\xf0\x9f\xa4\x9a\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'raised_back_of_hand_tone1',
        ),
        None,
        (
            '\ud83e\udd1a\ud83c\udffb',
        ),
    ),
    Unicode(
        'back_of_hand_tone2',
        b'\xf0\x9f\xa4\x9a\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'raised_back_of_hand_tone2',
        ),
        None,
        (
            '\ud83e\udd1a\ud83c\udffc',
        ),
    ),
    Unicode(
        'back_of_hand_tone3',
        b'\xf0\x9f\xa4\x9a\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'raised_back_of_hand_tone3',
        ),
        None,
        (
            '\ud83e\udd1a\ud83c\udffd',
        ),
    ),
    Unicode(
        'back_of_hand_tone4',
        b'\xf0\x9f\xa4\x9a\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'raised_back_of_hand_tone4',
        ),
        None,
        (
            '\ud83e\udd1a\ud83c\udffe',
        ),
    ),
    Unicode(
        'back_of_hand_tone5',
        b'\xf0\x9f\xa4\x9a\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'raised_back_of_hand_tone5',
        ),
        None,
        (
            '\ud83e\udd1a\ud83c\udfff',
        ),
    ),
    Unicode(
        'bacon',
        b'\xf0\x9f\xa5\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd53',
        ),
    ),
    Unicode(
        'badminton',
        b'\xf0\x9f\x8f\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udff8',
        ),
    ),
    Unicode(
        'baggage_claim',
        b'\xf0\x9f\x9b\x84'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udec4',
        ),
    ),
    Unicode(
        'baguette_bread',
        b'\xf0\x9f\xa5\x96'.decode('utf8'),
        False,
        (
            'french_bread',
        ),
        None,
        (
            '\ud83e\udd56',
        ),
    ),
    Unicode(
        'balloon',
        b'\xf0\x9f\x8e\x88'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf88',
        ),
    ),
    Unicode(
        'ballot_box',
        b'\xf0\x9f\x97\xb3'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'ballot_box_with_check',
        b'\xe2\x98\x91'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'bamboo',
        b'\xf0\x9f\x8e\x8d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf8d',
        ),
    ),
    Unicode(
        'banana',
        b'\xf0\x9f\x8d\x8c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf4c',
        ),
    ),
    Unicode(
        'bangbang',
        b'\xe2\x80\xbc'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'bank',
        b'\xf0\x9f\x8f\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfe6',
        ),
    ),
    Unicode(
        'bar_chart',
        b'\xf0\x9f\x93\x8a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcca',
        ),
    ),
    Unicode(
        'barber',
        b'\xf0\x9f\x92\x88'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc88',
        ),
    ),
    Unicode(
        'baseball',
        b'\xe2\x9a\xbe'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'basketball',
        b'\xf0\x9f\x8f\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc0',
        ),
    ),
    Unicode(
        'basketball_player',
        b'\xe2\x9b\xb9'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'basketball_player_tone1',
        b'\xe2\x9b\xb9\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_with_ball_tone1',
            'person_bouncing_ball_tone1'
        ),
        None,
        (
            '⛹\ud83c\udffb',
        ),
    ),
    Unicode(
        'basketball_player_tone2',
        b'\xe2\x9b\xb9\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_with_ball_tone2',
            'person_bouncing_ball_tone2'
        ),
        None,
        (
            '⛹\ud83c\udffc',
        ),
    ),
    Unicode(
        'basketball_player_tone3',
        b'\xe2\x9b\xb9\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_with_ball_tone3',
            'person_bouncing_ball_tone3'
        ),
        None,
        (
            '⛹\ud83c\udffd',
        ),
    ),
    Unicode(
        'basketball_player_tone4',
        b'\xe2\x9b\xb9\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_with_ball_tone4',
            'person_bouncing_ball_tone4'
        ),
        None,
        (
            '⛹\ud83c\udffe',
        ),
    ),
    Unicode(
        'basketball_player_tone5',
        b'\xe2\x9b\xb9\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_with_ball_tone5',
            'person_bouncing_ball_tone5'
        ),
        None,
        (
            '⛹\ud83c\udfff',
        ),
    ),
    Unicode(
        'bat',
        b'\xf0\x9f\xa6\x87'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd87',
        ),
    ),
    Unicode(
        'bath',
        b'\xf0\x9f\x9b\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udec0',
        ),
    ),
    Unicode(
        'bath_tone1',
        b'\xf0\x9f\x9b\x80\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udec0\ud83c\udffb',
        ),
    ),
    Unicode(
        'bath_tone2',
        b'\xf0\x9f\x9b\x80\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udec0\ud83c\udffc',
        ),
    ),
    Unicode(
        'bath_tone3',
        b'\xf0\x9f\x9b\x80\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udec0\ud83c\udffd',
        ),
    ),
    Unicode(
        'bath_tone4',
        b'\xf0\x9f\x9b\x80\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udec0\ud83c\udffe',
        ),
    ),
    Unicode(
        'bath_tone5',
        b'\xf0\x9f\x9b\x80\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udec0\ud83c\udfff',
        ),
    ),
    Unicode(
        'bathtub',
        b'\xf0\x9f\x9b\x81'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udec1',
        ),
    ),
    Unicode(
        'battery',
        b'\xf0\x9f\x94\x8b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd0b',
        ),
    ),
    Unicode(
        'beach',
        b'\xf0\x9f\x8f\x96'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'beach_umbrella',
        b'\xe2\x9b\xb1'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'bear',
        b'\xf0\x9f\x90\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc3b',
        ),
    ),
    Unicode(
        'bed',
        b'\xf0\x9f\x9b\x8f'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'bee',
        b'\xf0\x9f\x90\x9d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc1d',
        ),
    ),
    Unicode(
        'beer',
        b'\xf0\x9f\x8d\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf7a',
        ),
    ),
    Unicode(
        'beers',
        b'\xf0\x9f\x8d\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf7b',
        ),
    ),
    Unicode(
        'beetle',
        b'\xf0\x9f\x90\x9e'.decode('utf8'),
        True,
        None,
        None,
        (
            '\ud83d\udc1e',
        ),
    ),
    Unicode(
        'beginner',
        b'\xf0\x9f\x94\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd30',
        ),
    ),
    Unicode(
        'bell',
        b'\xf0\x9f\x94\x94'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd14',
        ),
    ),
    Unicode(
        'bellhop',
        b'\xf0\x9f\x9b\x8e'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'bento',
        b'\xf0\x9f\x8d\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf71',
        ),
    ),
    Unicode(
        'bicyclist',
        b'\xf0\x9f\x9a\xb4'.decode('utf8'),
        False,
        (
            'person_biking',
        ),
        None,
        (
            '\ud83d\udeb4',
        ),
    ),
    Unicode(
        'bicyclist_tone1',
        b'\xf0\x9f\x9a\xb4\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_biking_tone1',
        ),
        None,
        (
            '\ud83d\udeb4\ud83c\udffb',
        ),
    ),
    Unicode(
        'bicyclist_tone2',
        b'\xf0\x9f\x9a\xb4\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_biking_tone2',
        ),
        None,
        (
            '\ud83d\udeb4\ud83c\udffc',
        ),
    ),
    Unicode(
        'bicyclist_tone3',
        b'\xf0\x9f\x9a\xb4\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_biking_tone3',
        ),
        None,
        (
            '\ud83d\udeb4\ud83c\udffd',
        ),
    ),
    Unicode(
        'bicyclist_tone4',
        b'\xf0\x9f\x9a\xb4\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_biking_tone4',
        ),
        None,
        (
            '\ud83d\udeb4\ud83c\udffe',
        ),
    ),
    Unicode(
        'bicyclist_tone5',
        b'\xf0\x9f\x9a\xb4\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_biking_tone5',
        ),
        None,
        (
            '\ud83d\udeb4\ud83c\udfff',
        ),
    ),
    Unicode(
        'bike',
        b'\xf0\x9f\x9a\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb2',
        ),
    ),
    Unicode(
        'bikini',
        b'\xf0\x9f\x91\x99'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc59',
        ),
    ),
    Unicode(
        'biohazard',
        b'\xe2\x98\xa3'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'bird',
        b'\xf0\x9f\x90\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc26',
        ),
    ),
    Unicode(
        'birthday',
        b'\xf0\x9f\x8e\x82'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf82',
        ),
    ),
    Unicode(
        'black_circle',
        b'\xe2\x9a\xab'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'black_heart',
        b'\xf0\x9f\x96\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udda4',
        ),
    ),
    Unicode(
        'black_joker',
        b'\xf0\x9f\x83\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udccf',
        ),
    ),
    Unicode(
        'black_large_square',
        b'\xe2\xac\x9b'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'black_medium_small_square',
        b'\xe2\x97\xbe'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'black_medium_square',
        b'\xe2\x97\xbc'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'black_nib',
        b'\xe2\x9c\x92'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'black_small_square',
        b'\xe2\x96\xaa'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'black_square_button',
        b'\xf0\x9f\x94\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd32',
        ),
    ),
    Unicode(
        'blossom',
        b'\xf0\x9f\x8c\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf3c',
        ),
    ),
    Unicode(
        'blowfish',
        b'\xf0\x9f\x90\xa1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc21',
        ),
    ),
    Unicode(
        'blue_book',
        b'\xf0\x9f\x93\x98'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcd8',
        ),
    ),
    Unicode(
        'blue_car',
        b'\xf0\x9f\x9a\x99'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude99',
        ),
    ),
    Unicode(
        'blue_heart',
        b'\xf0\x9f\x92\x99'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc99',
        ),
    ),
    Unicode(
        'boar',
        b'\xf0\x9f\x90\x97'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc17',
        ),
    ),
    Unicode(
        'bomb',
        b'\xf0\x9f\x92\xa3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udca3',
        ),
    ),
    Unicode(
        'book',
        b'\xf0\x9f\x93\x96'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcd6',
        ),
    ),
    Unicode(
        'bookmark',
        b'\xf0\x9f\x94\x96'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd16',
        ),
    ),
    Unicode(
        'bookmark_tabs',
        b'\xf0\x9f\x93\x91'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcd1',
        ),
    ),
    Unicode(
        'books',
        b'\xf0\x9f\x93\x9a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcda',
        ),
    ),
    Unicode(
        'boom',
        b'\xf0\x9f\x92\xa5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udca5',
        ),
    ),
    Unicode(
        'boot',
        b'\xf0\x9f\x91\xa2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc62',
        ),
    ),
    Unicode(
        'bottle_with_popping_cork',
        b'\xf0\x9f\x8d\xbe'.decode('utf8'),
        False,
        (
            'champagne',
        ),
        None,
        (
            '\ud83c\udf7e',
        ),
    ),
    Unicode(
        'bouquet',
        b'\xf0\x9f\x92\x90'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc90',
        ),
    ),
    Unicode(
        'bow',
        b'\xf0\x9f\x99\x87'.decode('utf8'),
        False,
        (
            'person_bowing',
        ),
        None,
        (
            '\ud83d\ude47',
        ),
    ),
    Unicode(
        'bow_tone1',
        b'\xf0\x9f\x99\x87\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_bowing_tone1',
        ),
        None,
        (
            '\ud83d\ude47\ud83c\udffb',
        ),
    ),
    Unicode(
        'bow_tone2',
        b'\xf0\x9f\x99\x87\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_bowing_tone2',
        ),
        None,
        (
            '\ud83d\ude47\ud83c\udffc',
        ),
    ),
    Unicode(
        'bow_tone3',
        b'\xf0\x9f\x99\x87\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_bowing_tone3',
        ),
        None,
        (
            '\ud83d\ude47\ud83c\udffd',
        ),
    ),
    Unicode(
        'bow_tone4',
        b'\xf0\x9f\x99\x87\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_bowing_tone4',
        ),
        None,
        (
            '\ud83d\ude47\ud83c\udffe',
        ),
    ),
    Unicode(
        'bow_tone5',
        b'\xf0\x9f\x99\x87\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_bowing_tone5',
        ),
        None,
        (
            '\ud83d\ude47\ud83c\udfff',
        ),
    ),
    Unicode(
        'bowling',
        b'\xf0\x9f\x8e\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfb3',
        ),
    ),
    Unicode(
        'boxing_glove',
        b'\xf0\x9f\xa5\x8a'.decode('utf8'),
        False,
        (
            'boxing_gloves',
        ),
        None,
        (
            '\ud83e\udd4a',
        ),
    ),
    Unicode(
        'boy',
        b'\xf0\x9f\x91\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc66',
        ),
    ),
    Unicode(
        'boy_tone1',
        b'\xf0\x9f\x91\xa6\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc66\ud83c\udffb',
        ),
    ),
    Unicode(
        'boy_tone2',
        b'\xf0\x9f\x91\xa6\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc66\ud83c\udffc',
        ),
    ),
    Unicode(
        'boy_tone3',
        b'\xf0\x9f\x91\xa6\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc66\ud83c\udffd',
        ),
    ),
    Unicode(
        'boy_tone4',
        b'\xf0\x9f\x91\xa6\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc66\ud83c\udffe',
        ),
    ),
    Unicode(
        'boy_tone5',
        b'\xf0\x9f\x91\xa6\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc66\ud83c\udfff',
        ),
    ),
    Unicode(
        'bread',
        b'\xf0\x9f\x8d\x9e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf5e',
        ),
    ),
    Unicode(
        'bride_with_veil',
        b'\xf0\x9f\x91\xb0'.decode('utf8'),
        False,
        (
            'person_with_veil',
        ),
        None,
        (
            '\ud83d\udc70',
        ),
    ),
    Unicode(
        'bride_with_veil_tone1',
        b'\xf0\x9f\x91\xb0\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_with_veil_tone1',
        ),
        None,
        (
            '\ud83d\udc70\ud83c\udffb',
        ),
    ),
    Unicode(
        'bride_with_veil_tone2',
        b'\xf0\x9f\x91\xb0\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_with_veil_tone2',
        ),
        None,
        (
            '\ud83d\udc70\ud83c\udffc',
        ),
    ),
    Unicode(
        'bride_with_veil_tone3',
        b'\xf0\x9f\x91\xb0\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_with_veil_tone3',
        ),
        None,
        (
            '\ud83d\udc70\ud83c\udffd',
        ),
    ),
    Unicode(
        'bride_with_veil_tone4',
        b'\xf0\x9f\x91\xb0\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_with_veil_tone4',
        ),
        None,
        (
            '\ud83d\udc70\ud83c\udffe',
        ),
    ),
    Unicode(
        'bride_with_veil_tone5',
        b'\xf0\x9f\x91\xb0\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_with_veil_tone5',
        ),
        None,
        (
            '\ud83d\udc70\ud83c\udfff',
        ),
    ),
    Unicode(
        'bridge_at_night',
        b'\xf0\x9f\x8c\x89'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf09',
        ),
    ),
    Unicode(
        'briefcase',
        b'\xf0\x9f\x92\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcbc',
        ),
    ),
    Unicode(
        'broken_heart',
        b'\xf0\x9f\x92\x94'.decode('utf8'),
        False,
        None,
        ('</3', '<\\3'),
        (
            '\ud83d\udc94',
        ),
    ),
    Unicode(
        'bug',
        b'\xf0\x9f\x90\x9b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc1b',
        ),
    ),
    Unicode(
        'building_construction',
        b'\xf0\x9f\x8f\x97'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'bulb',
        b'\xf0\x9f\x92\xa1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udca1',
        ),
    ),
    Unicode(
        'bullettrain_front',
        b'\xf0\x9f\x9a\x85'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude85',
        ),
    ),
    Unicode(
        'bullettrain_side',
        b'\xf0\x9f\x9a\x84'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude84',
        ),
    ),
    Unicode(
        'burrito',
        b'\xf0\x9f\x8c\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf2f',
        ),
    ),
    Unicode(
        'bus',
        b'\xf0\x9f\x9a\x8c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude8c',
        ),
    ),
    Unicode(
        'busstop',
        b'\xf0\x9f\x9a\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude8f',
        ),
    ),
    Unicode(
        'bust_in_silhouette',
        b'\xf0\x9f\x91\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc64',
        ),
    ),
    Unicode(
        'busts_in_silhouette',
        b'\xf0\x9f\x91\xa5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc65',
        ),
    ),
    Unicode(
        'butterfly',
        b'\xf0\x9f\xa6\x8b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd8b',
        ),
    ),
    Unicode(
        'cactus',
        b'\xf0\x9f\x8c\xb5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf35',
        ),
    ),
    Unicode(
        'cake',
        b'\xf0\x9f\x8d\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf70',
        ),
    ),
    Unicode(
        'calendar',
        b'\xf0\x9f\x93\x86'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcc6',
        ),
    ),
    Unicode(
        'calendar_spiral',
        b'\xf0\x9f\x97\x93'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'call_me',
        b'\xf0\x9f\xa4\x99'.decode('utf8'),
        False,
        (
            'call_me_hand',
        ),
        None,
        (
            '\ud83e\udd19',
        ),
    ),
    Unicode(
        'call_me_tone1',
        b'\xf0\x9f\xa4\x99\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'call_me_hand_tone1',
        ),
        None,
        (
            '\ud83e\udd19\ud83c\udffb',
        ),
    ),
    Unicode(
        'call_me_tone2',
        b'\xf0\x9f\xa4\x99\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'call_me_hand_tone2',
        ),
        None,
        (
            '\ud83e\udd19\ud83c\udffc',
        ),
    ),
    Unicode(
        'call_me_tone3',
        b'\xf0\x9f\xa4\x99\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'call_me_hand_tone3',
        ),
        None,
        (
            '\ud83e\udd19\ud83c\udffd',
        ),
    ),
    Unicode(
        'call_me_tone4',
        b'\xf0\x9f\xa4\x99\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'call_me_hand_tone4',
        ),
        None,
        (
            '\ud83e\udd19\ud83c\udffe',
        ),
    ),
    Unicode(
        'call_me_tone5',
        b'\xf0\x9f\xa4\x99\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'call_me_hand_tone5',
        ),
        None,
        (
            '\ud83e\udd19\ud83c\udfff',
        ),
    ),
    Unicode(
        'calling',
        b'\xf0\x9f\x93\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcf2',
        ),
    ),
    Unicode(
        'camel',
        b'\xf0\x9f\x90\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc2b',
        ),
    ),
    Unicode(
        'camera',
        b'\xf0\x9f\x93\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcf7',
        ),
    ),
    Unicode(
        'camera_with_flash',
        b'\xf0\x9f\x93\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcf8',
        ),
    ),
    Unicode(
        'camping',
        b'\xf0\x9f\x8f\x95'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'cancer',
        b'\xe2\x99\x8b'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'candle',
        b'\xf0\x9f\x95\xaf'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'candy',
        b'\xf0\x9f\x8d\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf6c',
        ),
    ),
    Unicode(
        'canoe',
        b'\xf0\x9f\x9b\xb6'.decode('utf8'),
        False,
        (
            'kayak',
        ),
        None,
        (
            '\ud83d\udef6',
        ),
    ),
    Unicode(
        'capital_abcd',
        b'\xf0\x9f\x94\xa0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd20',
        ),
    ),
    Unicode(
        'capricorn',
        b'\xe2\x99\x91'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'card_box',
        b'\xf0\x9f\x97\x83'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'card_index',
        b'\xf0\x9f\x93\x87'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcc7',
        ),
    ),
    Unicode(
        'card_index_dividers',
        b'\xf0\x9f\x97\x82'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'carousel_horse',
        b'\xf0\x9f\x8e\xa0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfa0',
        ),
    ),
    Unicode(
        'carrot',
        b'\xf0\x9f\xa5\x95'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd55',
        ),
    ),
    Unicode(
        'cartwheel',
        b'\xf0\x9f\xa4\xb8'.decode('utf8'),
        False,
        (
            'person_doing_cartwheel',
        ),
        None,
        (
            '\ud83e\udd38',
        ),
    ),
    Unicode(
        'cartwheel_tone1',
        b'\xf0\x9f\xa4\xb8\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_doing_cartwheel_tone1',
        ),
        None,
        (
            '\ud83e\udd38\ud83c\udffb',
        ),
    ),
    Unicode(
        'cartwheel_tone2',
        b'\xf0\x9f\xa4\xb8\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_doing_cartwheel_tone2',
        ),
        None,
        (
            '\ud83e\udd38\ud83c\udffc',
        ),
    ),
    Unicode(
        'cartwheel_tone3',
        b'\xf0\x9f\xa4\xb8\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_doing_cartwheel_tone3',
        ),
        None,
        (
            '\ud83e\udd38\ud83c\udffd',
        ),
    ),
    Unicode(
        'cartwheel_tone4',
        b'\xf0\x9f\xa4\xb8\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_doing_cartwheel_tone4',
        ),
        None,
        (
            '\ud83e\udd38\ud83c\udffe',
        ),
    ),
    Unicode(
        'cartwheel_tone5',
        b'\xf0\x9f\xa4\xb8\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_doing_cartwheel_tone5',
        ),
        None,
        (
            '\ud83e\udd38\ud83c\udfff',
        ),
    ),
    Unicode(
        'cat2',
        b'\xf0\x9f\x90\x88'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc08',
        ),
    ),
    Unicode(
        'cat',
        b'\xf0\x9f\x90\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc31',
        ),
    ),
    Unicode(
        'cd',
        b'\xf0\x9f\x92\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcbf',
        ),
    ),
    Unicode(
        'chains',
        b'\xe2\x9b\x93'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'champagne_glass',
        b'\xf0\x9f\xa5\x82'.decode('utf8'),
        False,
        (
            'clinking_glass',
        ),
        None,
        (
            '\ud83e\udd42',
        ),
    ),
    Unicode(
        'chart',
        b'\xf0\x9f\x92\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcb9',
        ),
    ),
    Unicode(
        'chart_with_downwards_trend',
        b'\xf0\x9f\x93\x89'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcc9',
        ),
    ),
    Unicode(
        'chart_with_upwards_trend',
        b'\xf0\x9f\x93\x88'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcc8',
        ),
    ),
    Unicode(
        'checkered_flag',
        b'\xf0\x9f\x8f\x81'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc1',
        ),
    ),
    Unicode(
        'cheese',
        b'\xf0\x9f\xa7\x80'.decode('utf8'),
        False,
        (
            'cheese_wedge',
        ),
        None,
        (
            '\ud83e\uddc0',
        ),
    ),
    Unicode(
        'cherries',
        b'\xf0\x9f\x8d\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf52',
        ),
    ),
    Unicode(
        'cherry_blossom',
        b'\xf0\x9f\x8c\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf38',
        ),
    ),
    Unicode(
        'chestnut',
        b'\xf0\x9f\x8c\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf30',
        ),
    ),
    Unicode(
        'chicken',
        b'\xf0\x9f\x90\x94'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc14',
        ),
    ),
    Unicode(
        'children_crossing',
        b'\xf0\x9f\x9a\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb8',
        ),
    ),
    Unicode(
        'chipmunk',
        b'\xf0\x9f\x90\xbf'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'chocolate_bar',
        b'\xf0\x9f\x8d\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf6b',
        ),
    ),
    Unicode(
        'christmas_tree',
        b'\xf0\x9f\x8e\x84'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf84',
        ),
    ),
    Unicode(
        'church',
        b'\xe2\x9b\xaa'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'cinema',
        b'\xf0\x9f\x8e\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfa6',
        ),
    ),
    Unicode(
        'circus_tent',
        b'\xf0\x9f\x8e\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfaa',
        ),
    ),
    Unicode(
        'city_dusk',
        b'\xf0\x9f\x8c\x86'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf06',
        ),
    ),
    Unicode(
        'city_sunrise',
        b'\xf0\x9f\x8c\x87'.decode('utf8'),
        False,
        (
            'city_sunset',
        ),
        None,
        (
            '\ud83c\udf07',
        ),
    ),
    Unicode(
        'cityscape',
        b'\xf0\x9f\x8f\x99'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'cl',
        b'\xf0\x9f\x86\x91'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udd91',
        ),
    ),
    Unicode(
        'clap',
        b'\xf0\x9f\x91\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4f',
        ),
    ),
    Unicode(
        'clap_tone1',
        b'\xf0\x9f\x91\x8f\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4f\ud83c\udffb',
        ),
    ),
    Unicode(
        'clap_tone2',
        b'\xf0\x9f\x91\x8f\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4f\ud83c\udffc',
        ),
    ),
    Unicode(
        'clap_tone3',
        b'\xf0\x9f\x91\x8f\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4f\ud83c\udffd',
        ),
    ),
    Unicode(
        'clap_tone4',
        b'\xf0\x9f\x91\x8f\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4f\ud83c\udffe',
        ),
    ),
    Unicode(
        'clap_tone5',
        b'\xf0\x9f\x91\x8f\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4f\ud83c\udfff',
        ),
    ),
    Unicode(
        'clapper',
        b'\xf0\x9f\x8e\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfac',
        ),
    ),
    Unicode(
        'classical_building',
        b'\xf0\x9f\x8f\x9b'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'clipboard',
        b'\xf0\x9f\x93\x8b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udccb',
        ),
    ),
    Unicode(
        'clock1030',
        b'\xf0\x9f\x95\xa5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd65',
        ),
    ),
    Unicode(
        'clock10',
        b'\xf0\x9f\x95\x99'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd59',
        ),
    ),
    Unicode(
        'clock1130',
        b'\xf0\x9f\x95\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd66',
        ),
    ),
    Unicode(
        'clock11',
        b'\xf0\x9f\x95\x9a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd5a',
        ),
    ),
    Unicode(
        'clock1230',
        b'\xf0\x9f\x95\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd67',
        ),
    ),
    Unicode(
        'clock12',
        b'\xf0\x9f\x95\x9b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd5b',
        ),
    ),
    Unicode(
        'clock130',
        b'\xf0\x9f\x95\x9c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd5c',
        ),
    ),
    Unicode(
        'clock1',
        b'\xf0\x9f\x95\x90'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd50',
        ),
    ),
    Unicode(
        'clock230',
        b'\xf0\x9f\x95\x9d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd5d',
        ),
    ),
    Unicode(
        'clock2',
        b'\xf0\x9f\x95\x91'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd51',
        ),
    ),
    Unicode(
        'clock330',
        b'\xf0\x9f\x95\x9e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd5e',
        ),
    ),
    Unicode(
        'clock3',
        b'\xf0\x9f\x95\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd52',
        ),
    ),
    Unicode(
        'clock430',
        b'\xf0\x9f\x95\x9f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd5f',
        ),
    ),
    Unicode(
        'clock4',
        b'\xf0\x9f\x95\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd53',
        ),
    ),
    Unicode(
        'clock530',
        b'\xf0\x9f\x95\xa0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd60',
        ),
    ),
    Unicode(
        'clock5',
        b'\xf0\x9f\x95\x94'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd54',
        ),
    ),
    Unicode(
        'clock630',
        b'\xf0\x9f\x95\xa1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd61',
        ),
    ),
    Unicode(
        'clock6',
        b'\xf0\x9f\x95\x95'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd55',
        ),
    ),
    Unicode(
        'clock730',
        b'\xf0\x9f\x95\xa2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd62',
        ),
    ),
    Unicode(
        'clock7',
        b'\xf0\x9f\x95\x96'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd56',
        ),
    ),
    Unicode(
        'clock830',
        b'\xf0\x9f\x95\xa3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd63',
        ),
    ),
    Unicode(
        'clock8',
        b'\xf0\x9f\x95\x97'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd57',
        ),
    ),
    Unicode(
        'clock930',
        b'\xf0\x9f\x95\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd64',
        ),
    ),
    Unicode(
        'clock9',
        b'\xf0\x9f\x95\x98'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd58',
        ),
    ),
    Unicode(
        'clock',
        b'\xf0\x9f\x95\xb0'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'closed_book',
        b'\xf0\x9f\x93\x95'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcd5',
        ),
    ),
    Unicode(
        'closed_lock_with_key',
        b'\xf0\x9f\x94\x90'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd10',
        ),
    ),
    Unicode(
        'closed_umbrella',
        b'\xf0\x9f\x8c\x82'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf02',
        ),
    ),
    Unicode(
        'cloud',
        b'\xe2\x98\x81'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'cloud_lightning',
        b'\xf0\x9f\x8c\xa9'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'cloud_rain',
        b'\xf0\x9f\x8c\xa7'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'cloud_snow',
        b'\xf0\x9f\x8c\xa8'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'cloud_tornado',
        b'\xf0\x9f\x8c\xaa'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'clown',
        b'\xf0\x9f\xa4\xa1'.decode('utf8'),
        False,
        (
            'clown_face',
        ),
        None,
        (
            '\ud83e\udd21',
        ),
    ),
    Unicode(
        'clubs',
        b'\xe2\x99\xa3'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'cocktail',
        b'\xf0\x9f\x8d\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf78',
        ),
    ),
    Unicode(
        'coffee',
        b'\xe2\x98\x95'.decode('utf8'),
        False,
        (
            'hot_beverage',
        ),
        None,
        None,
    ),
    Unicode(
        'coffin',
        b'\xe2\x9a\xb0'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'cold_sweat',
        b'\xf0\x9f\x98\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude30',
        ),
    ),
    Unicode(
        'comet',
        b'\xe2\x98\x84'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'compression',
        b'\xf0\x9f\x97\x9c'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'computer',
        b'\xf0\x9f\x92\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcbb',
        ),
    ),
    Unicode(
        'confetti_ball',
        b'\xf0\x9f\x8e\x8a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf8a',
        ),
    ),
    Unicode(
        'confounded',
        b'\xf0\x9f\x98\x96'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude16',
        ),
    ),
    Unicode(
        'congratulations',
        b'\xe3\x8a\x97'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'construction',
        b'\xf0\x9f\x9a\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udea7',
        ),
    ),
    Unicode(
        'construction_worker',
        b'\xf0\x9f\x91\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc77',
        ),
    ),
    Unicode(
        'construction_worker_tone1',
        b'\xf0\x9f\x91\xb7\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc77\ud83c\udffb',
        ),
    ),
    Unicode(
        'construction_worker_tone2',
        b'\xf0\x9f\x91\xb7\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc77\ud83c\udffc',
        ),
    ),
    Unicode(
        'construction_worker_tone3',
        b'\xf0\x9f\x91\xb7\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc77\ud83c\udffd',
        ),
    ),
    Unicode(
        'construction_worker_tone4',
        b'\xf0\x9f\x91\xb7\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc77\ud83c\udffe',
        ),
    ),
    Unicode(
        'construction_worker_tone5',
        b'\xf0\x9f\x91\xb7\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc77\ud83c\udfff',
        ),
    ),
    Unicode(
        'control_knobs',
        b'\xf0\x9f\x8e\x9b'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'convenience_store',
        b'\xf0\x9f\x8f\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfea',
        ),
    ),
    Unicode(
        'cookie',
        b'\xf0\x9f\x8d\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf6a',
        ),
    ),
    Unicode(
        'cooking',
        b'\xf0\x9f\x8d\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf73',
        ),
    ),
    Unicode(
        'cool',
        b'\xf0\x9f\x86\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udd92',
        ),
    ),
    Unicode(
        'cop',
        b'\xf0\x9f\x91\xae'.decode('utf8'),
        False,
        (
            'police_officer',
        ),
        None,
        (
            '\ud83d\udc6e',
        ),
    ),
    Unicode(
        'cop_tone1',
        b'\xf0\x9f\x91\xae\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'police_officer_tone1',
        ),
        None,
        (
            '\ud83d\udc6e\ud83c\udffb',
        ),
    ),
    Unicode(
        'cop_tone2',
        b'\xf0\x9f\x91\xae\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'police_officer_tone2',
        ),
        None,
        (
            '\ud83d\udc6e\ud83c\udffc',
        ),
    ),
    Unicode(
        'cop_tone3',
        b'\xf0\x9f\x91\xae\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'police_officer_tone3',
        ),
        None,
        (
            '\ud83d\udc6e\ud83c\udffd',
        ),
    ),
    Unicode(
        'cop_tone4',
        b'\xf0\x9f\x91\xae\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'police_officer_tone4',
        ),
        None,
        (
            '\ud83d\udc6e\ud83c\udffe',
        ),
    ),
    Unicode(
        'cop_tone5',
        b'\xf0\x9f\x91\xae\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'police_officer_tone5',
        ),
        None,
        (
            '\ud83d\udc6e\ud83c\udfff',
        ),
    ),
    Unicode(
        'copyright',
        b'\xc2\xa9'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'corn',
        b'\xf0\x9f\x8c\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf3d',
        ),
    ),
    Unicode(
        'couch',
        b'\xf0\x9f\x9b\x8b'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'couple',
        b'\xf0\x9f\x91\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6b',
        ),
    ),
    Unicode(
        'couple_mm',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8'.decode('utf8'),
        False,
        (
            'couple_with_heart_mm',
        ),
        None,
        (
            '\ud83d\udc68\u200d❤️\u200d\ud83d\udc68',
        ),
    ),
    Unicode(
        'couple_with_heart',
        b'\xf0\x9f\x92\x91'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc91',
        ),
    ),
    Unicode(
        'couple_with_heart_ww',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9'.decode('utf8'),
        False,
        (
            'couple_ww',
        ),
        None,
        (
            '\ud83d\udc69\u200d❤️\u200d\ud83d\udc69',
        ),
    ),
    Unicode(
        'couplekiss',
        b'\xf0\x9f\x92\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc8f',
        ),
    ),
    Unicode(
        'couplekiss_mm',
        (
            b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8'
        ).decode('utf8'),
        False,
        (
            'kiss_mm',
        ),
        None,
        (
            '\ud83d\udc68\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68',
        ),
    ),
    Unicode(
        'couplekiss_ww',
        (
            b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9'
        ).decode('utf8'),
        False,
        (
            'kiss_ww',
        ),
        None,
        (
            '\ud83d\udc69\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69',
        ),
    ),
    Unicode(
        'cow2',
        b'\xf0\x9f\x90\x84'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc04',
        ),
    ),
    Unicode(
        'cow',
        b'\xf0\x9f\x90\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc2e',
        ),
    ),
    Unicode(
        'cowboy',
        b'\xf0\x9f\xa4\xa0'.decode('utf8'),
        False,
        (
            'face_with_cowboy_hat',
        ),
        None,
        (
            '\ud83e\udd20',
        ),
    ),
    Unicode(
        'crab',
        b'\xf0\x9f\xa6\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd80',
        ),
    ),
    Unicode(
        'crayon',
        b'\xf0\x9f\x96\x8d'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'credit_card',
        b'\xf0\x9f\x92\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcb3',
        ),
    ),
    Unicode(
        'crescent_moon',
        b'\xf0\x9f\x8c\x99'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf19',
        ),
    ),
    Unicode(
        'cricket',
        b'\xf0\x9f\x8f\x8f'.decode('utf8'),
        True,
        None,
        None,
        (
            '\ud83c\udfcf',
        ),
    ),
    Unicode(
        'crocodile',
        b'\xf0\x9f\x90\x8a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc0a',
        ),
    ),
    Unicode(
        'croissant',
        b'\xf0\x9f\xa5\x90'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd50',
        ),
    ),
    Unicode(
        'cross',
        b'\xe2\x9c\x9d'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'crossed_flags',
        b'\xf0\x9f\x8e\x8c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf8c',
        ),
    ),
    Unicode(
        'crossed_swords',
        b'\xe2\x9a\x94'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'crown',
        b'\xf0\x9f\x91\x91'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc51',
        ),
    ),
    Unicode(
        'cruise_ship',
        b'\xf0\x9f\x9b\xb3'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'crying_cat_face',
        b'\xf0\x9f\x98\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude3f',
        ),
    ),
    Unicode(
        'crystal_ball',
        b'\xf0\x9f\x94\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd2e',
        ),
    ),
    Unicode(
        'cucumber',
        b'\xf0\x9f\xa5\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd52',
        ),
    ),
    Unicode(
        'cupid',
        b'\xf0\x9f\x92\x98'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc98',
        ),
    ),
    Unicode(
        'curly_loop',
        b'\xe2\x9e\xb0'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'currency_exchange',
        b'\xf0\x9f\x92\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcb1',
        ),
    ),
    Unicode(
        'curry',
        b'\xf0\x9f\x8d\x9b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf5b',
        ),
    ),
    Unicode(
        'custard',
        b'\xf0\x9f\x8d\xae'.decode('utf8'),
        False,
        (
            'flan',
            'pudding'
        ),
        None,
        (
            '\ud83c\udf6e',
        ),
    ),
    Unicode(
        'customs',
        b'\xf0\x9f\x9b\x83'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udec3',
        ),
    ),
    Unicode(
        'cyclone',
        b'\xf0\x9f\x8c\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf00',
        ),
    ),
    Unicode(
        'dagger',
        b'\xf0\x9f\x97\xa1'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'dancer',
        b'\xf0\x9f\x92\x83'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc83',
        ),
    ),
    Unicode(
        'dancer_tone1',
        b'\xf0\x9f\x92\x83\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc83\ud83c\udffb',
        ),
    ),
    Unicode(
        'dancer_tone2',
        b'\xf0\x9f\x92\x83\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc83\ud83c\udffc',
        ),
    ),
    Unicode(
        'dancer_tone3',
        b'\xf0\x9f\x92\x83\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc83\ud83c\udffd',
        ),
    ),
    Unicode(
        'dancer_tone4',
        b'\xf0\x9f\x92\x83\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc83\ud83c\udffe',
        ),
    ),
    Unicode(
        'dancer_tone5',
        b'\xf0\x9f\x92\x83\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc83\ud83c\udfff',
        ),
    ),
    Unicode(
        'dancers',
        b'\xf0\x9f\x91\xaf'.decode('utf8'),
        False,
        (
            'people_with_bunny_ears_partying',
        ),
        None,
        (
            '\ud83d\udc6f',
        ),
    ),
    Unicode(
        'dango',
        b'\xf0\x9f\x8d\xa1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf61',
        ),
    ),
    Unicode(
        'dark_sunglasses',
        b'\xf0\x9f\x95\xb6'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'dart',
        b'\xf0\x9f\x8e\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfaf',
        ),
    ),
    Unicode(
        'dash',
        b'\xf0\x9f\x92\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udca8',
        ),
    ),
    Unicode(
        'date',
        b'\xf0\x9f\x93\x85'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcc5',
        ),
    ),
    Unicode(
        'deciduous_tree',
        b'\xf0\x9f\x8c\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf33',
        ),
    ),
    Unicode(
        'deer',
        b'\xf0\x9f\xa6\x8c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd8c',
        ),
    ),
    Unicode(
        'department_store',
        b'\xf0\x9f\x8f\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfec',
        ),
    ),
    Unicode(
        'derelict_house_building',
        b'\xf0\x9f\x8f\x9a'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'desert',
        b'\xf0\x9f\x8f\x9c'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'desert_island',
        b'\xf0\x9f\x8f\x9d'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'desktop',
        b'\xf0\x9f\x96\xa5'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'diamond_shape_with_a_dot_inside',
        b'\xf0\x9f\x92\xa0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udca0',
        ),
    ),
    Unicode(
        'diamonds',
        b'\xe2\x99\xa6'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'disappointed',
        b'\xf0\x9f\x98\x9e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude1e',
        ),
    ),
    Unicode(
        'disappointed_relieved',
        b'\xf0\x9f\x98\xa5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude25',
        ),
    ),
    Unicode(
        'dizzy',
        b'\xf0\x9f\x92\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcab',
        ),
    ),
    Unicode(
        'dizzy_face',
        b'\xf0\x9f\x98\xb5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude35',
        ),
    ),
    Unicode(
        'do_not_litter',
        b'\xf0\x9f\x9a\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeaf',
        ),
    ),
    Unicode(
        'dog2',
        b'\xf0\x9f\x90\x95'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc15',
        ),
    ),
    Unicode(
        'dog',
        b'\xf0\x9f\x90\xb6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc36',
        ),
    ),
    Unicode(
        'dollar',
        b'\xf0\x9f\x92\xb5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcb5',
        ),
    ),
    Unicode(
        'dolls',
        b'\xf0\x9f\x8e\x8e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf8e',
        ),
    ),
    Unicode(
        'dolphin',
        b'\xf0\x9f\x90\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc2c',
        ),
    ),
    Unicode(
        'door',
        b'\xf0\x9f\x9a\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeaa',
        ),
    ),
    Unicode(
        'double_vertical_bar',
        b'\xe2\x8f\xb8'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'doughnut',
        b'\xf0\x9f\x8d\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf69',
        ),
    ),
    Unicode(
        'dove',
        b'\xf0\x9f\x95\x8a'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'dragon',
        b'\xf0\x9f\x90\x89'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc09',
        ),
    ),
    Unicode(
        'dragon_face',
        b'\xf0\x9f\x90\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc32',
        ),
    ),
    Unicode(
        'dress',
        b'\xf0\x9f\x91\x97'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc57',
        ),
    ),
    Unicode(
        'dromedary_camel',
        b'\xf0\x9f\x90\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc2a',
        ),
    ),
    Unicode(
        'drool',
        b'\xf0\x9f\xa4\xa4'.decode('utf8'),
        False,
        (
            'drooling_face',
        ),
        None,
        (
            '\ud83e\udd24',
        ),
    ),
    Unicode(
        'droplet',
        b'\xf0\x9f\x92\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udca7',
        ),
    ),
    Unicode(
        'drum',
        b'\xf0\x9f\xa5\x81'.decode('utf8'),
        False,
        (
            'drum_with_drumsticks',
        ),
        None,
        (
            '\ud83e\udd41',
        ),
    ),
    Unicode(
        'duck',
        b'\xf0\x9f\xa6\x86'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd86',
        ),
    ),
    Unicode(
        'dvd',
        b'\xf0\x9f\x93\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcc0',
        ),
    ),
    Unicode(
        'e_mail',
        b'\xf0\x9f\x93\xa7'.decode('utf8'),
        False,
        (
            'email',
        ),
        None,
        (
            '\ud83d\udce7',
        ),
    ),
    Unicode(
        'eagle',
        b'\xf0\x9f\xa6\x85'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd85',
        ),
    ),
    Unicode(
        'ear',
        b'\xf0\x9f\x91\x82'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc42',
        ),
    ),
    Unicode(
        'ear_tone1',
        b'\xf0\x9f\x91\x82\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc42\ud83c\udffb',
        ),
    ),
    Unicode(
        'ear_tone2',
        b'\xf0\x9f\x91\x82\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc42\ud83c\udffc',
        ),
    ),
    Unicode(
        'ear_tone3',
        b'\xf0\x9f\x91\x82\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc42\ud83c\udffd',
        ),
    ),
    Unicode(
        'ear_tone4',
        b'\xf0\x9f\x91\x82\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc42\ud83c\udffe',
        ),
    ),
    Unicode(
        'ear_tone5',
        b'\xf0\x9f\x91\x82\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc42\ud83c\udfff',
        ),
    ),
    Unicode(
        'ear_of_rice',
        b'\xf0\x9f\x8c\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf3e',
        ),
    ),
    Unicode(
        'earth_africa',
        b'\xf0\x9f\x8c\x8d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf0d',
        ),
    ),
    Unicode(
        'earth_americas',
        b'\xf0\x9f\x8c\x8e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf0e',
        ),
    ),
    Unicode(
        'earth_asia',
        b'\xf0\x9f\x8c\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf0f',
        ),
    ),
    Unicode(
        'egg',
        b'\xf0\x9f\xa5\x9a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd5a',
        ),
    ),
    Unicode(
        'eggplant',
        b'\xf0\x9f\x8d\x86'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf46',
        ),
    ),
    Unicode(
        'eight',
        b'8\xe2\x83\xa3'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'eight_pointed_black_star',
        b'\xe2\x9c\xb4'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'eight_spoked_asterisk',
        b'\xe2\x9c\xb3'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'eject',
        b'\xe2\x8f\x8f'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'electric_plug',
        b'\xf0\x9f\x94\x8c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd0c',
        ),
    ),
    Unicode(
        'elephant',
        b'\xf0\x9f\x90\x98'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc18',
        ),
    ),
    Unicode(
        'end',
        b'\xf0\x9f\x94\x9a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd1a',
        ),
    ),
    Unicode(
        'envelope',
        b'\xe2\x9c\x89'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'envelope_with_arrow',
        b'\xf0\x9f\x93\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udce9',
        ),
    ),
    Unicode(
        'euro',
        b'\xf0\x9f\x92\xb6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcb6',
        ),
    ),
    Unicode(
        'european_castle',
        b'\xf0\x9f\x8f\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udff0',
        ),
    ),
    Unicode(
        'european_post_office',
        b'\xf0\x9f\x8f\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfe4',
        ),
    ),
    Unicode(
        'evergreen_tree',
        b'\xf0\x9f\x8c\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf32',
        ),
    ),
    Unicode(
        'exclamation',
        b'\xe2\x9d\x97'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'expecting_woman',
        b'\xf0\x9f\xa4\xb0'.decode('utf8'),
        False,
        (
            'pregnant_woman',
        ),
        None,
        (
            '\ud83e\udd30',
        ),
    ),
    Unicode(
        'expecting_woman_tone1',
        b'\xf0\x9f\xa4\xb0\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'pregnant_woman_tone1',
        ),
        None,
        (
            '\ud83e\udd30\ud83c\udffb',
        ),
    ),
    Unicode(
        'expecting_woman_tone2',
        b'\xf0\x9f\xa4\xb0\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'pregnant_woman_tone2',
        ),
        None,
        (
            '\ud83e\udd30\ud83c\udffc',
        ),
    ),
    Unicode(
        'expecting_woman_tone3',
        b'\xf0\x9f\xa4\xb0\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'pregnant_woman_tone3',
        ),
        None,
        (
            '\ud83e\udd30\ud83c\udffd',
        ),
    ),
    Unicode(
        'expecting_woman_tone4',
        b'\xf0\x9f\xa4\xb0\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'pregnant_woman_tone4',
        ),
        None,
        (
            '\ud83e\udd30\ud83c\udffe',
        ),
    ),
    Unicode(
        'expecting_woman_tone5',
        b'\xf0\x9f\xa4\xb0\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'pregnant_woman_tone5',
        ),
        None,
        (
            '\ud83e\udd30\ud83c\udfff',
        ),
    ),
    Unicode(
        'expressionless',
        b'\xf0\x9f\x98\x91'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude11',
        ),
    ),
    Unicode(
        'eye',
        b'\xf0\x9f\x91\x81'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'eye_in_speech_bubble',
        b'\xf0\x9f\x91\x81\xe2\x80\x8d\xf0\x9f\x97\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc41\u200d\ud83d\udde8',
        ),
    ),
    Unicode(
        'eyeglasses',
        b'\xf0\x9f\x91\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc53',
        ),
    ),
    Unicode(
        'eyes',
        b'\xf0\x9f\x91\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc40',
        ),
    ),
    Unicode(
        'face_palm',
        b'\xf0\x9f\xa4\xa6'.decode('utf8'),
        False,
        (
            'facepalm',
            'person_facepalming'
        ),
        None,
        (
            '\ud83e\udd26',
        ),
    ),
    Unicode(
        'face_palm_tone1',
        b'\xf0\x9f\xa4\xa6\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'facepalm_tone1',
            'person_facepalming_tone1'
        ),
        None,
        (
            '\ud83e\udd26\ud83c\udffb',
        ),
    ),
    Unicode(
        'face_palm_tone2',
        b'\xf0\x9f\xa4\xa6\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'facepalm_tone2',
            'person_facepalming_tone2'
        ),
        None,
        (
            '\ud83e\udd26\ud83c\udffc',
        ),
    ),
    Unicode(
        'face_palm_tone3',
        b'\xf0\x9f\xa4\xa6\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'facepalm_tone3',
            'person_facepalming_tone3'
        ),
        None,
        (
            '\ud83e\udd26\ud83c\udffd',
        ),
    ),
    Unicode(
        'face_palm_tone4',
        b'\xf0\x9f\xa4\xa6\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'facepalm_tone4',
            'person_facepalming_tone4'
        ),
        None,
        (
            '\ud83e\udd26\ud83c\udffe',
        ),
    ),
    Unicode(
        'face_palm_tone5',
        b'\xf0\x9f\xa4\xa6\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'facepalm_tone5',
            'person_facepalming_tone5'
        ),
        None,
        (
            '\ud83e\udd26\ud83c\udfff',
        ),
    ),
    Unicode(
        'face_with_head_bandage',
        b'\xf0\x9f\xa4\x95'.decode('utf8'),
        False,
        (
            'head_bandage',
        ),
        None,
        (
            '\ud83e\udd15',
        ),
    ),
    Unicode(
        'face_with_rolling_eyes',
        b'\xf0\x9f\x99\x84'.decode('utf8'),
        False,
        (
            'rolling_eyes',
        ),
        None,
        (
            '\ud83d\ude44',
        ),
    ),
    Unicode(
        'face_with_thermometer',
        b'\xf0\x9f\xa4\x92'.decode('utf8'),
        False,
        (
            'thermometer_face',
        ),
        None,
        (
            '\ud83e\udd12',
        ),
    ),
    Unicode(
        'factory',
        b'\xf0\x9f\x8f\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfed',
        ),
    ),
    Unicode(
        'fallen_leaf',
        b'\xf0\x9f\x8d\x82'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf42',
        ),
    ),
    Unicode(
        'family',
        b'\xf0\x9f\x91\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6a',
        ),
    ),
    Unicode(
        'family_mmb',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc66',
        ),
    ),
    Unicode(
        'family_mmbb',
        (
            b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa8\xe2\x80'
            b'\x8d\xf0\x9f\x91\xa6\xe2\x80\x8d\xf0\x9f\x91\xa6'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66',
        ),
    ),
    Unicode(
        'family_mmg',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67',
        ),
    ),
    Unicode(
        'family_mmgb',
        (
            b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa8\xe2\x80'
            b'\x8d\xf0\x9f\x91\xa7\xe2\x80\x8d\xf0\x9f\x91\xa6'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc66',
        ),
    ),
    Unicode(
        'family_mmgg',
        (
            b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa8\xe2\x80'
            b'\x8d\xf0\x9f\x91\xa7\xe2\x80\x8d\xf0\x9f\x91\xa7'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67',
        ),
    ),
    Unicode(
        'family_mwbb',
        (
            b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa9\xe2\x80'
            b'\x8d\xf0\x9f\x91\xa6\xe2\x80\x8d\xf0\x9f\x91\xa6'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66',
        ),
    ),
    Unicode(
        'family_mwg',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67',
        ),
    ),
    Unicode(
        'family_mwgb',
        (
            b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa9\xe2\x80'
            b'\x8d\xf0\x9f\x91\xa7\xe2\x80\x8d\xf0\x9f\x91\xa6'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66',
        ),
    ),
    Unicode(
        'family_mwgg',
        (
            b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa9\xe2\x80'
            b'\x8d\xf0\x9f\x91\xa7\xe2\x80\x8d\xf0\x9f\x91\xa7'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67',
        ),
    ),
    Unicode(
        'family_wwb',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66',
        ),
    ),
    Unicode(
        'family_wwbb',
        (
            b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa9\xe2\x80'
            b'\x8d\xf0\x9f\x91\xa6\xe2\x80\x8d\xf0\x9f\x91\xa6'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66',
        ),
    ),
    Unicode(
        'family_wwg',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc67',
        ),
    ),
    Unicode(
        'family_wwgb',
        (
            b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa9\xe2\x80'
            b'\x8d\xf0\x9f\x91\xa7\xe2\x80\x8d\xf0\x9f\x91\xa6'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66',
        ),
    ),
    Unicode(
        'family_wwgg',
        (
            b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa9\xe2\x80'
            b'\x8d\xf0\x9f\x91\xa7\xe2\x80\x8d\xf0\x9f\x91\xa7'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67',
        ),
    ),
    Unicode(
        'fast_forward',
        b'\xe2\x8f\xa9'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'fax',
        b'\xf0\x9f\x93\xa0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udce0',
        ),
    ),
    Unicode(
        'fearful',
        b'\xf0\x9f\x98\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude28',
        ),
    ),
    Unicode(
        'feet',
        b'\xf0\x9f\x90\xbe'.decode('utf8'),
        False,
        (
            'paw_prints',
        ),
        None,
        (
            '\ud83d\udc3e',
        ),
    ),
    Unicode(
        'fencer',
        b'\xf0\x9f\xa4\xba'.decode('utf8'),
        False,
        (
            'fencing',
            'person_fencing'
        ),
        None,
        (
            '\ud83e\udd3a',
        ),
    ),
    Unicode(
        'ferris_wheel',
        b'\xf0\x9f\x8e\xa1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfa1',
        ),
    ),
    Unicode(
        'ferry',
        b'\xe2\x9b\xb4'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'field_hockey',
        b'\xf0\x9f\x8f\x91'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfd1',
        ),
    ),
    Unicode(
        'file_cabinet',
        b'\xf0\x9f\x97\x84'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'file_folder',
        b'\xf0\x9f\x93\x81'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcc1',
        ),
    ),
    Unicode(
        'film_frames',
        b'\xf0\x9f\x8e\x9e'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'film_projector',
        b'\xf0\x9f\x93\xbd'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'fingers_crossed',
        b'\xf0\x9f\xa4\x9e'.decode('utf8'),
        False,
        (
            'hand_with_index_and_middle_finger_crossed',
        ),
        None,
        (
            '\ud83e\udd1e',
        ),
    ),
    Unicode(
        'fingers_crossed_tone1',
        b'\xf0\x9f\xa4\x9e\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'hand_with_index_and_middle_finger_crossed_tone1',
            'hand_with_index_and_middle_fingers_crossed_tone1'
        ),
        None,
        (
            '\ud83e\udd1e\ud83c\udffb',
        ),
    ),
    Unicode(
        'fingers_crossed_tone2',
        b'\xf0\x9f\xa4\x9e\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'hand_with_index_and_middle_finger_crossed_tone2',
            'hand_with_index_and_middle_fingers_crossed_tone2'
        ),
        None,
        (
            '\ud83e\udd1e\ud83c\udffc',
        ),
    ),
    Unicode(
        'fingers_crossed_tone3',
        b'\xf0\x9f\xa4\x9e\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'hand_with_index_and_middle_finger_crossed_tone3',
            'hand_with_index_and_middle_fingers_crossed_tone3'
        ),
        None,
        (
            '\ud83e\udd1e\ud83c\udffd',
        ),
    ),
    Unicode(
        'fingers_crossed_tone4',
        b'\xf0\x9f\xa4\x9e\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'hand_with_index_and_middle_finger_crossed_tone4',
            'hand_with_index_and_middle_fingers_crossed_tone4'
        ),
        None,
        (
            '\ud83e\udd1e\ud83c\udffe',
        ),
    ),
    Unicode(
        'fingers_crossed_tone5',
        b'\xf0\x9f\xa4\x9e\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'hand_with_index_and_middle_finger_crossed_tone5',
            'hand_with_index_and_middle_fingers_crossed_tone5'
        ),
        None,
        (
            '\ud83e\udd1e\ud83c\udfff',
        ),
    ),
    Unicode(
        'fire',
        b'\xf0\x9f\x94\xa5'.decode('utf8'),
        False,
        (
            'flame',
        ),
        None,
        (
            '\ud83d\udd25',
        ),
    ),
    Unicode(
        'fire_engine',
        b'\xf0\x9f\x9a\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude92',
        ),
    ),
    Unicode(
        'fireworks',
        b'\xf0\x9f\x8e\x86'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf86',
        ),
    ),
    Unicode(
        'first_place',
        b'\xf0\x9f\xa5\x87'.decode('utf8'),
        False,
        (
            'first_place_medal',
        ),
        None,
        (
            '\ud83e\udd47',
        ),
    ),
    Unicode(
        'first_quarter_moon',
        b'\xf0\x9f\x8c\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf13',
        ),
    ),
    Unicode(
        'first_quarter_moon_with_face',
        b'\xf0\x9f\x8c\x9b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf1b',
        ),
    ),
    Unicode(
        'fish',
        b'\xf0\x9f\x90\x9f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc1f',
        ),
    ),
    Unicode(
        'fish_cake',
        b'\xf0\x9f\x8d\xa5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf65',
        ),
    ),
    Unicode(
        'fishing_pole_and_fish',
        b'\xf0\x9f\x8e\xa3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfa3',
        ),
    ),
    Unicode(
        'fist',
        b'\xe2\x9c\x8a'.decode('utf8'),
        False,
        (
            'raised_fist',
        ),
        None,
        None,
    ),
    Unicode(
        'fist_tone1',
        b'\xe2\x9c\x8a\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '✊\ud83c\udffb',
        ),
    ),
    Unicode(
        'fist_tone2',
        b'\xe2\x9c\x8a\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '✊\ud83c\udffc',
        ),
    ),
    Unicode(
        'fist_tone3',
        b'\xe2\x9c\x8a\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '✊\ud83c\udffd',
        ),
    ),
    Unicode(
        'fist_tone4',
        b'\xe2\x9c\x8a\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '✊\ud83c\udffe',
        ),
    ),
    Unicode(
        'fist_tone5',
        b'\xe2\x9c\x8a\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '✊\ud83c\udfff',
        ),
    ),
    Unicode(
        'five',
        b'5\xe2\x83\xa3'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'flag_ac',
        b'\xf0\x9f\x87\xa6\xf0\x9f\x87\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde6\ud83c\udde8',
        ),
    ),
    Unicode(
        'flag_ad',
        b'\xf0\x9f\x87\xa6\xf0\x9f\x87\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde6\ud83c\udde9',
        ),
    ),
    Unicode(
        'flag_ae',
        b'\xf0\x9f\x87\xa6\xf0\x9f\x87\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde6\ud83c\uddea',
        ),
    ),
    Unicode(
        'flag_af',
        b'\xf0\x9f\x87\xa6\xf0\x9f\x87\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde6\ud83c\uddeb',
        ),
    ),
    Unicode(
        'flag_ag',
        b'\xf0\x9f\x87\xa6\xf0\x9f\x87\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde6\ud83c\uddec',
        ),
    ),
    Unicode(
        'flag_ai',
        b'\xf0\x9f\x87\xa6\xf0\x9f\x87\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde6\ud83c\uddee',
        ),
    ),
    Unicode(
        'flag_al',
        b'\xf0\x9f\x87\xa6\xf0\x9f\x87\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde6\ud83c\uddf1',
        ),
    ),
    Unicode(
        'flag_am',
        b'\xf0\x9f\x87\xa6\xf0\x9f\x87\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde6\ud83c\uddf2',
        ),
    ),
    Unicode(
        'flag_ao',
        b'\xf0\x9f\x87\xa6\xf0\x9f\x87\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde6\ud83c\uddf4',
        ),
    ),
    Unicode(
        'flag_aq',
        b'\xf0\x9f\x87\xa6\xf0\x9f\x87\xb6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde6\ud83c\uddf6',
        ),
    ),
    Unicode(
        'flag_ar',
        b'\xf0\x9f\x87\xa6\xf0\x9f\x87\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde6\ud83c\uddf7',
        ),
    ),
    Unicode(
        'flag_as',
        b'\xf0\x9f\x87\xa6\xf0\x9f\x87\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde6\ud83c\uddf8',
        ),
    ),
    Unicode(
        'flag_at',
        b'\xf0\x9f\x87\xa6\xf0\x9f\x87\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde6\ud83c\uddf9',
        ),
    ),
    Unicode(
        'flag_au',
        b'\xf0\x9f\x87\xa6\xf0\x9f\x87\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde6\ud83c\uddfa',
        ),
    ),
    Unicode(
        'flag_aw',
        b'\xf0\x9f\x87\xa6\xf0\x9f\x87\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde6\ud83c\uddfc',
        ),
    ),
    Unicode(
        'flag_ax',
        b'\xf0\x9f\x87\xa6\xf0\x9f\x87\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde6\ud83c\uddfd',
        ),
    ),
    Unicode(
        'flag_az',
        b'\xf0\x9f\x87\xa6\xf0\x9f\x87\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde6\ud83c\uddff',
        ),
    ),
    Unicode(
        'flag_ba',
        b'\xf0\x9f\x87\xa7\xf0\x9f\x87\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde7\ud83c\udde6',
        ),
    ),
    Unicode(
        'flag_bb',
        b'\xf0\x9f\x87\xa7\xf0\x9f\x87\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde7\ud83c\udde7',
        ),
    ),
    Unicode(
        'flag_bd',
        b'\xf0\x9f\x87\xa7\xf0\x9f\x87\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde7\ud83c\udde9',
        ),
    ),
    Unicode(
        'flag_be',
        b'\xf0\x9f\x87\xa7\xf0\x9f\x87\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde7\ud83c\uddea',
        ),
    ),
    Unicode(
        'flag_bf',
        b'\xf0\x9f\x87\xa7\xf0\x9f\x87\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde7\ud83c\uddeb',
        ),
    ),
    Unicode(
        'flag_bg',
        b'\xf0\x9f\x87\xa7\xf0\x9f\x87\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde7\ud83c\uddec',
        ),
    ),
    Unicode(
        'flag_bh',
        b'\xf0\x9f\x87\xa7\xf0\x9f\x87\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde7\ud83c\udded',
        ),
    ),
    Unicode(
        'flag_bi',
        b'\xf0\x9f\x87\xa7\xf0\x9f\x87\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde7\ud83c\uddee',
        ),
    ),
    Unicode(
        'flag_bj',
        b'\xf0\x9f\x87\xa7\xf0\x9f\x87\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde7\ud83c\uddef',
        ),
    ),
    Unicode(
        'flag_bl',
        b'\xf0\x9f\x87\xa7\xf0\x9f\x87\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde7\ud83c\uddf1',
        ),
    ),
    Unicode(
        'flag_black',
        b'\xf0\x9f\x8f\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udff4',
        ),
    ),
    Unicode(
        'flag_bm',
        b'\xf0\x9f\x87\xa7\xf0\x9f\x87\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde7\ud83c\uddf2',
        ),
    ),
    Unicode(
        'flag_bn',
        b'\xf0\x9f\x87\xa7\xf0\x9f\x87\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde7\ud83c\uddf3',
        ),
    ),
    Unicode(
        'flag_bo',
        b'\xf0\x9f\x87\xa7\xf0\x9f\x87\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde7\ud83c\uddf4',
        ),
    ),
    Unicode(
        'flag_bq',
        b'\xf0\x9f\x87\xa7\xf0\x9f\x87\xb6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde7\ud83c\uddf6',
        ),
    ),
    Unicode(
        'flag_br',
        b'\xf0\x9f\x87\xa7\xf0\x9f\x87\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde7\ud83c\uddf7',
        ),
    ),
    Unicode(
        'flag_bs',
        b'\xf0\x9f\x87\xa7\xf0\x9f\x87\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde7\ud83c\uddf8',
        ),
    ),
    Unicode(
        'flag_bt',
        b'\xf0\x9f\x87\xa7\xf0\x9f\x87\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde7\ud83c\uddf9',
        ),
    ),
    Unicode(
        'flag_bv',
        b'\xf0\x9f\x87\xa7\xf0\x9f\x87\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde7\ud83c\uddfb',
        ),
    ),
    Unicode(
        'flag_bw',
        b'\xf0\x9f\x87\xa7\xf0\x9f\x87\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde7\ud83c\uddfc',
        ),
    ),
    Unicode(
        'flag_by',
        b'\xf0\x9f\x87\xa7\xf0\x9f\x87\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde7\ud83c\uddfe',
        ),
    ),
    Unicode(
        'flag_bz',
        b'\xf0\x9f\x87\xa7\xf0\x9f\x87\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde7\ud83c\uddff',
        ),
    ),
    Unicode(
        'flag_ca',
        b'\xf0\x9f\x87\xa8\xf0\x9f\x87\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde8\ud83c\udde6',
        ),
    ),
    Unicode(
        'flag_cc',
        b'\xf0\x9f\x87\xa8\xf0\x9f\x87\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde8\ud83c\udde8',
        ),
    ),
    Unicode(
        'flag_cd',
        b'\xf0\x9f\x87\xa8\xf0\x9f\x87\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde8\ud83c\udde9',
        ),
    ),
    Unicode(
        'flag_cf',
        b'\xf0\x9f\x87\xa8\xf0\x9f\x87\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde8\ud83c\uddeb',
        ),
    ),
    Unicode(
        'flag_cg',
        b'\xf0\x9f\x87\xa8\xf0\x9f\x87\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde8\ud83c\uddec',
        ),
    ),
    Unicode(
        'flag_ch',
        b'\xf0\x9f\x87\xa8\xf0\x9f\x87\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde8\ud83c\udded',
        ),
    ),
    Unicode(
        'flag_ci',
        b'\xf0\x9f\x87\xa8\xf0\x9f\x87\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde8\ud83c\uddee',
        ),
    ),
    Unicode(
        'flag_ck',
        b'\xf0\x9f\x87\xa8\xf0\x9f\x87\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde8\ud83c\uddf0',
        ),
    ),
    Unicode(
        'flag_cl',
        b'\xf0\x9f\x87\xa8\xf0\x9f\x87\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde8\ud83c\uddf1',
        ),
    ),
    Unicode(
        'flag_cm',
        b'\xf0\x9f\x87\xa8\xf0\x9f\x87\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde8\ud83c\uddf2',
        ),
    ),
    Unicode(
        'flag_cn',
        b'\xf0\x9f\x87\xa8\xf0\x9f\x87\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde8\ud83c\uddf3',
        ),
    ),
    Unicode(
        'flag_co',
        b'\xf0\x9f\x87\xa8\xf0\x9f\x87\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde8\ud83c\uddf4',
        ),
    ),
    Unicode(
        'flag_cp',
        b'\xf0\x9f\x87\xa8\xf0\x9f\x87\xb5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde8\ud83c\uddf5',
        ),
    ),
    Unicode(
        'flag_cr',
        b'\xf0\x9f\x87\xa8\xf0\x9f\x87\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde8\ud83c\uddf7',
        ),
    ),
    Unicode(
        'flag_cu',
        b'\xf0\x9f\x87\xa8\xf0\x9f\x87\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde8\ud83c\uddfa',
        ),
    ),
    Unicode(
        'flag_cv',
        b'\xf0\x9f\x87\xa8\xf0\x9f\x87\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde8\ud83c\uddfb',
        ),
    ),
    Unicode(
        'flag_cw',
        b'\xf0\x9f\x87\xa8\xf0\x9f\x87\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde8\ud83c\uddfc',
        ),
    ),
    Unicode(
        'flag_cx',
        b'\xf0\x9f\x87\xa8\xf0\x9f\x87\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde8\ud83c\uddfd',
        ),
    ),
    Unicode(
        'flag_cy',
        b'\xf0\x9f\x87\xa8\xf0\x9f\x87\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde8\ud83c\uddfe',
        ),
    ),
    Unicode(
        'flag_cz',
        b'\xf0\x9f\x87\xa8\xf0\x9f\x87\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde8\ud83c\uddff',
        ),
    ),
    Unicode(
        'flag_de',
        b'\xf0\x9f\x87\xa9\xf0\x9f\x87\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde9\ud83c\uddea',
        ),
    ),
    Unicode(
        'flag_dg',
        b'\xf0\x9f\x87\xa9\xf0\x9f\x87\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde9\ud83c\uddec',
        ),
    ),
    Unicode(
        'flag_dj',
        b'\xf0\x9f\x87\xa9\xf0\x9f\x87\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde9\ud83c\uddef',
        ),
    ),
    Unicode(
        'flag_dk',
        b'\xf0\x9f\x87\xa9\xf0\x9f\x87\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde9\ud83c\uddf0',
        ),
    ),
    Unicode(
        'flag_dm',
        b'\xf0\x9f\x87\xa9\xf0\x9f\x87\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde9\ud83c\uddf2',
        ),
    ),
    Unicode(
        'flag_do',
        b'\xf0\x9f\x87\xa9\xf0\x9f\x87\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde9\ud83c\uddf4',
        ),
    ),
    Unicode(
        'flag_dz',
        b'\xf0\x9f\x87\xa9\xf0\x9f\x87\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde9\ud83c\uddff',
        ),
    ),
    Unicode(
        'flag_ea',
        b'\xf0\x9f\x87\xaa\xf0\x9f\x87\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddea\ud83c\udde6',
        ),
    ),
    Unicode(
        'flag_ec',
        b'\xf0\x9f\x87\xaa\xf0\x9f\x87\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddea\ud83c\udde8',
        ),
    ),
    Unicode(
        'flag_ee',
        b'\xf0\x9f\x87\xaa\xf0\x9f\x87\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddea\ud83c\uddea',
        ),
    ),
    Unicode(
        'flag_eg',
        b'\xf0\x9f\x87\xaa\xf0\x9f\x87\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddea\ud83c\uddec',
        ),
    ),
    Unicode(
        'flag_eh',
        b'\xf0\x9f\x87\xaa\xf0\x9f\x87\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddea\ud83c\udded',
        ),
    ),
    Unicode(
        'flag_er',
        b'\xf0\x9f\x87\xaa\xf0\x9f\x87\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddea\ud83c\uddf7',
        ),
    ),
    Unicode(
        'flag_es',
        b'\xf0\x9f\x87\xaa\xf0\x9f\x87\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddea\ud83c\uddf8',
        ),
    ),
    Unicode(
        'flag_et',
        b'\xf0\x9f\x87\xaa\xf0\x9f\x87\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddea\ud83c\uddf9',
        ),
    ),
    Unicode(
        'flag_eu',
        b'\xf0\x9f\x87\xaa\xf0\x9f\x87\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddea\ud83c\uddfa',
        ),
    ),
    Unicode(
        'flag_fi',
        b'\xf0\x9f\x87\xab\xf0\x9f\x87\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddeb\ud83c\uddee',
        ),
    ),
    Unicode(
        'flag_fj',
        b'\xf0\x9f\x87\xab\xf0\x9f\x87\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddeb\ud83c\uddef',
        ),
    ),
    Unicode(
        'flag_fk',
        b'\xf0\x9f\x87\xab\xf0\x9f\x87\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddeb\ud83c\uddf0',
        ),
    ),
    Unicode(
        'flag_fm',
        b'\xf0\x9f\x87\xab\xf0\x9f\x87\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddeb\ud83c\uddf2',
        ),
    ),
    Unicode(
        'flag_fo',
        b'\xf0\x9f\x87\xab\xf0\x9f\x87\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddeb\ud83c\uddf4',
        ),
    ),
    Unicode(
        'flag_fr',
        b'\xf0\x9f\x87\xab\xf0\x9f\x87\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddeb\ud83c\uddf7',
        ),
    ),
    Unicode(
        'flag_ga',
        b'\xf0\x9f\x87\xac\xf0\x9f\x87\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddec\ud83c\udde6',
        ),
    ),
    Unicode(
        'flag_gb',
        b'\xf0\x9f\x87\xac\xf0\x9f\x87\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddec\ud83c\udde7',
        ),
    ),
    Unicode(
        'flag_gd',
        b'\xf0\x9f\x87\xac\xf0\x9f\x87\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddec\ud83c\udde9',
        ),
    ),
    Unicode(
        'flag_ge',
        b'\xf0\x9f\x87\xac\xf0\x9f\x87\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddec\ud83c\uddea',
        ),
    ),
    Unicode(
        'flag_gf',
        b'\xf0\x9f\x87\xac\xf0\x9f\x87\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddec\ud83c\uddeb',
        ),
    ),
    Unicode(
        'flag_gg',
        b'\xf0\x9f\x87\xac\xf0\x9f\x87\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddec\ud83c\uddec',
        ),
    ),
    Unicode(
        'flag_gh',
        b'\xf0\x9f\x87\xac\xf0\x9f\x87\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddec\ud83c\udded',
        ),
    ),
    Unicode(
        'flag_gi',
        b'\xf0\x9f\x87\xac\xf0\x9f\x87\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddec\ud83c\uddee',
        ),
    ),
    Unicode(
        'flag_gl',
        b'\xf0\x9f\x87\xac\xf0\x9f\x87\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddec\ud83c\uddf1',
        ),
    ),
    Unicode(
        'flag_gm',
        b'\xf0\x9f\x87\xac\xf0\x9f\x87\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddec\ud83c\uddf2',
        ),
    ),
    Unicode(
        'flag_gn',
        b'\xf0\x9f\x87\xac\xf0\x9f\x87\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddec\ud83c\uddf3',
        ),
    ),
    Unicode(
        'flag_gp',
        b'\xf0\x9f\x87\xac\xf0\x9f\x87\xb5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddec\ud83c\uddf5',
        ),
    ),
    Unicode(
        'flag_gq',
        b'\xf0\x9f\x87\xac\xf0\x9f\x87\xb6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddec\ud83c\uddf6',
        ),
    ),
    Unicode(
        'flag_gr',
        b'\xf0\x9f\x87\xac\xf0\x9f\x87\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddec\ud83c\uddf7',
        ),
    ),
    Unicode(
        'flag_gs',
        b'\xf0\x9f\x87\xac\xf0\x9f\x87\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddec\ud83c\uddf8',
        ),
    ),
    Unicode(
        'flag_gt',
        b'\xf0\x9f\x87\xac\xf0\x9f\x87\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddec\ud83c\uddf9',
        ),
    ),
    Unicode(
        'flag_gu',
        b'\xf0\x9f\x87\xac\xf0\x9f\x87\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddec\ud83c\uddfa',
        ),
    ),
    Unicode(
        'flag_gw',
        b'\xf0\x9f\x87\xac\xf0\x9f\x87\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddec\ud83c\uddfc',
        ),
    ),
    Unicode(
        'flag_gy',
        b'\xf0\x9f\x87\xac\xf0\x9f\x87\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddec\ud83c\uddfe',
        ),
    ),
    Unicode(
        'flag_hk',
        b'\xf0\x9f\x87\xad\xf0\x9f\x87\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udded\ud83c\uddf0',
        ),
    ),
    Unicode(
        'flag_hm',
        b'\xf0\x9f\x87\xad\xf0\x9f\x87\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udded\ud83c\uddf2',
        ),
    ),
    Unicode(
        'flag_hn',
        b'\xf0\x9f\x87\xad\xf0\x9f\x87\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udded\ud83c\uddf3',
        ),
    ),
    Unicode(
        'flag_hr',
        b'\xf0\x9f\x87\xad\xf0\x9f\x87\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udded\ud83c\uddf7',
        ),
    ),
    Unicode(
        'flag_ht',
        b'\xf0\x9f\x87\xad\xf0\x9f\x87\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udded\ud83c\uddf9',
        ),
    ),
    Unicode(
        'flag_hu',
        b'\xf0\x9f\x87\xad\xf0\x9f\x87\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udded\ud83c\uddfa',
        ),
    ),
    Unicode(
        'flag_ic',
        b'\xf0\x9f\x87\xae\xf0\x9f\x87\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddee\ud83c\udde8',
        ),
    ),
    Unicode(
        'flag_id',
        b'\xf0\x9f\x87\xae\xf0\x9f\x87\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddee\ud83c\udde9',
        ),
    ),
    Unicode(
        'flag_ie',
        b'\xf0\x9f\x87\xae\xf0\x9f\x87\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddee\ud83c\uddea',
        ),
    ),
    Unicode(
        'flag_il',
        b'\xf0\x9f\x87\xae\xf0\x9f\x87\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddee\ud83c\uddf1',
        ),
    ),
    Unicode(
        'flag_im',
        b'\xf0\x9f\x87\xae\xf0\x9f\x87\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddee\ud83c\uddf2',
        ),
    ),
    Unicode(
        'flag_in',
        b'\xf0\x9f\x87\xae\xf0\x9f\x87\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddee\ud83c\uddf3',
        ),
    ),
    Unicode(
        'flag_io',
        b'\xf0\x9f\x87\xae\xf0\x9f\x87\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddee\ud83c\uddf4',
        ),
    ),
    Unicode(
        'flag_iq',
        b'\xf0\x9f\x87\xae\xf0\x9f\x87\xb6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddee\ud83c\uddf6',
        ),
    ),
    Unicode(
        'flag_ir',
        b'\xf0\x9f\x87\xae\xf0\x9f\x87\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddee\ud83c\uddf7',
        ),
    ),
    Unicode(
        'flag_is',
        b'\xf0\x9f\x87\xae\xf0\x9f\x87\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddee\ud83c\uddf8',
        ),
    ),
    Unicode(
        'flag_it',
        b'\xf0\x9f\x87\xae\xf0\x9f\x87\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddee\ud83c\uddf9',
        ),
    ),
    Unicode(
        'flag_je',
        b'\xf0\x9f\x87\xaf\xf0\x9f\x87\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddef\ud83c\uddea',
        ),
    ),
    Unicode(
        'flag_jm',
        b'\xf0\x9f\x87\xaf\xf0\x9f\x87\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddef\ud83c\uddf2',
        ),
    ),
    Unicode(
        'flag_jo',
        b'\xf0\x9f\x87\xaf\xf0\x9f\x87\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddef\ud83c\uddf4',
        ),
    ),
    Unicode(
        'flag_jp',
        b'\xf0\x9f\x87\xaf\xf0\x9f\x87\xb5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddef\ud83c\uddf5',
        ),
    ),
    Unicode(
        'flag_ke',
        b'\xf0\x9f\x87\xb0\xf0\x9f\x87\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf0\ud83c\uddea',
        ),
    ),
    Unicode(
        'flag_kg',
        b'\xf0\x9f\x87\xb0\xf0\x9f\x87\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf0\ud83c\uddec',
        ),
    ),
    Unicode(
        'flag_kh',
        b'\xf0\x9f\x87\xb0\xf0\x9f\x87\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf0\ud83c\udded',
        ),
    ),
    Unicode(
        'flag_ki',
        b'\xf0\x9f\x87\xb0\xf0\x9f\x87\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf0\ud83c\uddee',
        ),
    ),
    Unicode(
        'flag_km',
        b'\xf0\x9f\x87\xb0\xf0\x9f\x87\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf0\ud83c\uddf2',
        ),
    ),
    Unicode(
        'flag_kn',
        b'\xf0\x9f\x87\xb0\xf0\x9f\x87\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf0\ud83c\uddf3',
        ),
    ),
    Unicode(
        'flag_kp',
        b'\xf0\x9f\x87\xb0\xf0\x9f\x87\xb5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf0\ud83c\uddf5',
        ),
    ),
    Unicode(
        'flag_kr',
        b'\xf0\x9f\x87\xb0\xf0\x9f\x87\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf0\ud83c\uddf7',
        ),
    ),
    Unicode(
        'flag_kw',
        b'\xf0\x9f\x87\xb0\xf0\x9f\x87\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf0\ud83c\uddfc',
        ),
    ),
    Unicode(
        'flag_ky',
        b'\xf0\x9f\x87\xb0\xf0\x9f\x87\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf0\ud83c\uddfe',
        ),
    ),
    Unicode(
        'flag_kz',
        b'\xf0\x9f\x87\xb0\xf0\x9f\x87\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf0\ud83c\uddff',
        ),
    ),
    Unicode(
        'flag_la',
        b'\xf0\x9f\x87\xb1\xf0\x9f\x87\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf1\ud83c\udde6',
        ),
    ),
    Unicode(
        'flag_lb',
        b'\xf0\x9f\x87\xb1\xf0\x9f\x87\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf1\ud83c\udde7',
        ),
    ),
    Unicode(
        'flag_lc',
        b'\xf0\x9f\x87\xb1\xf0\x9f\x87\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf1\ud83c\udde8',
        ),
    ),
    Unicode(
        'flag_li',
        b'\xf0\x9f\x87\xb1\xf0\x9f\x87\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf1\ud83c\uddee',
        ),
    ),
    Unicode(
        'flag_lk',
        b'\xf0\x9f\x87\xb1\xf0\x9f\x87\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf1\ud83c\uddf0',
        ),
    ),
    Unicode(
        'flag_lr',
        b'\xf0\x9f\x87\xb1\xf0\x9f\x87\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf1\ud83c\uddf7',
        ),
    ),
    Unicode(
        'flag_ls',
        b'\xf0\x9f\x87\xb1\xf0\x9f\x87\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf1\ud83c\uddf8',
        ),
    ),
    Unicode(
        'flag_lt',
        b'\xf0\x9f\x87\xb1\xf0\x9f\x87\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf1\ud83c\uddf9',
        ),
    ),
    Unicode(
        'flag_lu',
        b'\xf0\x9f\x87\xb1\xf0\x9f\x87\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf1\ud83c\uddfa',
        ),
    ),
    Unicode(
        'flag_lv',
        b'\xf0\x9f\x87\xb1\xf0\x9f\x87\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf1\ud83c\uddfb',
        ),
    ),
    Unicode(
        'flag_ly',
        b'\xf0\x9f\x87\xb1\xf0\x9f\x87\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf1\ud83c\uddfe',
        ),
    ),
    Unicode(
        'flag_ma',
        b'\xf0\x9f\x87\xb2\xf0\x9f\x87\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2\ud83c\udde6',
        ),
    ),
    Unicode(
        'flag_mc',
        b'\xf0\x9f\x87\xb2\xf0\x9f\x87\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2\ud83c\udde8',
        ),
    ),
    Unicode(
        'flag_md',
        b'\xf0\x9f\x87\xb2\xf0\x9f\x87\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2\ud83c\udde9',
        ),
    ),
    Unicode(
        'flag_me',
        b'\xf0\x9f\x87\xb2\xf0\x9f\x87\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2\ud83c\uddea',
        ),
    ),
    Unicode(
        'flag_mf',
        b'\xf0\x9f\x87\xb2\xf0\x9f\x87\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2\ud83c\uddeb',
        ),
    ),
    Unicode(
        'flag_mg',
        b'\xf0\x9f\x87\xb2\xf0\x9f\x87\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2\ud83c\uddec',
        ),
    ),
    Unicode(
        'flag_mh',
        b'\xf0\x9f\x87\xb2\xf0\x9f\x87\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2\ud83c\udded',
        ),
    ),
    Unicode(
        'flag_mk',
        b'\xf0\x9f\x87\xb2\xf0\x9f\x87\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2\ud83c\uddf0',
        ),
    ),
    Unicode(
        'flag_ml',
        b'\xf0\x9f\x87\xb2\xf0\x9f\x87\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2\ud83c\uddf1',
        ),
    ),
    Unicode(
        'flag_mm',
        b'\xf0\x9f\x87\xb2\xf0\x9f\x87\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2\ud83c\uddf2',
        ),
    ),
    Unicode(
        'flag_mn',
        b'\xf0\x9f\x87\xb2\xf0\x9f\x87\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2\ud83c\uddf3',
        ),
    ),
    Unicode(
        'flag_mo',
        b'\xf0\x9f\x87\xb2\xf0\x9f\x87\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2\ud83c\uddf4',
        ),
    ),
    Unicode(
        'flag_mp',
        b'\xf0\x9f\x87\xb2\xf0\x9f\x87\xb5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2\ud83c\uddf5',
        ),
    ),
    Unicode(
        'flag_mq',
        b'\xf0\x9f\x87\xb2\xf0\x9f\x87\xb6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2\ud83c\uddf6',
        ),
    ),
    Unicode(
        'flag_mr',
        b'\xf0\x9f\x87\xb2\xf0\x9f\x87\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2\ud83c\uddf7',
        ),
    ),
    Unicode(
        'flag_ms',
        b'\xf0\x9f\x87\xb2\xf0\x9f\x87\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2\ud83c\uddf8',
        ),
    ),
    Unicode(
        'flag_mt',
        b'\xf0\x9f\x87\xb2\xf0\x9f\x87\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2\ud83c\uddf9',
        ),
    ),
    Unicode(
        'flag_mu',
        b'\xf0\x9f\x87\xb2\xf0\x9f\x87\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2\ud83c\uddfa',
        ),
    ),
    Unicode(
        'flag_mv',
        b'\xf0\x9f\x87\xb2\xf0\x9f\x87\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2\ud83c\uddfb',
        ),
    ),
    Unicode(
        'flag_mw',
        b'\xf0\x9f\x87\xb2\xf0\x9f\x87\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2\ud83c\uddfc',
        ),
    ),
    Unicode(
        'flag_mx',
        b'\xf0\x9f\x87\xb2\xf0\x9f\x87\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2\ud83c\uddfd',
        ),
    ),
    Unicode(
        'flag_my',
        b'\xf0\x9f\x87\xb2\xf0\x9f\x87\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2\ud83c\uddfe',
        ),
    ),
    Unicode(
        'flag_mz',
        b'\xf0\x9f\x87\xb2\xf0\x9f\x87\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2\ud83c\uddff',
        ),
    ),
    Unicode(
        'flag_na',
        b'\xf0\x9f\x87\xb3\xf0\x9f\x87\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf3\ud83c\udde6',
        ),
    ),
    Unicode(
        'flag_nc',
        b'\xf0\x9f\x87\xb3\xf0\x9f\x87\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf3\ud83c\udde8',
        ),
    ),
    Unicode(
        'flag_ne',
        b'\xf0\x9f\x87\xb3\xf0\x9f\x87\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf3\ud83c\uddea',
        ),
    ),
    Unicode(
        'flag_nf',
        b'\xf0\x9f\x87\xb3\xf0\x9f\x87\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf3\ud83c\uddeb',
        ),
    ),
    Unicode(
        'flag_ng',
        b'\xf0\x9f\x87\xb3\xf0\x9f\x87\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf3\ud83c\uddec',
        ),
    ),
    Unicode(
        'flag_ni',
        b'\xf0\x9f\x87\xb3\xf0\x9f\x87\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf3\ud83c\uddee',
        ),
    ),
    Unicode(
        'flag_nl',
        b'\xf0\x9f\x87\xb3\xf0\x9f\x87\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf3\ud83c\uddf1',
        ),
    ),
    Unicode(
        'flag_no',
        b'\xf0\x9f\x87\xb3\xf0\x9f\x87\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf3\ud83c\uddf4',
        ),
    ),
    Unicode(
        'flag_np',
        b'\xf0\x9f\x87\xb3\xf0\x9f\x87\xb5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf3\ud83c\uddf5',
        ),
    ),
    Unicode(
        'flag_nr',
        b'\xf0\x9f\x87\xb3\xf0\x9f\x87\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf3\ud83c\uddf7',
        ),
    ),
    Unicode(
        'flag_nu',
        b'\xf0\x9f\x87\xb3\xf0\x9f\x87\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf3\ud83c\uddfa',
        ),
    ),
    Unicode(
        'flag_nz',
        b'\xf0\x9f\x87\xb3\xf0\x9f\x87\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf3\ud83c\uddff',
        ),
    ),
    Unicode(
        'flag_om',
        b'\xf0\x9f\x87\xb4\xf0\x9f\x87\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf4\ud83c\uddf2',
        ),
    ),
    Unicode(
        'flag_pa',
        b'\xf0\x9f\x87\xb5\xf0\x9f\x87\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf5\ud83c\udde6',
        ),
    ),
    Unicode(
        'flag_pe',
        b'\xf0\x9f\x87\xb5\xf0\x9f\x87\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf5\ud83c\uddea',
        ),
    ),
    Unicode(
        'flag_pf',
        b'\xf0\x9f\x87\xb5\xf0\x9f\x87\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf5\ud83c\uddeb',
        ),
    ),
    Unicode(
        'flag_pg',
        b'\xf0\x9f\x87\xb5\xf0\x9f\x87\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf5\ud83c\uddec',
        ),
    ),
    Unicode(
        'flag_ph',
        b'\xf0\x9f\x87\xb5\xf0\x9f\x87\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf5\ud83c\udded',
        ),
    ),
    Unicode(
        'flag_pk',
        b'\xf0\x9f\x87\xb5\xf0\x9f\x87\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf5\ud83c\uddf0',
        ),
    ),
    Unicode(
        'flag_pl',
        b'\xf0\x9f\x87\xb5\xf0\x9f\x87\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf5\ud83c\uddf1',
        ),
    ),
    Unicode(
        'flag_pm',
        b'\xf0\x9f\x87\xb5\xf0\x9f\x87\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf5\ud83c\uddf2',
        ),
    ),
    Unicode(
        'flag_pn',
        b'\xf0\x9f\x87\xb5\xf0\x9f\x87\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf5\ud83c\uddf3',
        ),
    ),
    Unicode(
        'flag_pr',
        b'\xf0\x9f\x87\xb5\xf0\x9f\x87\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf5\ud83c\uddf7',
        ),
    ),
    Unicode(
        'flag_ps',
        b'\xf0\x9f\x87\xb5\xf0\x9f\x87\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf5\ud83c\uddf8',
        ),
    ),
    Unicode(
        'flag_pt',
        b'\xf0\x9f\x87\xb5\xf0\x9f\x87\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf5\ud83c\uddf9',
        ),
    ),
    Unicode(
        'flag_pw',
        b'\xf0\x9f\x87\xb5\xf0\x9f\x87\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf5\ud83c\uddfc',
        ),
    ),
    Unicode(
        'flag_py',
        b'\xf0\x9f\x87\xb5\xf0\x9f\x87\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf5\ud83c\uddfe',
        ),
    ),
    Unicode(
        'flag_qa',
        b'\xf0\x9f\x87\xb6\xf0\x9f\x87\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf6\ud83c\udde6',
        ),
    ),
    Unicode(
        'flag_re',
        b'\xf0\x9f\x87\xb7\xf0\x9f\x87\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf7\ud83c\uddea',
        ),
    ),
    Unicode(
        'flag_ro',
        b'\xf0\x9f\x87\xb7\xf0\x9f\x87\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf7\ud83c\uddf4',
        ),
    ),
    Unicode(
        'flag_rs',
        b'\xf0\x9f\x87\xb7\xf0\x9f\x87\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf7\ud83c\uddf8',
        ),
    ),
    Unicode(
        'flag_ru',
        b'\xf0\x9f\x87\xb7\xf0\x9f\x87\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf7\ud83c\uddfa',
        ),
    ),
    Unicode(
        'flag_rw',
        b'\xf0\x9f\x87\xb7\xf0\x9f\x87\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf7\ud83c\uddfc',
        ),
    ),
    Unicode(
        'flag_sa',
        b'\xf0\x9f\x87\xb8\xf0\x9f\x87\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf8\ud83c\udde6',
        ),
    ),
    Unicode(
        'flag_sb',
        b'\xf0\x9f\x87\xb8\xf0\x9f\x87\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf8\ud83c\udde7',
        ),
    ),
    Unicode(
        'flag_sc',
        b'\xf0\x9f\x87\xb8\xf0\x9f\x87\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf8\ud83c\udde8',
        ),
    ),
    Unicode(
        'flag_sd',
        b'\xf0\x9f\x87\xb8\xf0\x9f\x87\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf8\ud83c\udde9',
        ),
    ),
    Unicode(
        'flag_se',
        b'\xf0\x9f\x87\xb8\xf0\x9f\x87\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf8\ud83c\uddea',
        ),
    ),
    Unicode(
        'flag_sg',
        b'\xf0\x9f\x87\xb8\xf0\x9f\x87\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf8\ud83c\uddec',
        ),
    ),
    Unicode(
        'flag_sh',
        b'\xf0\x9f\x87\xb8\xf0\x9f\x87\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf8\ud83c\udded',
        ),
    ),
    Unicode(
        'flag_si',
        b'\xf0\x9f\x87\xb8\xf0\x9f\x87\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf8\ud83c\uddee',
        ),
    ),
    Unicode(
        'flag_sj',
        b'\xf0\x9f\x87\xb8\xf0\x9f\x87\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf8\ud83c\uddef',
        ),
    ),
    Unicode(
        'flag_sk',
        b'\xf0\x9f\x87\xb8\xf0\x9f\x87\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf8\ud83c\uddf0',
        ),
    ),
    Unicode(
        'flag_sl',
        b'\xf0\x9f\x87\xb8\xf0\x9f\x87\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf8\ud83c\uddf1',
        ),
    ),
    Unicode(
        'flag_sm',
        b'\xf0\x9f\x87\xb8\xf0\x9f\x87\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf8\ud83c\uddf2',
        ),
    ),
    Unicode(
        'flag_sn',
        b'\xf0\x9f\x87\xb8\xf0\x9f\x87\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf8\ud83c\uddf3',
        ),
    ),
    Unicode(
        'flag_so',
        b'\xf0\x9f\x87\xb8\xf0\x9f\x87\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf8\ud83c\uddf4',
        ),
    ),
    Unicode(
        'flag_sr',
        b'\xf0\x9f\x87\xb8\xf0\x9f\x87\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf8\ud83c\uddf7',
        ),
    ),
    Unicode(
        'flag_ss',
        b'\xf0\x9f\x87\xb8\xf0\x9f\x87\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf8\ud83c\uddf8',
        ),
    ),
    Unicode(
        'flag_st',
        b'\xf0\x9f\x87\xb8\xf0\x9f\x87\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf8\ud83c\uddf9',
        ),
    ),
    Unicode(
        'flag_sv',
        b'\xf0\x9f\x87\xb8\xf0\x9f\x87\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf8\ud83c\uddfb',
        ),
    ),
    Unicode(
        'flag_sx',
        b'\xf0\x9f\x87\xb8\xf0\x9f\x87\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf8\ud83c\uddfd',
        ),
    ),
    Unicode(
        'flag_sy',
        b'\xf0\x9f\x87\xb8\xf0\x9f\x87\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf8\ud83c\uddfe',
        ),
    ),
    Unicode(
        'flag_sz',
        b'\xf0\x9f\x87\xb8\xf0\x9f\x87\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf8\ud83c\uddff',
        ),
    ),
    Unicode(
        'flag_ta',
        b'\xf0\x9f\x87\xb9\xf0\x9f\x87\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf9\ud83c\udde6',
        ),
    ),
    Unicode(
        'flag_tc',
        b'\xf0\x9f\x87\xb9\xf0\x9f\x87\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf9\ud83c\udde8',
        ),
    ),
    Unicode(
        'flag_td',
        b'\xf0\x9f\x87\xb9\xf0\x9f\x87\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf9\ud83c\udde9',
        ),
    ),
    Unicode(
        'flag_tf',
        b'\xf0\x9f\x87\xb9\xf0\x9f\x87\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf9\ud83c\uddeb',
        ),
    ),
    Unicode(
        'flag_tg',
        b'\xf0\x9f\x87\xb9\xf0\x9f\x87\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf9\ud83c\uddec',
        ),
    ),
    Unicode(
        'flag_th',
        b'\xf0\x9f\x87\xb9\xf0\x9f\x87\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf9\ud83c\udded',
        ),
    ),
    Unicode(
        'flag_tj',
        b'\xf0\x9f\x87\xb9\xf0\x9f\x87\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf9\ud83c\uddef',
        ),
    ),
    Unicode(
        'flag_tk',
        b'\xf0\x9f\x87\xb9\xf0\x9f\x87\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf9\ud83c\uddf0',
        ),
    ),
    Unicode(
        'flag_tl',
        b'\xf0\x9f\x87\xb9\xf0\x9f\x87\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf9\ud83c\uddf1',
        ),
    ),
    Unicode(
        'flag_tm',
        b'\xf0\x9f\x87\xb9\xf0\x9f\x87\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf9\ud83c\uddf2',
        ),
    ),
    Unicode(
        'flag_tn',
        b'\xf0\x9f\x87\xb9\xf0\x9f\x87\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf9\ud83c\uddf3',
        ),
    ),
    Unicode(
        'flag_to',
        b'\xf0\x9f\x87\xb9\xf0\x9f\x87\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf9\ud83c\uddf4',
        ),
    ),
    Unicode(
        'flag_tr',
        b'\xf0\x9f\x87\xb9\xf0\x9f\x87\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf9\ud83c\uddf7',
        ),
    ),
    Unicode(
        'flag_tt',
        b'\xf0\x9f\x87\xb9\xf0\x9f\x87\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf9\ud83c\uddf9',
        ),
    ),
    Unicode(
        'flag_tv',
        b'\xf0\x9f\x87\xb9\xf0\x9f\x87\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf9\ud83c\uddfb',
        ),
    ),
    Unicode(
        'flag_tw',
        b'\xf0\x9f\x87\xb9\xf0\x9f\x87\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf9\ud83c\uddfc',
        ),
    ),
    Unicode(
        'flag_tz',
        b'\xf0\x9f\x87\xb9\xf0\x9f\x87\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf9\ud83c\uddff',
        ),
    ),
    Unicode(
        'flag_ua',
        b'\xf0\x9f\x87\xba\xf0\x9f\x87\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfa\ud83c\udde6',
        ),
    ),
    Unicode(
        'flag_ug',
        b'\xf0\x9f\x87\xba\xf0\x9f\x87\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfa\ud83c\uddec',
        ),
    ),
    Unicode(
        'flag_um',
        b'\xf0\x9f\x87\xba\xf0\x9f\x87\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfa\ud83c\uddf2',
        ),
    ),
    Unicode(
        'flag_us',
        b'\xf0\x9f\x87\xba\xf0\x9f\x87\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfa\ud83c\uddf8',
        ),
    ),
    Unicode(
        'flag_uy',
        b'\xf0\x9f\x87\xba\xf0\x9f\x87\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfa\ud83c\uddfe',
        ),
    ),
    Unicode(
        'flag_uz',
        b'\xf0\x9f\x87\xba\xf0\x9f\x87\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfa\ud83c\uddff',
        ),
    ),
    Unicode(
        'flag_va',
        b'\xf0\x9f\x87\xbb\xf0\x9f\x87\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfb\ud83c\udde6',
        ),
    ),
    Unicode(
        'flag_vc',
        b'\xf0\x9f\x87\xbb\xf0\x9f\x87\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfb\ud83c\udde8',
        ),
    ),
    Unicode(
        'flag_ve',
        b'\xf0\x9f\x87\xbb\xf0\x9f\x87\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfb\ud83c\uddea',
        ),
    ),
    Unicode(
        'flag_vg',
        b'\xf0\x9f\x87\xbb\xf0\x9f\x87\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfb\ud83c\uddec',
        ),
    ),
    Unicode(
        'flag_vi',
        b'\xf0\x9f\x87\xbb\xf0\x9f\x87\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfb\ud83c\uddee',
        ),
    ),
    Unicode(
        'flag_vn',
        b'\xf0\x9f\x87\xbb\xf0\x9f\x87\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfb\ud83c\uddf3',
        ),
    ),
    Unicode(
        'flag_vu',
        b'\xf0\x9f\x87\xbb\xf0\x9f\x87\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfb\ud83c\uddfa',
        ),
    ),
    Unicode(
        'flag_wf',
        b'\xf0\x9f\x87\xbc\xf0\x9f\x87\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfc\ud83c\uddeb',
        ),
    ),
    Unicode(
        'flag_white',
        b'\xf0\x9f\x8f\xb3'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'flag_ws',
        b'\xf0\x9f\x87\xbc\xf0\x9f\x87\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfc\ud83c\uddf8',
        ),
    ),
    Unicode(
        'flag_xk',
        b'\xf0\x9f\x87\xbd\xf0\x9f\x87\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfd\ud83c\uddf0',
        ),
    ),
    Unicode(
        'flag_ye',
        b'\xf0\x9f\x87\xbe\xf0\x9f\x87\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfe\ud83c\uddea',
        ),
    ),
    Unicode(
        'flag_yt',
        b'\xf0\x9f\x87\xbe\xf0\x9f\x87\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfe\ud83c\uddf9',
        ),
    ),
    Unicode(
        'flag_za',
        b'\xf0\x9f\x87\xbf\xf0\x9f\x87\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddff\ud83c\udde6',
        ),
    ),
    Unicode(
        'flag_zm',
        b'\xf0\x9f\x87\xbf\xf0\x9f\x87\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddff\ud83c\uddf2',
        ),
    ),
    Unicode(
        'flag_zw',
        b'\xf0\x9f\x87\xbf\xf0\x9f\x87\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddff\ud83c\uddfc',
        ),
    ),
    Unicode(
        'flags',
        b'\xf0\x9f\x8e\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf8f',
        ),
    ),
    Unicode(
        'flashlight',
        b'\xf0\x9f\x94\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd26',
        ),
    ),
    Unicode(
        'fleur_de_lis',
        b'\xe2\x9a\x9c'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'floppy_disk',
        b'\xf0\x9f\x92\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcbe',
        ),
    ),
    Unicode(
        'flower_playing_cards',
        b'\xf0\x9f\x8e\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfb4',
        ),
    ),
    Unicode(
        'flushed',
        b'\xf0\x9f\x98\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude33',
        ),
    ),
    Unicode(
        'fog',
        b'\xf0\x9f\x8c\xab'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'foggy',
        b'\xf0\x9f\x8c\x81'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf01',
        ),
    ),
    Unicode(
        'football',
        b'\xf0\x9f\x8f\x88'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc8',
        ),
    ),
    Unicode(
        'footprints',
        b'\xf0\x9f\x91\xa3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc63',
        ),
    ),
    Unicode(
        'fork_and_knife',
        b'\xf0\x9f\x8d\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf74',
        ),
    ),
    Unicode(
        'fork_and_knife_with_plate',
        b'\xf0\x9f\x8d\xbd'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'fountain',
        b'\xe2\x9b\xb2'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'four',
        b'4\xe2\x83\xa3'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'four_leaf_clover',
        b'\xf0\x9f\x8d\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf40',
        ),
    ),
    Unicode(
        'fox',
        b'\xf0\x9f\xa6\x8a'.decode('utf8'),
        False,
        (
            'fox_face',
        ),
        None,
        (
            '\ud83e\udd8a',
        ),
    ),
    Unicode(
        'frame_photo',
        b'\xf0\x9f\x96\xbc'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'free',
        b'\xf0\x9f\x86\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udd93',
        ),
    ),
    Unicode(
        'fried_shrimp',
        b'\xf0\x9f\x8d\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf64',
        ),
    ),
    Unicode(
        'fries',
        b'\xf0\x9f\x8d\x9f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf5f',
        ),
    ),
    Unicode(
        'frog',
        b'\xf0\x9f\x90\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc38',
        ),
    ),
    Unicode(
        'frowning2',
        b'\xe2\x98\xb9'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'fuelpump',
        b'\xe2\x9b\xbd'.decode('utf8'),
        False,
        (
            'fuel_pump',
        ),
        None,
        None,
    ),
    Unicode(
        'full_moon',
        b'\xf0\x9f\x8c\x95'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf15',
        ),
    ),
    Unicode(
        'full_moon_with_face',
        b'\xf0\x9f\x8c\x9d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf1d',
        ),
    ),
    Unicode(
        'funeral_urn',
        b'\xe2\x9a\xb1'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'game_die',
        b'\xf0\x9f\x8e\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfb2',
        ),
    ),
    Unicode(
        'gay_pride_flag',
        b'\xf0\x9f\x8f\xb3\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x8c\x88'.decode('utf8'),
        False,
        (
            'rainbow_flag',
        ),
        None,
        (
            '\ud83c\udff3️\u200d\ud83c\udf08',
        ),
    ),
    Unicode(
        'gear',
        b'\xe2\x9a\x99'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'gem',
        b'\xf0\x9f\x92\x8e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc8e',
        ),
    ),
    Unicode(
        'gemini',
        b'\xe2\x99\x8a'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'ghost',
        b'\xf0\x9f\x91\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc7b',
        ),
    ),
    Unicode(
        'gift',
        b'\xf0\x9f\x8e\x81'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf81',
        ),
    ),
    Unicode(
        'gift_heart',
        b'\xf0\x9f\x92\x9d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc9d',
        ),
    ),
    Unicode(
        'girl',
        b'\xf0\x9f\x91\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc67',
        ),
    ),
    Unicode(
        'girl_tone1',
        b'\xf0\x9f\x91\xa7\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc67\ud83c\udffb',
        ),
    ),
    Unicode(
        'girl_tone2',
        b'\xf0\x9f\x91\xa7\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc67\ud83c\udffc',
        ),
    ),
    Unicode(
        'girl_tone3',
        b'\xf0\x9f\x91\xa7\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc67\ud83c\udffd',
        ),
    ),
    Unicode(
        'girl_tone4',
        b'\xf0\x9f\x91\xa7\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc67\ud83c\udffe',
        ),
    ),
    Unicode(
        'girl_tone5',
        b'\xf0\x9f\x91\xa7\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc67\ud83c\udfff',
        ),
    ),
    Unicode(
        'glass_of_milk',
        b'\xf0\x9f\xa5\x9b'.decode('utf8'),
        False,
        (
            'milk',
        ),
        None,
        (
            '\ud83e\udd5b',
        ),
    ),
    Unicode(
        'globe_with_meridians',
        b'\xf0\x9f\x8c\x90'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf10',
        ),
    ),
    Unicode(
        'goal',
        b'\xf0\x9f\xa5\x85'.decode('utf8'),
        False,
        (
            'goal_net',
        ),
        None,
        (
            '\ud83e\udd45',
        ),
    ),
    Unicode(
        'goat',
        b'\xf0\x9f\x90\x90'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc10',
        ),
    ),
    Unicode(
        'golf',
        b'\xe2\x9b\xb3'.decode('utf8'),
        False,
        (
            'flag_in_hole',
        ),
        None,
        None,
    ),
    Unicode(
        'golfer',
        b'\xf0\x9f\x8f\x8c'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'golfer_tone1',
        b'\xf0\x9f\x8f\x8c\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_golfing_tone1',
        ),
        None,
        (
            '\ud83c\udfcc\ud83c\udffb',
        ),
    ),
    Unicode(
        'golfer_tone2',
        b'\xf0\x9f\x8f\x8c\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_golfing_tone2',
        ),
        None,
        (
            '\ud83c\udfcc\ud83c\udffc',
        ),
    ),
    Unicode(
        'golfer_tone3',
        b'\xf0\x9f\x8f\x8c\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_golfing_tone3',
        ),
        None,
        (
            '\ud83c\udfcc\ud83c\udffd',
        ),
    ),
    Unicode(
        'golfer_tone4',
        b'\xf0\x9f\x8f\x8c\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_golfing_tone4',
        ),
        None,
        (
            '\ud83c\udfcc\ud83c\udffe',
        ),
    ),
    Unicode(
        'golfer_tone5',
        b'\xf0\x9f\x8f\x8c\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_golfing_tone5',
        ),
        None,
        (
            '\ud83c\udfcc\ud83c\udfff',
        ),
    ),
    Unicode(
        'gorilla',
        b'\xf0\x9f\xa6\x8d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd8d',
        ),
    ),
    Unicode(
        'grandma',
        b'\xf0\x9f\x91\xb5'.decode('utf8'),
        False,
        (
            'older_woman',
        ),
        None,
        (
            '\ud83d\udc75',
        ),
    ),
    Unicode(
        'grandma_tone1',
        b'\xf0\x9f\x91\xb5\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'older_woman_tone1',
        ),
        None,
        (
            '\ud83d\udc75\ud83c\udffb',
        ),
    ),
    Unicode(
        'grandma_tone2',
        b'\xf0\x9f\x91\xb5\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'older_woman_tone2',
        ),
        None,
        (
            '\ud83d\udc75\ud83c\udffc',
        ),
    ),
    Unicode(
        'grandma_tone3',
        b'\xf0\x9f\x91\xb5\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'older_woman_tone3',
        ),
        None,
        (
            '\ud83d\udc75\ud83c\udffd',
        ),
    ),
    Unicode(
        'grandma_tone4',
        b'\xf0\x9f\x91\xb5\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'older_woman_tone4',
        ),
        None,
        (
            '\ud83d\udc75\ud83c\udffe',
        ),
    ),
    Unicode(
        'grandma_tone5',
        b'\xf0\x9f\x91\xb5\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'older_woman_tone5',
        ),
        None,
        (
            '\ud83d\udc75\ud83c\udfff',
        ),
    ),
    Unicode(
        'grapes',
        b'\xf0\x9f\x8d\x87'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf47',
        ),
    ),
    Unicode(
        'green_apple',
        b'\xf0\x9f\x8d\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf4f',
        ),
    ),
    Unicode(
        'green_book',
        b'\xf0\x9f\x93\x97'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcd7',
        ),
    ),
    Unicode(
        'green_heart',
        b'\xf0\x9f\x92\x9a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc9a',
        ),
    ),
    Unicode(
        'green_salad',
        b'\xf0\x9f\xa5\x97'.decode('utf8'),
        False,
        (
            'salad',
        ),
        None,
        (
            '\ud83e\udd57',
        ),
    ),
    Unicode(
        'grey_exclamation',
        b'\xe2\x9d\x95'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'grey_question',
        b'\xe2\x9d\x94'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'grimacing',
        b'\xf0\x9f\x98\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude2c',
        ),
    ),
    Unicode(
        'grin',
        b'\xf0\x9f\x98\x81'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude01',
        ),
    ),
    Unicode(
        'grinning',
        b'\xf0\x9f\x98\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude00',
        ),
    ),
    Unicode(
        'guardsman',
        b'\xf0\x9f\x92\x82'.decode('utf8'),
        False,
        (
            'guard',
        ),
        None,
        (
            '\ud83d\udc82',
        ),
    ),
    Unicode(
        'guardsman_tone1',
        b'\xf0\x9f\x92\x82\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'guard_tone1',
        ),
        None,
        (
            '\ud83d\udc82\ud83c\udffb',
        ),
    ),
    Unicode(
        'guardsman_tone2',
        b'\xf0\x9f\x92\x82\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'guard_tone2',
        ),
        None,
        (
            '\ud83d\udc82\ud83c\udffc',
        ),
    ),
    Unicode(
        'guardsman_tone3',
        b'\xf0\x9f\x92\x82\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'guard_tone3',
        ),
        None,
        (
            '\ud83d\udc82\ud83c\udffd',
        ),
    ),
    Unicode(
        'guardsman_tone4',
        b'\xf0\x9f\x92\x82\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'guard_tone4',
        ),
        None,
        (
            '\ud83d\udc82\ud83c\udffe',
        ),
    ),
    Unicode(
        'guardsman_tone5',
        b'\xf0\x9f\x92\x82\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'guard_tone5',
        ),
        None,
        (
            '\ud83d\udc82\ud83c\udfff',
        ),
    ),
    Unicode(
        'guitar',
        b'\xf0\x9f\x8e\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfb8',
        ),
    ),
    Unicode(
        'gun',
        b'\xf0\x9f\x94\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd2b',
        ),
    ),
    Unicode(
        'haircut',
        b'\xf0\x9f\x92\x87'.decode('utf8'),
        False,
        (
            'person_getting_haircut',
        ),
        None,
        (
            '\ud83d\udc87',
        ),
    ),
    Unicode(
        'haircut_tone1',
        b'\xf0\x9f\x92\x87\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_getting_haircut_tone1',
        ),
        None,
        (
            '\ud83d\udc87\ud83c\udffb',
        ),
    ),
    Unicode(
        'haircut_tone2',
        b'\xf0\x9f\x92\x87\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_getting_haircut_tone2',
        ),
        None,
        (
            '\ud83d\udc87\ud83c\udffc',
        ),
    ),
    Unicode(
        'haircut_tone3',
        b'\xf0\x9f\x92\x87\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_getting_haircut_tone3',
        ),
        None,
        (
            '\ud83d\udc87\ud83c\udffd',
        ),
    ),
    Unicode(
        'haircut_tone4',
        b'\xf0\x9f\x92\x87\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_getting_haircut_tone4',
        ),
        None,
        (
            '\ud83d\udc87\ud83c\udffe',
        ),
    ),
    Unicode(
        'haircut_tone5',
        b'\xf0\x9f\x92\x87\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_getting_haircut_tone5',
        ),
        None,
        (
            '\ud83d\udc87\ud83c\udfff',
        ),
    ),
    Unicode(
        'hamburger',
        b'\xf0\x9f\x8d\x94'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf54',
        ),
    ),
    Unicode(
        'hammer',
        b'\xf0\x9f\x94\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd28',
        ),
    ),
    Unicode(
        'hammer_and_pick',
        b'\xe2\x9a\x92'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'hammer_and_wrench',
        b'\xf0\x9f\x9b\xa0'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'hamster',
        b'\xf0\x9f\x90\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc39',
        ),
    ),
    Unicode(
        'hand_splayed',
        b'\xf0\x9f\x96\x90'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'hand_splayed_tone1',
        b'\xf0\x9f\x96\x90\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'raised_hand_with_fingers_splayed_tone1',
        ),
        None,
        (
            '\ud83d\udd90\ud83c\udffb',
        ),
    ),
    Unicode(
        'hand_splayed_tone2',
        b'\xf0\x9f\x96\x90\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'raised_hand_with_fingers_splayed_tone2',
        ),
        None,
        (
            '\ud83d\udd90\ud83c\udffc',
        ),
    ),
    Unicode(
        'hand_splayed_tone3',
        b'\xf0\x9f\x96\x90\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'raised_hand_with_fingers_splayed_tone3',
        ),
        None,
        (
            '\ud83d\udd90\ud83c\udffd',
        ),
    ),
    Unicode(
        'hand_splayed_tone4',
        b'\xf0\x9f\x96\x90\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'raised_hand_with_fingers_splayed_tone4',
        ),
        None,
        (
            '\ud83d\udd90\ud83c\udffe',
        ),
    ),
    Unicode(
        'hand_splayed_tone5',
        b'\xf0\x9f\x96\x90\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'raised_hand_with_fingers_splayed_tone5',
        ),
        None,
        (
            '\ud83d\udd90\ud83c\udfff',
        ),
    ),
    Unicode(
        'handbag',
        b'\xf0\x9f\x91\x9c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc5c',
        ),
    ),
    Unicode(
        'handball',
        b'\xf0\x9f\xa4\xbe'.decode('utf8'),
        False,
        (
            'person_playing_handball',
        ),
        None,
        (
            '\ud83e\udd3e',
        ),
    ),
    Unicode(
        'handball_tone1',
        b'\xf0\x9f\xa4\xbe\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_playing_handball_tone1',
        ),
        None,
        (
            '\ud83e\udd3e\ud83c\udffb',
        ),
    ),
    Unicode(
        'handball_tone2',
        b'\xf0\x9f\xa4\xbe\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_playing_handball_tone2',
        ),
        None,
        (
            '\ud83e\udd3e\ud83c\udffc',
        ),
    ),
    Unicode(
        'handball_tone3',
        b'\xf0\x9f\xa4\xbe\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_playing_handball_tone3',
        ),
        None,
        (
            '\ud83e\udd3e\ud83c\udffd',
        ),
    ),
    Unicode(
        'handball_tone4',
        b'\xf0\x9f\xa4\xbe\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_playing_handball_tone4',
        ),
        None,
        (
            '\ud83e\udd3e\ud83c\udffe',
        ),
    ),
    Unicode(
        'handball_tone5',
        b'\xf0\x9f\xa4\xbe\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_playing_handball_tone5',
        ),
        None,
        (
            '\ud83e\udd3e\ud83c\udfff',
        ),
    ),
    Unicode(
        'handshake',
        b'\xf0\x9f\xa4\x9d'.decode('utf8'),
        False,
        (
            'shaking_hands',
        ),
        None,
        (
            '\ud83e\udd1d',
        ),
    ),
    Unicode(
        'hankey',
        b'\xf0\x9f\x92\xa9'.decode('utf8'),
        False,
        (
            'poo',
            'poop',
            'shit'
        ),
        None,
        (
            '\ud83d\udca9',
        ),
    ),
    Unicode(
        'hash',
        b'#\xe2\x83\xa3'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'hatched_chick',
        b'\xf0\x9f\x90\xa5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc25',
        ),
    ),
    Unicode(
        'hatching_chick',
        b'\xf0\x9f\x90\xa3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc23',
        ),
    ),
    Unicode(
        'headphones',
        b'\xf0\x9f\x8e\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfa7',
        ),
    ),
    Unicode(
        'hear_no_evil',
        b'\xf0\x9f\x99\x89'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude49',
        ),
    ),
    Unicode(
        'heart',
        b'\xe2\x9d\xa4'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'heart_decoration',
        b'\xf0\x9f\x92\x9f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc9f',
        ),
    ),
    Unicode(
        'heart_exclamation',
        b'\xe2\x9d\xa3'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'heart_eyes',
        b'\xf0\x9f\x98\x8d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude0d',
        ),
    ),
    Unicode(
        'heart_eyes_cat',
        b'\xf0\x9f\x98\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude3b',
        ),
    ),
    Unicode(
        'heartbeat',
        b'\xf0\x9f\x92\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc93',
        ),
    ),
    Unicode(
        'heartpulse',
        b'\xf0\x9f\x92\x97'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc97',
        ),
    ),
    Unicode(
        'hearts',
        b'\xe2\x99\xa5'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'heavy_check_mark',
        b'\xe2\x9c\x94'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'heavy_division_sign',
        b'\xe2\x9e\x97'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'heavy_dollar_sign',
        b'\xf0\x9f\x92\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcb2',
        ),
    ),
    Unicode(
        'heavy_minus_sign',
        b'\xe2\x9e\x96'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'heavy_multiplication_x',
        b'\xe2\x9c\x96'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'heavy_plus_sign',
        b'\xe2\x9e\x95'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'helicopter',
        b'\xf0\x9f\x9a\x81'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude81',
        ),
    ),
    Unicode(
        'helmet_with_cross',
        b'\xe2\x9b\x91'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'herb',
        b'\xf0\x9f\x8c\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf3f',
        ),
    ),
    Unicode(
        'hibiscus',
        b'\xf0\x9f\x8c\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf3a',
        ),
    ),
    Unicode(
        'high_brightness',
        b'\xf0\x9f\x94\x86'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd06',
        ),
    ),
    Unicode(
        'high_heel',
        b'\xf0\x9f\x91\xa0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc60',
        ),
    ),
    Unicode(
        'hockey',
        b'\xf0\x9f\x8f\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfd2',
        ),
    ),
    Unicode(
        'hole',
        b'\xf0\x9f\x95\xb3'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'homes',
        b'\xf0\x9f\x8f\x98'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'honey_pot',
        b'\xf0\x9f\x8d\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf6f',
        ),
    ),
    Unicode(
        'horse',
        b'\xf0\x9f\x90\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc34',
        ),
    ),
    Unicode(
        'horse_racing',
        b'\xf0\x9f\x8f\x87'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc7',
        ),
    ),
    Unicode(
        'horse_racing_tone1',
        b'\xf0\x9f\x8f\x87\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc7\ud83c\udffb',
        ),
    ),
    Unicode(
        'horse_racing_tone2',
        b'\xf0\x9f\x8f\x87\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc7\ud83c\udffc',
        ),
    ),
    Unicode(
        'horse_racing_tone3',
        b'\xf0\x9f\x8f\x87\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc7\ud83c\udffd',
        ),
    ),
    Unicode(
        'horse_racing_tone4',
        b'\xf0\x9f\x8f\x87\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc7\ud83c\udffe',
        ),
    ),
    Unicode(
        'horse_racing_tone5',
        b'\xf0\x9f\x8f\x87\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc7\ud83c\udfff',
        ),
    ),
    Unicode(
        'hospital',
        b'\xf0\x9f\x8f\xa5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfe5',
        ),
    ),
    Unicode(
        'hot_dog',
        b'\xf0\x9f\x8c\xad'.decode('utf8'),
        False,
        (
            'hotdog',
        ),
        None,
        (
            '\ud83c\udf2d',
        ),
    ),
    Unicode(
        'hot_pepper',
        b'\xf0\x9f\x8c\xb6'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'hotel',
        b'\xf0\x9f\x8f\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfe8',
        ),
    ),
    Unicode(
        'hotsprings',
        b'\xe2\x99\xa8'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'hourglass',
        b'\xe2\x8c\x9b'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'hourglass_flowing_sand',
        b'\xe2\x8f\xb3'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'house',
        b'\xf0\x9f\x8f\xa0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfe0',
        ),
    ),
    Unicode(
        'house_with_garden',
        b'\xf0\x9f\x8f\xa1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfe1',
        ),
    ),
    Unicode(
        'hugging',
        b'\xf0\x9f\xa4\x97'.decode('utf8'),
        False,
        (
            'hugging_face',
        ),
        None,
        (
            '\ud83e\udd17',
        ),
    ),
    Unicode(
        'hushed',
        b'\xf0\x9f\x98\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude2f',
        ),
    ),
    Unicode(
        'ice_cream',
        b'\xf0\x9f\x8d\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf68',
        ),
    ),
    Unicode(
        'ice_skate',
        b'\xe2\x9b\xb8'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'icecream',
        b'\xf0\x9f\x8d\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf66',
        ),
    ),
    Unicode(
        'id',
        b'\xf0\x9f\x86\x94'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udd94',
        ),
    ),
    Unicode(
        'ideograph_advantage',
        b'\xf0\x9f\x89\x90'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\ude50',
        ),
    ),
    Unicode(
        'imp',
        b'\xf0\x9f\x91\xbf'.decode('utf8'),
        False,
        None,
        (']:(', ']:-(', ']=(', ']=-('),
        (
            '\ud83d\udc7f',
        ),
    ),
    Unicode(
        'inbox_tray',
        b'\xf0\x9f\x93\xa5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udce5',
        ),
    ),
    Unicode(
        'incoming_envelope',
        b'\xf0\x9f\x93\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udce8',
        ),
    ),
    Unicode(
        'information_desk_person',
        b'\xf0\x9f\x92\x81'.decode('utf8'),
        False,
        (
            'person_tipping_hand',
        ),
        None,
        (
            '\ud83d\udc81',
        ),
    ),
    Unicode(
        'information_desk_person_tone1',
        b'\xf0\x9f\x92\x81\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_tipping_hand_tone1',
        ),
        None,
        (
            '\ud83d\udc81\ud83c\udffb',
        ),
    ),
    Unicode(
        'information_desk_person_tone2',
        b'\xf0\x9f\x92\x81\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_tipping_hand_tone2',
        ),
        None,
        (
            '\ud83d\udc81\ud83c\udffc',
        ),
    ),
    Unicode(
        'information_desk_person_tone3',
        b'\xf0\x9f\x92\x81\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_tipping_hand_tone3',
        ),
        None,
        (
            '\ud83d\udc81\ud83c\udffd',
        ),
    ),
    Unicode(
        'information_desk_person_tone4',
        b'\xf0\x9f\x92\x81\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_tipping_hand_tone4',
        ),
        None,
        (
            '\ud83d\udc81\ud83c\udffe',
        ),
    ),
    Unicode(
        'information_desk_person_tone5',
        b'\xf0\x9f\x92\x81\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_tipping_hand_tone5',
        ),
        None,
        (
            '\ud83d\udc81\ud83c\udfff',
        ),
    ),
    Unicode(
        'information_source',
        b'\xe2\x84\xb9'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'interrobang',
        b'\xe2\x81\x89'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'iphone',
        b'\xf0\x9f\x93\xb1'.decode('utf8'),
        False,
        (
            'mobile_phone',
        ),
        None,
        (
            '\ud83d\udcf1',
        ),
    ),
    Unicode(
        'izakaya_lantern',
        b'\xf0\x9f\x8f\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfee',
        ),
    ),
    Unicode(
        'jack_o_lantern',
        b'\xf0\x9f\x8e\x83'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf83',
        ),
    ),
    Unicode(
        'japan',
        b'\xf0\x9f\x97\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\uddfe',
        ),
    ),
    Unicode(
        'japanese_castle',
        b'\xf0\x9f\x8f\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfef',
        ),
    ),
    Unicode(
        'japanese_goblin',
        b'\xf0\x9f\x91\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc7a',
        ),
    ),
    Unicode(
        'japanese_ogre',
        b'\xf0\x9f\x91\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc79',
        ),
    ),
    Unicode(
        'jeans',
        b'\xf0\x9f\x91\x96'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc56',
        ),
    ),
    Unicode(
        'joy_cat',
        b'\xf0\x9f\x98\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude39',
        ),
    ),
    Unicode(
        'joystick',
        b'\xf0\x9f\x95\xb9'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'juggler',
        b'\xf0\x9f\xa4\xb9'.decode('utf8'),
        False,
        (
            'juggling',
            'person_juggling'
        ),
        None,
        (
            '\ud83e\udd39',
        ),
    ),
    Unicode(
        'juggler_tone1',
        b'\xf0\x9f\xa4\xb9\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'juggling_tone1',
            'person_juggling_tone1'
        ),
        None,
        (
            '\ud83e\udd39\ud83c\udffb',
        ),
    ),
    Unicode(
        'juggler_tone2',
        b'\xf0\x9f\xa4\xb9\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'juggling_tone2',
            'person_juggling_tone2'
        ),
        None,
        (
            '\ud83e\udd39\ud83c\udffc',
        ),
    ),
    Unicode(
        'juggler_tone3',
        b'\xf0\x9f\xa4\xb9\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'juggling_tone3',
            'person_juggling_tone3'
        ),
        None,
        (
            '\ud83e\udd39\ud83c\udffd',
        ),
    ),
    Unicode(
        'juggler_tone4',
        b'\xf0\x9f\xa4\xb9\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'juggling_tone4',
            'person_juggling_tone4'
        ),
        None,
        (
            '\ud83e\udd39\ud83c\udffe',
        ),
    ),
    Unicode(
        'juggler_tone5',
        b'\xf0\x9f\xa4\xb9\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'juggling_tone5',
            'person_juggling_tone5'
        ),
        None,
        (
            '\ud83e\udd39\ud83c\udfff',
        ),
    ),
    Unicode(
        'kaaba',
        b'\xf0\x9f\x95\x8b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd4b',
        ),
    ),
    Unicode(
        'karate_uniform',
        b'\xf0\x9f\xa5\x8b'.decode('utf8'),
        False,
        (
            'martial_arts_uniform',
        ),
        None,
        (
            '\ud83e\udd4b',
        ),
    ),
    Unicode(
        'key2',
        b'\xf0\x9f\x97\x9d'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'key',
        b'\xf0\x9f\x94\x91'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd11',
        ),
    ),
    Unicode(
        'keyboard',
        b'\xe2\x8c\xa8'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'keycap_ten',
        b'\xf0\x9f\x94\x9f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd1f',
        ),
    ),
    Unicode(
        'kimono',
        b'\xf0\x9f\x91\x98'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc58',
        ),
    ),
    Unicode(
        'kiss',
        b'\xf0\x9f\x92\x8b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc8b',
        ),
    ),
    Unicode(
        'kissing_cat',
        b'\xf0\x9f\x98\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude3d',
        ),
    ),
    Unicode(
        'kissing_closed_eyes',
        b'\xf0\x9f\x98\x9a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude1a',
        ),
    ),
    Unicode(
        'kissing_heart',
        b'\xf0\x9f\x98\x98'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude18',
        ),
    ),
    Unicode(
        'kissing_smiling_eyes',
        b'\xf0\x9f\x98\x99'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude19',
        ),
    ),
    Unicode(
        'kiwi',
        b'\xf0\x9f\xa5\x9d'.decode('utf8'),
        False,
        (
            'kiwifruit',
        ),
        None,
        (
            '\ud83e\udd5d',
        ),
    ),
    Unicode(
        'knife',
        b'\xf0\x9f\x94\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd2a',
        ),
    ),
    Unicode(
        'koala',
        b'\xf0\x9f\x90\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc28',
        ),
    ),
    Unicode(
        'koko',
        b'\xf0\x9f\x88\x81'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\ude01',
        ),
    ),
    Unicode(
        'label',
        b'\xf0\x9f\x8f\xb7'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'large_blue_circle',
        b'\xf0\x9f\x94\xb5'.decode('utf8'),
        False,
        (
            'blue_circle',
        ),
        None,
        (
            '\ud83d\udd35',
        ),
    ),
    Unicode(
        'large_blue_diamond',
        b'\xf0\x9f\x94\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd37',
        ),
    ),
    Unicode(
        'large_orange_diamond',
        b'\xf0\x9f\x94\xb6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd36',
        ),
    ),
    Unicode(
        'last_quarter_moon',
        b'\xf0\x9f\x8c\x97'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf17',
        ),
    ),
    Unicode(
        'last_quarter_moon_with_face',
        b'\xf0\x9f\x8c\x9c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf1c',
        ),
    ),
    Unicode(
        'laughing',
        b'\xf0\x9f\x98\x86'.decode('utf8'),
        False,
        (
            'satisfied',
        ),
        ('x-)', 'X-)'),
        (
            '\ud83d\ude06',
        ),
    ),
    Unicode(
        'leaves',
        b'\xf0\x9f\x8d\x83'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf43',
        ),
    ),
    Unicode(
        'ledger',
        b'\xf0\x9f\x93\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcd2',
        ),
    ),
    Unicode(
        'left_facing_fist',
        b'\xf0\x9f\xa4\x9b'.decode('utf8'),
        False,
        (
            'left_fist',
        ),
        None,
        (
            '\ud83e\udd1b',
        ),
    ),
    Unicode(
        'left_facing_fist_tone1',
        b'\xf0\x9f\xa4\x9b\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'left_fist_tone1',
        ),
        None,
        (
            '\ud83e\udd1b\ud83c\udffb',
        ),
    ),
    Unicode(
        'left_facing_fist_tone2',
        b'\xf0\x9f\xa4\x9b\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'left_fist_tone2',
        ),
        None,
        (
            '\ud83e\udd1b\ud83c\udffc',
        ),
    ),
    Unicode(
        'left_facing_fist_tone3',
        b'\xf0\x9f\xa4\x9b\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'left_fist_tone3',
        ),
        None,
        (
            '\ud83e\udd1b\ud83c\udffd',
        ),
    ),
    Unicode(
        'left_facing_fist_tone4',
        b'\xf0\x9f\xa4\x9b\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'left_fist_tone4',
        ),
        None,
        (
            '\ud83e\udd1b\ud83c\udffe',
        ),
    ),
    Unicode(
        'left_facing_fist_tone5',
        b'\xf0\x9f\xa4\x9b\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'left_fist_tone5',
        ),
        None,
        (
            '\ud83e\udd1b\ud83c\udfff',
        ),
    ),
    Unicode(
        'left_luggage',
        b'\xf0\x9f\x9b\x85'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udec5',
        ),
    ),
    Unicode(
        'left_right_arrow',
        b'\xe2\x86\x94'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'left_speech_bubble',
        b'\xf0\x9f\x97\xa8'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'leftwards_arrow_with_hook',
        b'\xe2\x86\xa9'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'lemon',
        b'\xf0\x9f\x8d\x8b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf4b',
        ),
    ),
    Unicode(
        'leo',
        b'\xe2\x99\x8c'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'leopard',
        b'\xf0\x9f\x90\x86'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc06',
        ),
    ),
    Unicode(
        'level_slider',
        b'\xf0\x9f\x8e\x9a'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'levitate',
        b'\xf0\x9f\x95\xb4'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'levitate_tone1',
        b'\xf0\x9f\x95\xb4\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'man_in_business_suit_levitating_tone1',
        ),
        None,
        (
            '\ud83d\udd74\ud83c\udffb',
        ),
    ),
    Unicode(
        'levitate_tone2',
        b'\xf0\x9f\x95\xb4\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'man_in_business_suit_levitating_tone2',
        ),
        None,
        (
            '\ud83d\udd74\ud83c\udffc',
        ),
    ),
    Unicode(
        'levitate_tone3',
        b'\xf0\x9f\x95\xb4\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'man_in_business_suit_levitating_tone3',
        ),
        None,
        (
            '\ud83d\udd74\ud83c\udffd',
        ),
    ),
    Unicode(
        'levitate_tone4',
        b'\xf0\x9f\x95\xb4\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'man_in_business_suit_levitating_tone4',
        ),
        None,
        (
            '\ud83d\udd74\ud83c\udffe',
        ),
    ),
    Unicode(
        'levitate_tone5',
        b'\xf0\x9f\x95\xb4\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'man_in_business_suit_levitating_tone5',
        ),
        None,
        (
            '\ud83d\udd74\ud83c\udfff',
        ),
    ),
    Unicode(
        'liar',
        b'\xf0\x9f\xa4\xa5'.decode('utf8'),
        False,
        (
            'lying_face',
        ),
        None,
        (
            '\ud83e\udd25',
        ),
    ),
    Unicode(
        'libra',
        b'\xe2\x99\x8e'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'lifter',
        b'\xf0\x9f\x8f\x8b'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'lifter_tone1',
        b'\xf0\x9f\x8f\x8b\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'weight_lifter_tone1',
            'person_lifting_weights_tone1'
        ),
        None,
        (
            '\ud83c\udfcb\ud83c\udffb',
        ),
    ),
    Unicode(
        'lifter_tone2',
        b'\xf0\x9f\x8f\x8b\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'weight_lifter_tone2',
            'person_lifting_weights_tone2'
        ),
        None,
        (
            '\ud83c\udfcb\ud83c\udffc',
        ),
    ),
    Unicode(
        'lifter_tone3',
        b'\xf0\x9f\x8f\x8b\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'weight_lifter_tone3',
            'person_lifting_weights_tone3'
        ),
        None,
        (
            '\ud83c\udfcb\ud83c\udffd',
        ),
    ),
    Unicode(
        'lifter_tone4',
        b'\xf0\x9f\x8f\x8b\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'weight_lifter_tone4',
            'person_lifting_weights_tone4'
        ),
        None,
        (
            '\ud83c\udfcb\ud83c\udffe',
        ),
    ),
    Unicode(
        'lifter_tone5',
        b'\xf0\x9f\x8f\x8b\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'weight_lifter_tone5',
            'person_lifting_weights_tone5'
        ),
        None,
        (
            '\ud83c\udfcb\ud83c\udfff',
        ),
    ),
    Unicode(
        'light_rail',
        b'\xf0\x9f\x9a\x88'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude88',
        ),
    ),
    Unicode(
        'link',
        b'\xf0\x9f\x94\x97'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd17',
        ),
    ),
    Unicode(
        'linked_paperclips',
        b'\xf0\x9f\x96\x87'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'lion',
        b'\xf0\x9f\xa6\x81'.decode('utf8'),
        False,
        (
            'lion_face',
        ),
        None,
        (
            '\ud83e\udd81',
        ),
    ),
    Unicode(
        'lips',
        b'\xf0\x9f\x91\x84'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc44',
        ),
    ),
    Unicode(
        'lipstick',
        b'\xf0\x9f\x92\x84'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc84',
        ),
    ),
    Unicode(
        'lizard',
        b'\xf0\x9f\xa6\x8e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd8e',
        ),
    ),
    Unicode(
        'lock',
        b'\xf0\x9f\x94\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd12',
        ),
    ),
    Unicode(
        'lock_with_ink_pen',
        b'\xf0\x9f\x94\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd0f',
        ),
    ),
    Unicode(
        'lollipop',
        b'\xf0\x9f\x8d\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf6d',
        ),
    ),
    Unicode(
        'loop',
        b'\xe2\x9e\xbf'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'loud_sound',
        b'\xf0\x9f\x94\x8a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd0a',
        ),
    ),
    Unicode(
        'loudspeaker',
        b'\xf0\x9f\x93\xa2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udce2',
        ),
    ),
    Unicode(
        'love_hotel',
        b'\xf0\x9f\x8f\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfe9',
        ),
    ),
    Unicode(
        'love_letter',
        b'\xf0\x9f\x92\x8c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc8c',
        ),
    ),
    Unicode(
        'low_brightness',
        b'\xf0\x9f\x94\x85'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd05',
        ),
    ),
    Unicode(
        'lower_left_ballpoint_pen',
        b'\xf0\x9f\x96\x8a'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'lower_left_fountain_pen',
        b'\xf0\x9f\x96\x8b'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'lower_left_paintbrush',
        b'\xf0\x9f\x96\x8c'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'm',
        b'\xe2\x93\x82'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'mag',
        b'\xf0\x9f\x94\x8d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd0d',
        ),
    ),
    Unicode(
        'mag_right',
        b'\xf0\x9f\x94\x8e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd0e',
        ),
    ),
    Unicode(
        'mahjong',
        b'\xf0\x9f\x80\x84'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udc04',
        ),
    ),
    Unicode(
        'mailbox',
        b'\xf0\x9f\x93\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udceb',
        ),
    ),
    Unicode(
        'mailbox_closed',
        b'\xf0\x9f\x93\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcea',
        ),
    ),
    Unicode(
        'mailbox_with_mail',
        b'\xf0\x9f\x93\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcec',
        ),
    ),
    Unicode(
        'mailbox_with_no_mail',
        b'\xf0\x9f\x93\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udced',
        ),
    ),
    Unicode(
        'male_dancer',
        b'\xf0\x9f\x95\xba'.decode('utf8'),
        False,
        (
            'man_dancing',
        ),
        None,
        (
            '\ud83d\udd7a',
        ),
    ),
    Unicode(
        'male_dancer_tone1',
        b'\xf0\x9f\x95\xba\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'man_dancing_tone1',
        ),
        None,
        (
            '\ud83d\udd7a\ud83c\udffb',
        ),
    ),
    Unicode(
        'male_dancer_tone2',
        b'\xf0\x9f\x95\xba\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'man_dancing_tone2',
        ),
        None,
        (
            '\ud83d\udd7a\ud83c\udffc',
        ),
    ),
    Unicode(
        'male_dancer_tone3',
        b'\xf0\x9f\x95\xba\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'man_dancing_tone3',
        ),
        None,
        (
            '\ud83d\udd7a\ud83c\udffd',
        ),
    ),
    Unicode(
        'male_dancer_tone4',
        b'\xf0\x9f\x95\xba\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'man_dancing_tone4',
        ),
        None,
        (
            '\ud83d\udd7a\ud83c\udffe',
        ),
    ),
    Unicode(
        'male_dancer_tone5',
        b'\xf0\x9f\x95\xba\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'man_dancing_tone5',
        ),
        None,
        (
            '\ud83d\udd7a\ud83c\udfff',
        ),
    ),
    Unicode(
        'man',
        b'\xf0\x9f\x91\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68',
        ),
    ),
    Unicode(
        'man_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'man_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'man_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'man_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'man_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'man_in_tuxedo',
        b'\xf0\x9f\xa4\xb5'.decode('utf8'),
        True,
        None,
        None,
        (
            '\ud83e\udd35',
        ),
    ),
    Unicode(
        'man_in_tuxedo_tone1',
        b'\xf0\x9f\xa4\xb5\xf0\x9f\x8f\xbb'.decode('utf8'),
        True,
        None,
        None,
        (
            '\ud83e\udd35\ud83c\udffb',
        ),
    ),
    Unicode(
        'man_in_tuxedo_tone2',
        b'\xf0\x9f\xa4\xb5\xf0\x9f\x8f\xbc'.decode('utf8'),
        True,
        None,
        None,
        (
            '\ud83e\udd35\ud83c\udffc',
        ),
    ),
    Unicode(
        'man_in_tuxedo_tone3',
        b'\xf0\x9f\xa4\xb5\xf0\x9f\x8f\xbd'.decode('utf8'),
        True,
        None,
        None,
        (
            '\ud83e\udd35\ud83c\udffd',
        ),
    ),
    Unicode(
        'man_in_tuxedo_tone4',
        b'\xf0\x9f\xa4\xb5\xf0\x9f\x8f\xbe'.decode('utf8'),
        True,
        None,
        None,
        (
            '\ud83e\udd35\ud83c\udffe',
        ),
    ),
    Unicode(
        'man_in_tuxedo_tone5',
        b'\xf0\x9f\xa4\xb5\xf0\x9f\x8f\xbf'.decode('utf8'),
        True,
        None,
        None,
        (
            '\ud83e\udd35\ud83c\udfff',
        ),
    ),
    Unicode(
        'man_with_gua_pi_mao',
        b'\xf0\x9f\x91\xb2'.decode('utf8'),
        False,
        (
            'man_with_chinese_cap',
        ),
        None,
        (
            '\ud83d\udc72',
        ),
    ),
    Unicode(
        'man_with_gua_pi_mao_tone1',
        b'\xf0\x9f\x91\xb2\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'man_with_chinese_cap_tone1',
        ),
        None,
        (
            '\ud83d\udc72\ud83c\udffb',
        ),
    ),
    Unicode(
        'man_with_gua_pi_mao_tone2',
        b'\xf0\x9f\x91\xb2\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'man_with_chinese_cap_tone2',
        ),
        None,
        (
            '\ud83d\udc72\ud83c\udffc',
        ),
    ),
    Unicode(
        'man_with_gua_pi_mao_tone3',
        b'\xf0\x9f\x91\xb2\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'man_with_chinese_cap_tone3',
        ),
        None,
        (
            '\ud83d\udc72\ud83c\udffd',
        ),
    ),
    Unicode(
        'man_with_gua_pi_mao_tone4',
        b'\xf0\x9f\x91\xb2\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'man_with_chinese_cap_tone4',
        ),
        None,
        (
            '\ud83d\udc72\ud83c\udffe',
        ),
    ),
    Unicode(
        'man_with_gua_pi_mao_tone5',
        b'\xf0\x9f\x91\xb2\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'man_with_chinese_cap_tone5',
        ),
        None,
        (
            '\ud83d\udc72\ud83c\udfff',
        ),
    ),
    Unicode(
        'man_with_turban',
        b'\xf0\x9f\x91\xb3'.decode('utf8'),
        False,
        (
            'person_wearing_turban',
        ),
        None,
        (
            '\ud83d\udc73',
        ),
    ),
    Unicode(
        'man_with_turban_tone1',
        b'\xf0\x9f\x91\xb3\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_wearing_turban_tone1',
        ),
        None,
        (
            '\ud83d\udc73\ud83c\udffb',
        ),
    ),
    Unicode(
        'man_with_turban_tone2',
        b'\xf0\x9f\x91\xb3\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_wearing_turban_tone2',
        ),
        None,
        (
            '\ud83d\udc73\ud83c\udffc',
        ),
    ),
    Unicode(
        'man_with_turban_tone3',
        b'\xf0\x9f\x91\xb3\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_wearing_turban_tone3',
        ),
        None,
        (
            '\ud83d\udc73\ud83c\udffd',
        ),
    ),
    Unicode(
        'man_with_turban_tone4',
        b'\xf0\x9f\x91\xb3\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_wearing_turban_tone4',
        ),
        None,
        (
            '\ud83d\udc73\ud83c\udffe',
        ),
    ),
    Unicode(
        'man_with_turban_tone5',
        b'\xf0\x9f\x91\xb3\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_wearing_turban_tone5',
        ),
        None,
        (
            '\ud83d\udc73\ud83c\udfff',
        ),
    ),
    Unicode(
        'mans_shoe',
        b'\xf0\x9f\x91\x9e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc5e',
        ),
    ),
    Unicode(
        'map',
        b'\xf0\x9f\x97\xba'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'maple_leaf',
        b'\xf0\x9f\x8d\x81'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf41',
        ),
    ),
    Unicode(
        'mask',
        b'\xf0\x9f\x98\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude37',
        ),
    ),
    Unicode(
        'massage',
        b'\xf0\x9f\x92\x86'.decode('utf8'),
        False,
        (
            'person_getting_massage',
        ),
        None,
        (
            '\ud83d\udc86',
        ),
    ),
    Unicode(
        'massage_tone1',
        b'\xf0\x9f\x92\x86\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_getting_massage_tone1',
        ),
        None,
        (
            '\ud83d\udc86\ud83c\udffb',
        ),
    ),
    Unicode(
        'massage_tone2',
        b'\xf0\x9f\x92\x86\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_getting_massage_tone2',
        ),
        None,
        (
            '\ud83d\udc86\ud83c\udffc',
        ),
    ),
    Unicode(
        'massage_tone3',
        b'\xf0\x9f\x92\x86\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_getting_massage_tone3',
        ),
        None,
        (
            '\ud83d\udc86\ud83c\udffd',
        ),
    ),
    Unicode(
        'massage_tone4',
        b'\xf0\x9f\x92\x86\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_getting_massage_tone4',
        ),
        None,
        (
            '\ud83d\udc86\ud83c\udffe',
        ),
    ),
    Unicode(
        'massage_tone5',
        b'\xf0\x9f\x92\x86\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_getting_massage_tone5',
        ),
        None,
        (
            '\ud83d\udc86\ud83c\udfff',
        ),
    ),
    Unicode(
        'meat_on_bone',
        b'\xf0\x9f\x8d\x96'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf56',
        ),
    ),
    Unicode(
        'medal',
        b'\xf0\x9f\x8f\x85'.decode('utf8'),
        False,
        (
            'sports_medal',
        ),
        None,
        (
            '\ud83c\udfc5',
        ),
    ),
    Unicode(
        'mega',
        b'\xf0\x9f\x93\xa3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udce3',
        ),
    ),
    Unicode(
        'melon',
        b'\xf0\x9f\x8d\x88'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf48',
        ),
    ),
    Unicode(
        'menorah',
        b'\xf0\x9f\x95\x8e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd4e',
        ),
    ),
    Unicode(
        'mens',
        b'\xf0\x9f\x9a\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb9',
        ),
    ),
    Unicode(
        'metal',
        b'\xf0\x9f\xa4\x98'.decode('utf8'),
        False,
        (
            'sign_of_the_horns',
        ),
        None,
        (
            '\ud83e\udd18',
        ),
    ),
    Unicode(
        'metal_tone1',
        b'\xf0\x9f\xa4\x98\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'sign_of_the_horns_tone1',
        ),
        None,
        (
            '\ud83e\udd18\ud83c\udffb',
        ),
    ),
    Unicode(
        'metal_tone2',
        b'\xf0\x9f\xa4\x98\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'sign_of_the_horns_tone2',
        ),
        None,
        (
            '\ud83e\udd18\ud83c\udffc',
        ),
    ),
    Unicode(
        'metal_tone3',
        b'\xf0\x9f\xa4\x98\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'sign_of_the_horns_tone3',
        ),
        None,
        (
            '\ud83e\udd18\ud83c\udffd',
        ),
    ),
    Unicode(
        'metal_tone4',
        b'\xf0\x9f\xa4\x98\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'sign_of_the_horns_tone4',
        ),
        None,
        (
            '\ud83e\udd18\ud83c\udffe',
        ),
    ),
    Unicode(
        'metal_tone5',
        b'\xf0\x9f\xa4\x98\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'sign_of_the_horns_tone5',
        ),
        None,
        (
            '\ud83e\udd18\ud83c\udfff',
        ),
    ),
    Unicode(
        'metro',
        b'\xf0\x9f\x9a\x87'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude87',
        ),
    ),
    Unicode(
        'microphone2',
        b'\xf0\x9f\x8e\x99'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'microphone',
        b'\xf0\x9f\x8e\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfa4',
        ),
    ),
    Unicode(
        'microscope',
        b'\xf0\x9f\x94\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd2c',
        ),
    ),
    Unicode(
        'middle_finger',
        b'\xf0\x9f\x96\x95'.decode('utf8'),
        False,
        (
            'reversed_hand_with_middle_finger_extended',
        ),
        None,
        (
            '\ud83d\udd95',
        ),
    ),
    Unicode(
        'middle_finger_tone1',
        b'\xf0\x9f\x96\x95\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'reversed_hand_with_middle_finger_extended_tone1',
        ),
        None,
        (
            '\ud83d\udd95\ud83c\udffb',
        ),
    ),
    Unicode(
        'middle_finger_tone2',
        b'\xf0\x9f\x96\x95\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'reversed_hand_with_middle_finger_extended_tone2',
        ),
        None,
        (
            '\ud83d\udd95\ud83c\udffc',
        ),
    ),
    Unicode(
        'middle_finger_tone3',
        b'\xf0\x9f\x96\x95\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'reversed_hand_with_middle_finger_extended_tone3',
        ),
        None,
        (
            '\ud83d\udd95\ud83c\udffd',
        ),
    ),
    Unicode(
        'middle_finger_tone4',
        b'\xf0\x9f\x96\x95\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'reversed_hand_with_middle_finger_extended_tone4',
        ),
        None,
        (
            '\ud83d\udd95\ud83c\udffe',
        ),
    ),
    Unicode(
        'middle_finger_tone5',
        b'\xf0\x9f\x96\x95\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'reversed_hand_with_middle_finger_extended_tone5',
        ),
        None,
        (
            '\ud83d\udd95\ud83c\udfff',
        ),
    ),
    Unicode(
        'military_medal',
        b'\xf0\x9f\x8e\x96'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'milky_way',
        b'\xf0\x9f\x8c\x8c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf0c',
        ),
    ),
    Unicode(
        'minibus',
        b'\xf0\x9f\x9a\x90'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude90',
        ),
    ),
    Unicode(
        'minidisc',
        b'\xf0\x9f\x92\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcbd',
        ),
    ),
    Unicode(
        'mobile_phone_off',
        b'\xf0\x9f\x93\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcf4',
        ),
    ),
    Unicode(
        'money_mouth',
        b'\xf0\x9f\xa4\x91'.decode('utf8'),
        False,
        (
            'money_mouth_face',
        ),
        None,
        (
            '\ud83e\udd11',
        ),
    ),
    Unicode(
        'money_with_wings',
        b'\xf0\x9f\x92\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcb8',
        ),
    ),
    Unicode(
        'moneybag',
        b'\xf0\x9f\x92\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcb0',
        ),
    ),
    Unicode(
        'monkey',
        b'\xf0\x9f\x90\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc12',
        ),
    ),
    Unicode(
        'monkey_face',
        b'\xf0\x9f\x90\xb5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc35',
        ),
    ),
    Unicode(
        'monorail',
        b'\xf0\x9f\x9a\x9d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude9d',
        ),
    ),
    Unicode(
        'mortar_board',
        b'\xf0\x9f\x8e\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf93',
        ),
    ),
    Unicode(
        'mosque',
        b'\xf0\x9f\x95\x8c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd4c',
        ),
    ),
    Unicode(
        'mother_christmas',
        b'\xf0\x9f\xa4\xb6'.decode('utf8'),
        False,
        (
            'mrs_claus',
        ),
        None,
        (
            '\ud83e\udd36',
        ),
    ),
    Unicode(
        'mother_christmas_tone1',
        b'\xf0\x9f\xa4\xb6\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'mrs_claus_tone1',
        ),
        None,
        (
            '\ud83e\udd36\ud83c\udffb',
        ),
    ),
    Unicode(
        'mother_christmas_tone2',
        b'\xf0\x9f\xa4\xb6\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'mrs_claus_tone2',
        ),
        None,
        (
            '\ud83e\udd36\ud83c\udffc',
        ),
    ),
    Unicode(
        'mother_christmas_tone3',
        b'\xf0\x9f\xa4\xb6\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'mrs_claus_tone3',
        ),
        None,
        (
            '\ud83e\udd36\ud83c\udffd',
        ),
    ),
    Unicode(
        'mother_christmas_tone4',
        b'\xf0\x9f\xa4\xb6\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'mrs_claus_tone4',
        ),
        None,
        (
            '\ud83e\udd36\ud83c\udffe',
        ),
    ),
    Unicode(
        'mother_christmas_tone5',
        b'\xf0\x9f\xa4\xb6\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'mrs_claus_tone5',
        ),
        None,
        (
            '\ud83e\udd36\ud83c\udfff',
        ),
    ),
    Unicode(
        'motor_scooter',
        b'\xf0\x9f\x9b\xb5'.decode('utf8'),
        False,
        (
            'motorbike',
        ),
        None,
        (
            '\ud83d\udef5',
        ),
    ),
    Unicode(
        'motorboat',
        b'\xf0\x9f\x9b\xa5'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'motorcycle',
        b'\xf0\x9f\x8f\x8d'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'motorway',
        b'\xf0\x9f\x9b\xa3'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'mount_fuji',
        b'\xf0\x9f\x97\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\uddfb',
        ),
    ),
    Unicode(
        'mountain',
        b'\xe2\x9b\xb0'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'mountain_bicyclist',
        b'\xf0\x9f\x9a\xb5'.decode('utf8'),
        False,
        (
            'person_mountain_biking',
        ),
        None,
        (
            '\ud83d\udeb5',
        ),
    ),
    Unicode(
        'mountain_bicyclist_tone1',
        b'\xf0\x9f\x9a\xb5\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_mountain_biking_tone1',
        ),
        None,
        (
            '\ud83d\udeb5\ud83c\udffb',
        ),
    ),
    Unicode(
        'mountain_bicyclist_tone2',
        b'\xf0\x9f\x9a\xb5\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_mountain_biking_tone2',
        ),
        None,
        (
            '\ud83d\udeb5\ud83c\udffc',
        ),
    ),
    Unicode(
        'mountain_bicyclist_tone3',
        b'\xf0\x9f\x9a\xb5\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_mountain_biking_tone3',
        ),
        None,
        (
            '\ud83d\udeb5\ud83c\udffd',
        ),
    ),
    Unicode(
        'mountain_bicyclist_tone4',
        b'\xf0\x9f\x9a\xb5\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_mountain_biking_tone4',
        ),
        None,
        (
            '\ud83d\udeb5\ud83c\udffe',
        ),
    ),
    Unicode(
        'mountain_bicyclist_tone5',
        b'\xf0\x9f\x9a\xb5\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_mountain_biking_tone5',
        ),
        None,
        (
            '\ud83d\udeb5\ud83c\udfff',
        ),
    ),
    Unicode(
        'mountain_cableway',
        b'\xf0\x9f\x9a\xa0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udea0',
        ),
    ),
    Unicode(
        'mountain_railway',
        b'\xf0\x9f\x9a\x9e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude9e',
        ),
    ),
    Unicode(
        'mountain_snow',
        b'\xf0\x9f\x8f\x94'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'mouse2',
        b'\xf0\x9f\x90\x81'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc01',
        ),
    ),
    Unicode(
        'mouse',
        b'\xf0\x9f\x90\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc2d',
        ),
    ),
    Unicode(
        'mouse_three_button',
        b'\xf0\x9f\x96\xb1'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'movie_camera',
        b'\xf0\x9f\x8e\xa5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfa5',
        ),
    ),
    Unicode(
        'moyai',
        b'\xf0\x9f\x97\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\uddff',
        ),
    ),
    Unicode(
        'muscle',
        b'\xf0\x9f\x92\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcaa',
        ),
    ),
    Unicode(
        'muscle_tone1',
        b'\xf0\x9f\x92\xaa\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcaa\ud83c\udffb',
        ),
    ),
    Unicode(
        'muscle_tone2',
        b'\xf0\x9f\x92\xaa\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcaa\ud83c\udffc',
        ),
    ),
    Unicode(
        'muscle_tone3',
        b'\xf0\x9f\x92\xaa\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcaa\ud83c\udffd',
        ),
    ),
    Unicode(
        'muscle_tone4',
        b'\xf0\x9f\x92\xaa\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcaa\ud83c\udffe',
        ),
    ),
    Unicode(
        'muscle_tone5',
        b'\xf0\x9f\x92\xaa\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcaa\ud83c\udfff',
        ),
    ),
    Unicode(
        'mushroom',
        b'\xf0\x9f\x8d\x84'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf44',
        ),
    ),
    Unicode(
        'musical_keyboard',
        b'\xf0\x9f\x8e\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfb9',
        ),
    ),
    Unicode(
        'musical_note',
        b'\xf0\x9f\x8e\xb5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfb5',
        ),
    ),
    Unicode(
        'musical_score',
        b'\xf0\x9f\x8e\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfbc',
        ),
    ),
    Unicode(
        'mute',
        b'\xf0\x9f\x94\x87'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd07',
        ),
    ),
    Unicode(
        'nail_care',
        b'\xf0\x9f\x92\x85'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc85',
        ),
    ),
    Unicode(
        'nail_care_tone1',
        b'\xf0\x9f\x92\x85\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc85\ud83c\udffb',
        ),
    ),
    Unicode(
        'nail_care_tone2',
        b'\xf0\x9f\x92\x85\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc85\ud83c\udffc',
        ),
    ),
    Unicode(
        'nail_care_tone3',
        b'\xf0\x9f\x92\x85\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc85\ud83c\udffd',
        ),
    ),
    Unicode(
        'nail_care_tone4',
        b'\xf0\x9f\x92\x85\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc85\ud83c\udffe',
        ),
    ),
    Unicode(
        'nail_care_tone5',
        b'\xf0\x9f\x92\x85\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc85\ud83c\udfff',
        ),
    ),
    Unicode(
        'name_badge',
        b'\xf0\x9f\x93\x9b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcdb',
        ),
    ),
    Unicode(
        'national_park',
        b'\xf0\x9f\x8f\x9e'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'nauseated_face',
        b'\xf0\x9f\xa4\xa2'.decode('utf8'),
        False,
        (
            'sick',
        ),
        None,
        (
            '\ud83e\udd22',
        ),
    ),
    Unicode(
        'necktie',
        b'\xf0\x9f\x91\x94'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc54',
        ),
    ),
    Unicode(
        'negative_squared_cross_mark',
        b'\xe2\x9d\x8e'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'nerd',
        b'\xf0\x9f\xa4\x93'.decode('utf8'),
        False,
        (
            'nerd_face',
        ),
        None,
        (
            '\ud83e\udd13',
        ),
    ),
    Unicode(
        'new',
        b'\xf0\x9f\x86\x95'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udd95',
        ),
    ),
    Unicode(
        'new_moon',
        b'\xf0\x9f\x8c\x91'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf11',
        ),
    ),
    Unicode(
        'new_moon_with_face',
        b'\xf0\x9f\x8c\x9a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf1a',
        ),
    ),
    Unicode(
        'newspaper2',
        b'\xf0\x9f\x97\x9e'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'newspaper',
        b'\xf0\x9f\x93\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcf0',
        ),
    ),
    Unicode(
        'next_track',
        b'\xe2\x8f\xad'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'ng',
        b'\xf0\x9f\x86\x96'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udd96',
        ),
    ),
    Unicode(
        'night_with_stars',
        b'\xf0\x9f\x8c\x83'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf03',
        ),
    ),
    Unicode(
        'nine',
        b'9\xe2\x83\xa3'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'no_bell',
        b'\xf0\x9f\x94\x95'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd15',
        ),
    ),
    Unicode(
        'no_bicycles',
        b'\xf0\x9f\x9a\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb3',
        ),
    ),
    Unicode(
        'no_entry',
        b'\xe2\x9b\x94'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'no_entry_sign',
        b'\xf0\x9f\x9a\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeab',
        ),
    ),
    Unicode(
        'no_good',
        b'\xf0\x9f\x99\x85'.decode('utf8'),
        False,
        (
            'person_gesturing_no',
        ),
        None,
        (
            '\ud83d\ude45',
        ),
    ),
    Unicode(
        'no_good_tone1',
        b'\xf0\x9f\x99\x85\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_gesturing_no_tone1',
        ),
        None,
        (
            '\ud83d\ude45\ud83c\udffb',
        ),
    ),
    Unicode(
        'no_good_tone2',
        b'\xf0\x9f\x99\x85\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_gesturing_no_tone2',
        ),
        None,
        (
            '\ud83d\ude45\ud83c\udffc',
        ),
    ),
    Unicode(
        'no_good_tone3',
        b'\xf0\x9f\x99\x85\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_gesturing_no_tone3',
        ),
        None,
        (
            '\ud83d\ude45\ud83c\udffd',
        ),
    ),
    Unicode(
        'no_good_tone4',
        b'\xf0\x9f\x99\x85\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_gesturing_no_tone4',
        ),
        None,
        (
            '\ud83d\ude45\ud83c\udffe',
        ),
    ),
    Unicode(
        'no_good_tone5',
        b'\xf0\x9f\x99\x85\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_gesturing_no_tone5',
        ),
        None,
        (
            '\ud83d\ude45\ud83c\udfff',
        ),
    ),
    Unicode(
        'no_mobile_phones',
        b'\xf0\x9f\x93\xb5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcf5',
        ),
    ),
    Unicode(
        'no_mouth',
        b'\xf0\x9f\x98\xb6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude36',
        ),
    ),
    Unicode(
        'no_pedestrians',
        b'\xf0\x9f\x9a\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb7',
        ),
    ),
    Unicode(
        'no_smoking',
        b'\xf0\x9f\x9a\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udead',
        ),
    ),
    Unicode(
        'non_potable_water',
        b'\xf0\x9f\x9a\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb1',
        ),
    ),
    Unicode(
        'nose',
        b'\xf0\x9f\x91\x83'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc43',
        ),
    ),
    Unicode(
        'nose_tone1',
        b'\xf0\x9f\x91\x83\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc43\ud83c\udffb',
        ),
    ),
    Unicode(
        'nose_tone2',
        b'\xf0\x9f\x91\x83\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc43\ud83c\udffc',
        ),
    ),
    Unicode(
        'nose_tone3',
        b'\xf0\x9f\x91\x83\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc43\ud83c\udffd',
        ),
    ),
    Unicode(
        'nose_tone4',
        b'\xf0\x9f\x91\x83\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc43\ud83c\udffe',
        ),
    ),
    Unicode(
        'nose_tone5',
        b'\xf0\x9f\x91\x83\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc43\ud83c\udfff',
        ),
    ),
    Unicode(
        'notebook',
        b'\xf0\x9f\x93\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcd3',
        ),
    ),
    Unicode(
        'notebook_with_decorative_cover',
        b'\xf0\x9f\x93\x94'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcd4',
        ),
    ),
    Unicode(
        'notepad_spiral',
        b'\xf0\x9f\x97\x92'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'notes',
        b'\xf0\x9f\x8e\xb6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfb6',
        ),
    ),
    Unicode(
        'nut_and_bolt',
        b'\xf0\x9f\x94\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd29',
        ),
    ),
    Unicode(
        'o2',
        b'\xf0\x9f\x85\xbe'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'o',
        b'\xe2\xad\x95'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'ocean',
        b'\xf0\x9f\x8c\x8a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf0a',
        ),
    ),
    Unicode(
        'octagonal_sign',
        b'\xf0\x9f\x9b\x91'.decode('utf8'),
        False,
        (
            'stop_sign',
        ),
        None,
        (
            '\ud83d\uded1',
        ),
    ),
    Unicode(
        'octopus',
        b'\xf0\x9f\x90\x99'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc19',
        ),
    ),
    Unicode(
        'oden',
        b'\xf0\x9f\x8d\xa2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf62',
        ),
    ),
    Unicode(
        'office',
        b'\xf0\x9f\x8f\xa2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfe2',
        ),
    ),
    Unicode(
        'oil',
        b'\xf0\x9f\x9b\xa2'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'ok',
        b'\xf0\x9f\x86\x97'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udd97',
        ),
    ),
    Unicode(
        'ok_hand',
        b'\xf0\x9f\x91\x8c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4c',
        ),
    ),
    Unicode(
        'ok_hand_tone1',
        b'\xf0\x9f\x91\x8c\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4c\ud83c\udffb',
        ),
    ),
    Unicode(
        'ok_hand_tone2',
        b'\xf0\x9f\x91\x8c\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4c\ud83c\udffc',
        ),
    ),
    Unicode(
        'ok_hand_tone3',
        b'\xf0\x9f\x91\x8c\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4c\ud83c\udffd',
        ),
    ),
    Unicode(
        'ok_hand_tone4',
        b'\xf0\x9f\x91\x8c\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4c\ud83c\udffe',
        ),
    ),
    Unicode(
        'ok_hand_tone5',
        b'\xf0\x9f\x91\x8c\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4c\ud83c\udfff',
        ),
    ),
    Unicode(
        'ok_woman',
        b'\xf0\x9f\x99\x86'.decode('utf8'),
        False,
        (
            'person_gesturing_ok',
        ),
        None,
        (
            '\ud83d\ude46',
        ),
    ),
    Unicode(
        'ok_woman_tone1',
        b'\xf0\x9f\x99\x86\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_gesturing_ok_tone1',
        ),
        None,
        (
            '\ud83d\ude46\ud83c\udffb',
        ),
    ),
    Unicode(
        'ok_woman_tone2',
        b'\xf0\x9f\x99\x86\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_gesturing_ok_tone2',
        ),
        None,
        (
            '\ud83d\ude46\ud83c\udffc',
        ),
    ),
    Unicode(
        'ok_woman_tone3',
        b'\xf0\x9f\x99\x86\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_gesturing_ok_tone3',
        ),
        None,
        (
            '\ud83d\ude46\ud83c\udffd',
        ),
    ),
    Unicode(
        'ok_woman_tone4',
        b'\xf0\x9f\x99\x86\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_gesturing_ok_tone4',
        ),
        None,
        (
            '\ud83d\ude46\ud83c\udffe',
        ),
    ),
    Unicode(
        'ok_woman_tone5',
        b'\xf0\x9f\x99\x86\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_gesturing_ok_tone5',
        ),
        None,
        (
            '\ud83d\ude46\ud83c\udfff',
        ),
    ),
    Unicode(
        'older_man',
        b'\xf0\x9f\x91\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc74',
        ),
    ),
    Unicode(
        'older_man_tone1',
        b'\xf0\x9f\x91\xb4\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc74\ud83c\udffb',
        ),
    ),
    Unicode(
        'older_man_tone2',
        b'\xf0\x9f\x91\xb4\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc74\ud83c\udffc',
        ),
    ),
    Unicode(
        'older_man_tone3',
        b'\xf0\x9f\x91\xb4\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc74\ud83c\udffd',
        ),
    ),
    Unicode(
        'older_man_tone4',
        b'\xf0\x9f\x91\xb4\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc74\ud83c\udffe',
        ),
    ),
    Unicode(
        'older_man_tone5',
        b'\xf0\x9f\x91\xb4\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc74\ud83c\udfff',
        ),
    ),
    Unicode(
        'om_symbol',
        b'\xf0\x9f\x95\x89'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'on',
        b'\xf0\x9f\x94\x9b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd1b',
        ),
    ),
    Unicode(
        'oncoming_automobile',
        b'\xf0\x9f\x9a\x98'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude98',
        ),
    ),
    Unicode(
        'oncoming_bus',
        b'\xf0\x9f\x9a\x8d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude8d',
        ),
    ),
    Unicode(
        'oncoming_police_car',
        b'\xf0\x9f\x9a\x94'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude94',
        ),
    ),
    Unicode(
        'oncoming_taxi',
        b'\xf0\x9f\x9a\x96'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude96',
        ),
    ),
    Unicode(
        'one',
        b'1\xe2\x83\xa3'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'open_file_folder',
        b'\xf0\x9f\x93\x82'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcc2',
        ),
    ),
    Unicode(
        'open_hands',
        b'\xf0\x9f\x91\x90'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc50',
        ),
    ),
    Unicode(
        'open_hands_tone1',
        b'\xf0\x9f\x91\x90\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc50\ud83c\udffb',
        ),
    ),
    Unicode(
        'open_hands_tone2',
        b'\xf0\x9f\x91\x90\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc50\ud83c\udffc',
        ),
    ),
    Unicode(
        'open_hands_tone3',
        b'\xf0\x9f\x91\x90\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc50\ud83c\udffd',
        ),
    ),
    Unicode(
        'open_hands_tone4',
        b'\xf0\x9f\x91\x90\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc50\ud83c\udffe',
        ),
    ),
    Unicode(
        'open_hands_tone5',
        b'\xf0\x9f\x91\x90\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc50\ud83c\udfff',
        ),
    ),
    Unicode(
        'ophiuchus',
        b'\xe2\x9b\x8e'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'orange_book',
        b'\xf0\x9f\x93\x99'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcd9',
        ),
    ),
    Unicode(
        'orthodox_cross',
        b'\xe2\x98\xa6'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'outbox_tray',
        b'\xf0\x9f\x93\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udce4',
        ),
    ),
    Unicode(
        'owl',
        b'\xf0\x9f\xa6\x89'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd89',
        ),
    ),
    Unicode(
        'ox',
        b'\xf0\x9f\x90\x82'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc02',
        ),
    ),
    Unicode(
        'package',
        b'\xf0\x9f\x93\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udce6',
        ),
    ),
    Unicode(
        'paella',
        b'\xf0\x9f\xa5\x98'.decode('utf8'),
        False,
        (
            'shallow_pan_of_food',
        ),
        None,
        (
            '\ud83e\udd58',
        ),
    ),
    Unicode(
        'page_facing_up',
        b'\xf0\x9f\x93\x84'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcc4',
        ),
    ),
    Unicode(
        'page_with_curl',
        b'\xf0\x9f\x93\x83'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcc3',
        ),
    ),
    Unicode(
        'pager',
        b'\xf0\x9f\x93\x9f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcdf',
        ),
    ),
    Unicode(
        'palm_tree',
        b'\xf0\x9f\x8c\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf34',
        ),
    ),
    Unicode(
        'pancakes',
        b'\xf0\x9f\xa5\x9e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd5e',
        ),
    ),
    Unicode(
        'panda_face',
        b'\xf0\x9f\x90\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc3c',
        ),
    ),
    Unicode(
        'paperclip',
        b'\xf0\x9f\x93\x8e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcce',
        ),
    ),
    Unicode(
        'parking',
        b'\xf0\x9f\x85\xbf'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'part_alternation_mark',
        b'\xe3\x80\xbd'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'partly_sunny',
        b'\xe2\x9b\x85'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'passport_control',
        b'\xf0\x9f\x9b\x82'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udec2',
        ),
    ),
    Unicode(
        'peace',
        b'\xe2\x98\xae'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'peach',
        b'\xf0\x9f\x8d\x91'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf51',
        ),
    ),
    Unicode(
        'peanuts',
        b'\xf0\x9f\xa5\x9c'.decode('utf8'),
        False,
        (
            'shelled_peanut',
        ),
        None,
        (
            '\ud83e\udd5c',
        ),
    ),
    Unicode(
        'pear',
        b'\xf0\x9f\x8d\x90'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf50',
        ),
    ),
    Unicode(
        'pencil2',
        b'\xe2\x9c\x8f'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'pencil',
        b'\xf0\x9f\x93\x9d'.decode('utf8'),
        False,
        (
            'memo',
        ),
        None,
        (
            '\ud83d\udcdd',
        ),
    ),
    Unicode(
        'penguin',
        b'\xf0\x9f\x90\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc27',
        ),
    ),
    Unicode(
        'pensive',
        b'\xf0\x9f\x98\x94'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude14',
        ),
    ),
    Unicode(
        'performing_arts',
        b'\xf0\x9f\x8e\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfad',
        ),
    ),
    Unicode(
        'persevere',
        b'\xf0\x9f\x98\xa3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude23',
        ),
    ),
    Unicode(
        'person_frowning',
        b'\xf0\x9f\x99\x8d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4d',
        ),
    ),
    Unicode(
        'person_frowning_tone1',
        b'\xf0\x9f\x99\x8d\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4d\ud83c\udffb',
        ),
    ),
    Unicode(
        'person_frowning_tone2',
        b'\xf0\x9f\x99\x8d\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4d\ud83c\udffc',
        ),
    ),
    Unicode(
        'person_frowning_tone3',
        b'\xf0\x9f\x99\x8d\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4d\ud83c\udffd',
        ),
    ),
    Unicode(
        'person_frowning_tone4',
        b'\xf0\x9f\x99\x8d\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4d\ud83c\udffe',
        ),
    ),
    Unicode(
        'person_frowning_tone5',
        b'\xf0\x9f\x99\x8d\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4d\ud83c\udfff',
        ),
    ),
    Unicode(
        'person_with_blond_hair',
        b'\xf0\x9f\x91\xb1'.decode('utf8'),
        False,
        (
            'blond_haired_person',
        ),
        None,
        (
            '\ud83d\udc71',
        ),
    ),
    Unicode(
        'person_with_blond_hair_tone1',
        b'\xf0\x9f\x91\xb1\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'blond_haired_person_tone1',
        ),
        None,
        (
            '\ud83d\udc71\ud83c\udffb',
        ),
    ),
    Unicode(
        'person_with_blond_hair_tone2',
        b'\xf0\x9f\x91\xb1\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'blond_haired_person_tone2',
        ),
        None,
        (
            '\ud83d\udc71\ud83c\udffc',
        ),
    ),
    Unicode(
        'person_with_blond_hair_tone3',
        b'\xf0\x9f\x91\xb1\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'blond_haired_person_tone3',
        ),
        None,
        (
            '\ud83d\udc71\ud83c\udffd',
        ),
    ),
    Unicode(
        'person_with_blond_hair_tone4',
        b'\xf0\x9f\x91\xb1\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'blond_haired_person_tone4',
        ),
        None,
        (
            '\ud83d\udc71\ud83c\udffe',
        ),
    ),
    Unicode(
        'person_with_blond_hair_tone5',
        b'\xf0\x9f\x91\xb1\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'blond_haired_person_tone5',
        ),
        None,
        (
            '\ud83d\udc71\ud83c\udfff',
        ),
    ),
    Unicode(
        'person_with_pouting_face',
        b'\xf0\x9f\x99\x8e'.decode('utf8'),
        False,
        (
            'person_pouting',
        ),
        None,
        (
            '\ud83d\ude4e',
        ),
    ),
    Unicode(
        'person_with_pouting_face_tone1',
        b'\xf0\x9f\x99\x8e\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_pouting_tone1',
        ),
        None,
        (
            '\ud83d\ude4e\ud83c\udffb',
        ),
    ),
    Unicode(
        'person_with_pouting_face_tone2',
        b'\xf0\x9f\x99\x8e\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_pouting_tone2',
        ),
        None,
        (
            '\ud83d\ude4e\ud83c\udffc',
        ),
    ),
    Unicode(
        'person_with_pouting_face_tone3',
        b'\xf0\x9f\x99\x8e\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_pouting_tone3',
        ),
        None,
        (
            '\ud83d\ude4e\ud83c\udffd',
        ),
    ),
    Unicode(
        'person_with_pouting_face_tone4',
        b'\xf0\x9f\x99\x8e\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_pouting_tone4',
        ),
        None,
        (
            '\ud83d\ude4e\ud83c\udffe',
        ),
    ),
    Unicode(
        'person_with_pouting_face_tone5',
        b'\xf0\x9f\x99\x8e\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_pouting_tone5',
        ),
        None,
        (
            '\ud83d\ude4e\ud83c\udfff',
        ),
    ),
    Unicode(
        'pick',
        b'\xe2\x9b\x8f'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'pig2',
        b'\xf0\x9f\x90\x96'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc16',
        ),
    ),
    Unicode(
        'pig',
        b'\xf0\x9f\x90\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc37',
        ),
    ),
    Unicode(
        'pig_nose',
        b'\xf0\x9f\x90\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc3d',
        ),
    ),
    Unicode(
        'pill',
        b'\xf0\x9f\x92\x8a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc8a',
        ),
    ),
    Unicode(
        'pineapple',
        b'\xf0\x9f\x8d\x8d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf4d',
        ),
    ),
    Unicode(
        'ping_pong',
        b'\xf0\x9f\x8f\x93'.decode('utf8'),
        False,
        (
            'table_tennis',
        ),
        None,
        (
            '\ud83c\udfd3',
        ),
    ),
    Unicode(
        'pisces',
        b'\xe2\x99\x93'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'pizza',
        b'\xf0\x9f\x8d\x95'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf55',
        ),
    ),
    Unicode(
        'place_of_worship',
        b'\xf0\x9f\x9b\x90'.decode('utf8'),
        False,
        (
            'worship_symbol',
        ),
        None,
        (
            '\ud83d\uded0',
        ),
    ),
    Unicode(
        'play_pause',
        b'\xe2\x8f\xaf'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'point_down',
        b'\xf0\x9f\x91\x87'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc47',
        ),
    ),
    Unicode(
        'point_down_tone1',
        b'\xf0\x9f\x91\x87\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc47\ud83c\udffb',
        ),
    ),
    Unicode(
        'point_down_tone2',
        b'\xf0\x9f\x91\x87\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc47\ud83c\udffc',
        ),
    ),
    Unicode(
        'point_down_tone3',
        b'\xf0\x9f\x91\x87\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc47\ud83c\udffd',
        ),
    ),
    Unicode(
        'point_down_tone4',
        b'\xf0\x9f\x91\x87\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc47\ud83c\udffe',
        ),
    ),
    Unicode(
        'point_down_tone5',
        b'\xf0\x9f\x91\x87\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc47\ud83c\udfff',
        ),
    ),
    Unicode(
        'point_left',
        b'\xf0\x9f\x91\x88'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc48',
        ),
    ),
    Unicode(
        'point_left_tone1',
        b'\xf0\x9f\x91\x88\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc48\ud83c\udffb',
        ),
    ),
    Unicode(
        'point_left_tone2',
        b'\xf0\x9f\x91\x88\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc48\ud83c\udffc',
        ),
    ),
    Unicode(
        'point_left_tone3',
        b'\xf0\x9f\x91\x88\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc48\ud83c\udffd',
        ),
    ),
    Unicode(
        'point_left_tone4',
        b'\xf0\x9f\x91\x88\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc48\ud83c\udffe',
        ),
    ),
    Unicode(
        'point_left_tone5',
        b'\xf0\x9f\x91\x88\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc48\ud83c\udfff',
        ),
    ),
    Unicode(
        'point_right',
        b'\xf0\x9f\x91\x89'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc49',
        ),
    ),
    Unicode(
        'point_right_tone1',
        b'\xf0\x9f\x91\x89\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc49\ud83c\udffb',
        ),
    ),
    Unicode(
        'point_right_tone2',
        b'\xf0\x9f\x91\x89\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc49\ud83c\udffc',
        ),
    ),
    Unicode(
        'point_right_tone3',
        b'\xf0\x9f\x91\x89\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc49\ud83c\udffd',
        ),
    ),
    Unicode(
        'point_right_tone4',
        b'\xf0\x9f\x91\x89\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc49\ud83c\udffe',
        ),
    ),
    Unicode(
        'point_right_tone5',
        b'\xf0\x9f\x91\x89\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc49\ud83c\udfff',
        ),
    ),
    Unicode(
        'point_up',
        b'\xe2\x98\x9d'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'point_up_tone1',
        b'\xe2\x98\x9d\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '☝\ud83c\udffb',
        ),
    ),
    Unicode(
        'point_up_tone2',
        b'\xe2\x98\x9d\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '☝\ud83c\udffc',
        ),
    ),
    Unicode(
        'point_up_tone3',
        b'\xe2\x98\x9d\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '☝\ud83c\udffd',
        ),
    ),
    Unicode(
        'point_up_tone4',
        b'\xe2\x98\x9d\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '☝\ud83c\udffe',
        ),
    ),
    Unicode(
        'point_up_tone5',
        b'\xe2\x98\x9d\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '☝\ud83c\udfff',
        ),
    ),
    Unicode(
        'point_up_2',
        b'\xf0\x9f\x91\x86'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc46',
        ),
    ),
    Unicode(
        'point_up_2_tone1',
        b'\xf0\x9f\x91\x86\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc46\ud83c\udffb',
        ),
    ),
    Unicode(
        'point_up_2_tone2',
        b'\xf0\x9f\x91\x86\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc46\ud83c\udffc',
        ),
    ),
    Unicode(
        'point_up_2_tone3',
        b'\xf0\x9f\x91\x86\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc46\ud83c\udffd',
        ),
    ),
    Unicode(
        'point_up_2_tone4',
        b'\xf0\x9f\x91\x86\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc46\ud83c\udffe',
        ),
    ),
    Unicode(
        'point_up_2_tone5',
        b'\xf0\x9f\x91\x86\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc46\ud83c\udfff',
        ),
    ),
    Unicode(
        'police_car',
        b'\xf0\x9f\x9a\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude93',
        ),
    ),
    Unicode(
        'poodle',
        b'\xf0\x9f\x90\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc29',
        ),
    ),
    Unicode(
        'popcorn',
        b'\xf0\x9f\x8d\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf7f',
        ),
    ),
    Unicode(
        'post_office',
        b'\xf0\x9f\x8f\xa3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfe3',
        ),
    ),
    Unicode(
        'postal_horn',
        b'\xf0\x9f\x93\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcef',
        ),
    ),
    Unicode(
        'postbox',
        b'\xf0\x9f\x93\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcee',
        ),
    ),
    Unicode(
        'potable_water',
        b'\xf0\x9f\x9a\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb0',
        ),
    ),
    Unicode(
        'potato',
        b'\xf0\x9f\xa5\x94'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd54',
        ),
    ),
    Unicode(
        'pouch',
        b'\xf0\x9f\x91\x9d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc5d',
        ),
    ),
    Unicode(
        'poultry_leg',
        b'\xf0\x9f\x8d\x97'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf57',
        ),
    ),
    Unicode(
        'pound',
        b'\xf0\x9f\x92\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcb7',
        ),
    ),
    Unicode(
        'pouting_cat',
        b'\xf0\x9f\x98\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude3e',
        ),
    ),
    Unicode(
        'pray',
        b'\xf0\x9f\x99\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4f',
        ),
    ),
    Unicode(
        'pray_tone1',
        b'\xf0\x9f\x99\x8f\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4f\ud83c\udffb',
        ),
    ),
    Unicode(
        'pray_tone2',
        b'\xf0\x9f\x99\x8f\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4f\ud83c\udffc',
        ),
    ),
    Unicode(
        'pray_tone3',
        b'\xf0\x9f\x99\x8f\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4f\ud83c\udffd',
        ),
    ),
    Unicode(
        'pray_tone4',
        b'\xf0\x9f\x99\x8f\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4f\ud83c\udffe',
        ),
    ),
    Unicode(
        'pray_tone5',
        b'\xf0\x9f\x99\x8f\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4f\ud83c\udfff',
        ),
    ),
    Unicode(
        'prayer_beads',
        b'\xf0\x9f\x93\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcff',
        ),
    ),
    Unicode(
        'previous_track',
        b'\xe2\x8f\xae'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'prince',
        b'\xf0\x9f\xa4\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd34',
        ),
    ),
    Unicode(
        'prince_tone1',
        b'\xf0\x9f\xa4\xb4\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd34\ud83c\udffb',
        ),
    ),
    Unicode(
        'prince_tone2',
        b'\xf0\x9f\xa4\xb4\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd34\ud83c\udffc',
        ),
    ),
    Unicode(
        'prince_tone3',
        b'\xf0\x9f\xa4\xb4\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd34\ud83c\udffd',
        ),
    ),
    Unicode(
        'prince_tone4',
        b'\xf0\x9f\xa4\xb4\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd34\ud83c\udffe',
        ),
    ),
    Unicode(
        'prince_tone5',
        b'\xf0\x9f\xa4\xb4\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd34\ud83c\udfff',
        ),
    ),
    Unicode(
        'princess',
        b'\xf0\x9f\x91\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc78',
        ),
    ),
    Unicode(
        'princess_tone1',
        b'\xf0\x9f\x91\xb8\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc78\ud83c\udffb',
        ),
    ),
    Unicode(
        'princess_tone2',
        b'\xf0\x9f\x91\xb8\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc78\ud83c\udffc',
        ),
    ),
    Unicode(
        'princess_tone3',
        b'\xf0\x9f\x91\xb8\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc78\ud83c\udffd',
        ),
    ),
    Unicode(
        'princess_tone4',
        b'\xf0\x9f\x91\xb8\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc78\ud83c\udffe',
        ),
    ),
    Unicode(
        'princess_tone5',
        b'\xf0\x9f\x91\xb8\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc78\ud83c\udfff',
        ),
    ),
    Unicode(
        'printer',
        b'\xf0\x9f\x96\xa8'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'punch',
        b'\xf0\x9f\x91\x8a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4a',
        ),
    ),
    Unicode(
        'punch_tone1',
        b'\xf0\x9f\x91\x8a\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4a\ud83c\udffb',
        ),
    ),
    Unicode(
        'punch_tone2',
        b'\xf0\x9f\x91\x8a\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4a\ud83c\udffc',
        ),
    ),
    Unicode(
        'punch_tone3',
        b'\xf0\x9f\x91\x8a\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4a\ud83c\udffd',
        ),
    ),
    Unicode(
        'punch_tone4',
        b'\xf0\x9f\x91\x8a\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4a\ud83c\udffe',
        ),
    ),
    Unicode(
        'punch_tone5',
        b'\xf0\x9f\x91\x8a\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4a\ud83c\udfff',
        ),
    ),
    Unicode(
        'purple_heart',
        b'\xf0\x9f\x92\x9c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc9c',
        ),
    ),
    Unicode(
        'purse',
        b'\xf0\x9f\x91\x9b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc5b',
        ),
    ),
    Unicode(
        'pushpin',
        b'\xf0\x9f\x93\x8c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udccc',
        ),
    ),
    Unicode(
        'put_litter_in_its_place',
        b'\xf0\x9f\x9a\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeae',
        ),
    ),
    Unicode(
        'question',
        b'\xe2\x9d\x93'.decode('utf8'),
        False,
        (
            'question_mark',
        ),
        None,
        None,
    ),
    Unicode(
        'rabbit2',
        b'\xf0\x9f\x90\x87'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc07',
        ),
    ),
    Unicode(
        'rabbit',
        b'\xf0\x9f\x90\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc30',
        ),
    ),
    Unicode(
        'race_car',
        b'\xf0\x9f\x8f\x8e'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'racehorse',
        b'\xf0\x9f\x90\x8e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc0e',
        ),
    ),
    Unicode(
        'radio',
        b'\xf0\x9f\x93\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcfb',
        ),
    ),
    Unicode(
        'radio_button',
        b'\xf0\x9f\x94\x98'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd18',
        ),
    ),
    Unicode(
        'radioactive',
        b'\xe2\x98\xa2'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'railroad_track',
        b'\xf0\x9f\x9b\xa4'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'railway_car',
        b'\xf0\x9f\x9a\x83'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude83',
        ),
    ),
    Unicode(
        'rainbow',
        b'\xf0\x9f\x8c\x88'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf08',
        ),
    ),
    Unicode(
        'raised_hand',
        b'\xe2\x9c\x8b'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'raised_hand_tone1',
        b'\xe2\x9c\x8b\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '✋\ud83c\udffb',
        ),
    ),
    Unicode(
        'raised_hand_tone2',
        b'\xe2\x9c\x8b\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '✋\ud83c\udffc',
        ),
    ),
    Unicode(
        'raised_hand_tone3',
        b'\xe2\x9c\x8b\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '✋\ud83c\udffd',
        ),
    ),
    Unicode(
        'raised_hand_tone4',
        b'\xe2\x9c\x8b\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '✋\ud83c\udffe',
        ),
    ),
    Unicode(
        'raised_hand_tone5',
        b'\xe2\x9c\x8b\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '✋\ud83c\udfff',
        ),
    ),
    Unicode(
        'raised_hand_with_part_between_middle_and_ring_fingers',
        b'\xf0\x9f\x96\x96'.decode('utf8'),
        False,
        (
            'vulcan',
        ),
        None,
        (
            '\ud83d\udd96',
        ),
    ),
    Unicode(
        'raised_hand_with_part_between_middle_and_ring_fingers_tone1',
        b'\xf0\x9f\x96\x96\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'vulcan_tone1',
        ),
        None,
        (
            '\ud83d\udd96\ud83c\udffb',
        ),
    ),
    Unicode(
        'raised_hand_with_part_between_middle_and_ring_fingers_tone2',
        b'\xf0\x9f\x96\x96\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'vulcan_tone2',
        ),
        None,
        (
            '\ud83d\udd96\ud83c\udffc',
        ),
    ),
    Unicode(
        'raised_hand_with_part_between_middle_and_ring_fingers_tone3',
        b'\xf0\x9f\x96\x96\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'vulcan_tone3',
        ),
        None,
        (
            '\ud83d\udd96\ud83c\udffd',
        ),
    ),
    Unicode(
        'raised_hand_with_part_between_middle_and_ring_fingers_tone4',
        b'\xf0\x9f\x96\x96\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'vulcan_tone4',
        ),
        None,
        (
            '\ud83d\udd96\ud83c\udffe',
        ),
    ),
    Unicode(
        'raised_hand_with_part_between_middle_and_ring_fingers_tone5',
        b'\xf0\x9f\x96\x96\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'vulcan_tone5',
        ),
        None,
        (
            '\ud83d\udd96\ud83c\udfff',
        ),
    ),
    Unicode(
        'raised_hands',
        b'\xf0\x9f\x99\x8c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4c',
        ),
    ),
    Unicode(
        'raised_hands_tone1',
        b'\xf0\x9f\x99\x8c\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4c\ud83c\udffb',
        ),
    ),
    Unicode(
        'raised_hands_tone2',
        b'\xf0\x9f\x99\x8c\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4c\ud83c\udffc',
        ),
    ),
    Unicode(
        'raised_hands_tone3',
        b'\xf0\x9f\x99\x8c\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4c\ud83c\udffd',
        ),
    ),
    Unicode(
        'raised_hands_tone4',
        b'\xf0\x9f\x99\x8c\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4c\ud83c\udffe',
        ),
    ),
    Unicode(
        'raised_hands_tone5',
        b'\xf0\x9f\x99\x8c\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4c\ud83c\udfff',
        ),
    ),
    Unicode(
        'raising_hand',
        b'\xf0\x9f\x99\x8b'.decode('utf8'),
        False,
        (
            'person_raising_hand',
        ),
        None,
        (
            '\ud83d\ude4b',
        ),
    ),
    Unicode(
        'raising_hand_tone1',
        b'\xf0\x9f\x99\x8b\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_raising_hand_tone1',
        ),
        None,
        (
            '\ud83d\ude4b\ud83c\udffb',
        ),
    ),
    Unicode(
        'raising_hand_tone2',
        b'\xf0\x9f\x99\x8b\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_raising_hand_tone2',
        ),
        None,
        (
            '\ud83d\ude4b\ud83c\udffc',
        ),
    ),
    Unicode(
        'raising_hand_tone3',
        b'\xf0\x9f\x99\x8b\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_raising_hand_tone3',
        ),
        None,
        (
            '\ud83d\ude4b\ud83c\udffd',
        ),
    ),
    Unicode(
        'raising_hand_tone4',
        b'\xf0\x9f\x99\x8b\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_raising_hand_tone4',
        ),
        None,
        (
            '\ud83d\ude4b\ud83c\udffe',
        ),
    ),
    Unicode(
        'raising_hand_tone5',
        b'\xf0\x9f\x99\x8b\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_raising_hand_tone5',
        ),
        None,
        (
            '\ud83d\ude4b\ud83c\udfff',
        ),
    ),
    Unicode(
        'ram',
        b'\xf0\x9f\x90\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc0f',
        ),
    ),
    Unicode(
        'ramen',
        b'\xf0\x9f\x8d\x9c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf5c',
        ),
    ),
    Unicode(
        'rat',
        b'\xf0\x9f\x90\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc00',
        ),
    ),
    Unicode(
        'record_button',
        b'\xe2\x8f\xba'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'recycle',
        b'\xe2\x99\xbb'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'red_car',
        b'\xf0\x9f\x9a\x97'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude97',
        ),
    ),
    Unicode(
        'red_circle',
        b'\xf0\x9f\x94\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd34',
        ),
    ),
    Unicode(
        'regional_indicator_a',
        b'\xf0\x9f\x87\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde6',
        ),
    ),
    Unicode(
        'regional_indicator_b',
        b'\xf0\x9f\x87\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde7',
        ),
    ),
    Unicode(
        'regional_indicator_c',
        b'\xf0\x9f\x87\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde8',
        ),
    ),
    Unicode(
        'regional_indicator_d',
        b'\xf0\x9f\x87\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udde9',
        ),
    ),
    Unicode(
        'regional_indicator_e',
        b'\xf0\x9f\x87\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddea',
        ),
    ),
    Unicode(
        'regional_indicator_f',
        b'\xf0\x9f\x87\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddeb',
        ),
    ),
    Unicode(
        'regional_indicator_g',
        b'\xf0\x9f\x87\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddec',
        ),
    ),
    Unicode(
        'regional_indicator_h',
        b'\xf0\x9f\x87\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udded',
        ),
    ),
    Unicode(
        'regional_indicator_i',
        b'\xf0\x9f\x87\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddee',
        ),
    ),
    Unicode(
        'regional_indicator_j',
        b'\xf0\x9f\x87\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddef',
        ),
    ),
    Unicode(
        'regional_indicator_k',
        b'\xf0\x9f\x87\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf0',
        ),
    ),
    Unicode(
        'regional_indicator_l',
        b'\xf0\x9f\x87\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf1',
        ),
    ),
    Unicode(
        'regional_indicator_m',
        b'\xf0\x9f\x87\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf2',
        ),
    ),
    Unicode(
        'regional_indicator_n',
        b'\xf0\x9f\x87\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf3',
        ),
    ),
    Unicode(
        'regional_indicator_o',
        b'\xf0\x9f\x87\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf4',
        ),
    ),
    Unicode(
        'regional_indicator_p',
        b'\xf0\x9f\x87\xb5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf5',
        ),
    ),
    Unicode(
        'regional_indicator_q',
        b'\xf0\x9f\x87\xb6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf6',
        ),
    ),
    Unicode(
        'regional_indicator_r',
        b'\xf0\x9f\x87\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf7',
        ),
    ),
    Unicode(
        'regional_indicator_s',
        b'\xf0\x9f\x87\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf8',
        ),
    ),
    Unicode(
        'regional_indicator_t',
        b'\xf0\x9f\x87\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddf9',
        ),
    ),
    Unicode(
        'regional_indicator_u',
        b'\xf0\x9f\x87\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfa',
        ),
    ),
    Unicode(
        'regional_indicator_v',
        b'\xf0\x9f\x87\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfb',
        ),
    ),
    Unicode(
        'regional_indicator_w',
        b'\xf0\x9f\x87\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfc',
        ),
    ),
    Unicode(
        'regional_indicator_x',
        b'\xf0\x9f\x87\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfd',
        ),
    ),
    Unicode(
        'regional_indicator_y',
        b'\xf0\x9f\x87\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfe',
        ),
    ),
    Unicode(
        'regional_indicator_z',
        b'\xf0\x9f\x87\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddff',
        ),
    ),
    Unicode(
        'registered',
        b'\xc2\xae'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'relaxed',
        b'\xe2\x98\xba'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'relieved',
        b'\xf0\x9f\x98\x8c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude0c',
        ),
    ),
    Unicode(
        'reminder_ribbon',
        b'\xf0\x9f\x8e\x97'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'repeat',
        b'\xf0\x9f\x94\x81'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd01',
        ),
    ),
    Unicode(
        'repeat_one',
        b'\xf0\x9f\x94\x82'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd02',
        ),
    ),
    Unicode(
        'restroom',
        b'\xf0\x9f\x9a\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udebb',
        ),
    ),
    Unicode(
        'revolving_hearts',
        b'\xf0\x9f\x92\x9e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc9e',
        ),
    ),
    Unicode(
        'rewind',
        b'\xe2\x8f\xaa'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'rhino',
        b'\xf0\x9f\xa6\x8f'.decode('utf8'),
        False,
        (
            'rhinoceros',
        ),
        None,
        (
            '\ud83e\udd8f',
        ),
    ),
    Unicode(
        'ribbon',
        b'\xf0\x9f\x8e\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf80',
        ),
    ),
    Unicode(
        'rice',
        b'\xf0\x9f\x8d\x9a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf5a',
        ),
    ),
    Unicode(
        'rice_ball',
        b'\xf0\x9f\x8d\x99'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf59',
        ),
    ),
    Unicode(
        'rice_cracker',
        b'\xf0\x9f\x8d\x98'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf58',
        ),
    ),
    Unicode(
        'rice_scene',
        b'\xf0\x9f\x8e\x91'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf91',
        ),
    ),
    Unicode(
        'right_facing_fist',
        b'\xf0\x9f\xa4\x9c'.decode('utf8'),
        False,
        (
            'right_fist',
        ),
        None,
        (
            '\ud83e\udd1c',
        ),
    ),
    Unicode(
        'right_facing_fist_tone1',
        b'\xf0\x9f\xa4\x9c\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'right_fist_tone1',
        ),
        None,
        (
            '\ud83e\udd1c\ud83c\udffb',
        ),
    ),
    Unicode(
        'right_facing_fist_tone2',
        b'\xf0\x9f\xa4\x9c\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'right_fist_tone2',
        ),
        None,
        (
            '\ud83e\udd1c\ud83c\udffc',
        ),
    ),
    Unicode(
        'right_facing_fist_tone3',
        b'\xf0\x9f\xa4\x9c\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'right_fist_tone3',
        ),
        None,
        (
            '\ud83e\udd1c\ud83c\udffd',
        ),
    ),
    Unicode(
        'right_facing_fist_tone4',
        b'\xf0\x9f\xa4\x9c\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'right_fist_tone4',
        ),
        None,
        (
            '\ud83e\udd1c\ud83c\udffe',
        ),
    ),
    Unicode(
        'right_facing_fist_tone5',
        b'\xf0\x9f\xa4\x9c\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'right_fist_tone5',
        ),
        None,
        (
            '\ud83e\udd1c\ud83c\udfff',
        ),
    ),
    Unicode(
        'ring',
        b'\xf0\x9f\x92\x8d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc8d',
        ),
    ),
    Unicode(
        'robot',
        b'\xf0\x9f\xa4\x96'.decode('utf8'),
        False,
        (
            'robot_face',
        ),
        None,
        (
            '\ud83e\udd16',
        ),
    ),
    Unicode(
        'rocket',
        b'\xf0\x9f\x9a\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude80',
        ),
    ),
    Unicode(
        'rofl',
        b'\xf0\x9f\xa4\xa3'.decode('utf8'),
        False,
        (
            'rolling_on_the_floor_laughing',
        ),
        None,
        (
            '\ud83e\udd23',
        ),
    ),
    Unicode(
        'roller_coaster',
        b'\xf0\x9f\x8e\xa2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfa2',
        ),
    ),
    Unicode(
        'rooster',
        b'\xf0\x9f\x90\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc13',
        ),
    ),
    Unicode(
        'rose',
        b'\xf0\x9f\x8c\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf39',
        ),
    ),
    Unicode(
        'rosette',
        b'\xf0\x9f\x8f\xb5'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'rotating_light',
        b'\xf0\x9f\x9a\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udea8',
        ),
    ),
    Unicode(
        'round_pushpin',
        b'\xf0\x9f\x93\x8d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udccd',
        ),
    ),
    Unicode(
        'rowboat',
        b'\xf0\x9f\x9a\xa3'.decode('utf8'),
        False,
        (
            'person_rowing_boat',
        ),
        None,
        (
            '\ud83d\udea3',
        ),
    ),
    Unicode(
        'rowboat_tone1',
        b'\xf0\x9f\x9a\xa3\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_rowing_boat_tone1',
        ),
        None,
        (
            '\ud83d\udea3\ud83c\udffb',
        ),
    ),
    Unicode(
        'rowboat_tone2',
        b'\xf0\x9f\x9a\xa3\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_rowing_boat_tone2',
        ),
        None,
        (
            '\ud83d\udea3\ud83c\udffc',
        ),
    ),
    Unicode(
        'rowboat_tone3',
        b'\xf0\x9f\x9a\xa3\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_rowing_boat_tone3',
        ),
        None,
        (
            '\ud83d\udea3\ud83c\udffd',
        ),
    ),
    Unicode(
        'rowboat_tone4',
        b'\xf0\x9f\x9a\xa3\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_rowing_boat_tone4',
        ),
        None,
        (
            '\ud83d\udea3\ud83c\udffe',
        ),
    ),
    Unicode(
        'rowboat_tone5',
        b'\xf0\x9f\x9a\xa3\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_rowing_boat_tone5',
        ),
        None,
        (
            '\ud83d\udea3\ud83c\udfff',
        ),
    ),
    Unicode(
        'rugby_football',
        b'\xf0\x9f\x8f\x89'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc9',
        ),
    ),
    Unicode(
        'runner',
        b'\xf0\x9f\x8f\x83'.decode('utf8'),
        False,
        (
            'person_running',
        ),
        None,
        (
            '\ud83c\udfc3',
        ),
    ),
    Unicode(
        'runner_tone1',
        b'\xf0\x9f\x8f\x83\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_running_tone1',
        ),
        None,
        (
            '\ud83c\udfc3\ud83c\udffb',
        ),
    ),
    Unicode(
        'runner_tone2',
        b'\xf0\x9f\x8f\x83\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_running_tone2',
        ),
        None,
        (
            '\ud83c\udfc3\ud83c\udffc',
        ),
    ),
    Unicode(
        'runner_tone3',
        b'\xf0\x9f\x8f\x83\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_running_tone3',
        ),
        None,
        (
            '\ud83c\udfc3\ud83c\udffd',
        ),
    ),
    Unicode(
        'runner_tone4',
        b'\xf0\x9f\x8f\x83\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_running_tone4',
        ),
        None,
        (
            '\ud83c\udfc3\ud83c\udffe',
        ),
    ),
    Unicode(
        'runner_tone5',
        b'\xf0\x9f\x8f\x83\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_running_tone5',
        ),
        None,
        (
            '\ud83c\udfc3\ud83c\udfff',
        ),
    ),
    Unicode(
        'running_shirt_with_sash',
        b'\xf0\x9f\x8e\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfbd',
        ),
    ),
    Unicode(
        'sa',
        b'\xf0\x9f\x88\x82'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'sagittarius',
        b'\xe2\x99\x90'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'sailboat',
        b'\xe2\x9b\xb5'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'sake',
        b'\xf0\x9f\x8d\xb6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf76',
        ),
    ),
    Unicode(
        'sandal',
        b'\xf0\x9f\x91\xa1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc61',
        ),
    ),
    Unicode(
        'santa',
        b'\xf0\x9f\x8e\x85'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf85',
        ),
    ),
    Unicode(
        'santa_tone1',
        b'\xf0\x9f\x8e\x85\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf85\ud83c\udffb',
        ),
    ),
    Unicode(
        'santa_tone2',
        b'\xf0\x9f\x8e\x85\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf85\ud83c\udffc',
        ),
    ),
    Unicode(
        'santa_tone3',
        b'\xf0\x9f\x8e\x85\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf85\ud83c\udffd',
        ),
    ),
    Unicode(
        'santa_tone4',
        b'\xf0\x9f\x8e\x85\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf85\ud83c\udffe',
        ),
    ),
    Unicode(
        'santa_tone5',
        b'\xf0\x9f\x8e\x85\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf85\ud83c\udfff',
        ),
    ),
    Unicode(
        'satellite',
        b'\xf0\x9f\x93\xa1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udce1',
        ),
    ),
    Unicode(
        'satellite_orbital',
        b'\xf0\x9f\x9b\xb0'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'saxophone',
        b'\xf0\x9f\x8e\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfb7',
        ),
    ),
    Unicode(
        'scales',
        b'\xe2\x9a\x96'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'school',
        b'\xf0\x9f\x8f\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfeb',
        ),
    ),
    Unicode(
        'school_satchel',
        b'\xf0\x9f\x8e\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf92',
        ),
    ),
    Unicode(
        'scissors',
        b'\xe2\x9c\x82'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'scooter',
        b'\xf0\x9f\x9b\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udef4',
        ),
    ),
    Unicode(
        'scorpion',
        b'\xf0\x9f\xa6\x82'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd82',
        ),
    ),
    Unicode(
        'scorpius',
        b'\xe2\x99\x8f'.decode('utf8'),
        False,
        (
            'scorpio',
        ),
        None,
        None,
    ),
    Unicode(
        'scream',
        b'\xf0\x9f\x98\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude31',
        ),
    ),
    Unicode(
        'scream_cat',
        b'\xf0\x9f\x99\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude40',
        ),
    ),
    Unicode(
        'scroll',
        b'\xf0\x9f\x93\x9c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcdc',
        ),
    ),
    Unicode(
        'seat',
        b'\xf0\x9f\x92\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcba',
        ),
    ),
    Unicode(
        'second_place',
        b'\xf0\x9f\xa5\x88'.decode('utf8'),
        False,
        (
            'second_place_medal',
        ),
        None,
        (
            '\ud83e\udd48',
        ),
    ),
    Unicode(
        'secret',
        b'\xe3\x8a\x99'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'see_no_evil',
        b'\xf0\x9f\x99\x88'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude48',
        ),
    ),
    Unicode(
        'seedling',
        b'\xf0\x9f\x8c\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf31',
        ),
    ),
    Unicode(
        'selfie',
        b'\xf0\x9f\xa4\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd33',
        ),
    ),
    Unicode(
        'selfie_tone1',
        b'\xf0\x9f\xa4\xb3\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd33\ud83c\udffb',
        ),
    ),
    Unicode(
        'selfie_tone2',
        b'\xf0\x9f\xa4\xb3\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd33\ud83c\udffc',
        ),
    ),
    Unicode(
        'selfie_tone3',
        b'\xf0\x9f\xa4\xb3\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd33\ud83c\udffd',
        ),
    ),
    Unicode(
        'selfie_tone4',
        b'\xf0\x9f\xa4\xb3\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd33\ud83c\udffe',
        ),
    ),
    Unicode(
        'selfie_tone5',
        b'\xf0\x9f\xa4\xb3\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd33\ud83c\udfff',
        ),
    ),
    Unicode(
        'seven',
        b'7\xe2\x83\xa3'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'shamrock',
        b'\xe2\x98\x98'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'shark',
        b'\xf0\x9f\xa6\x88'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd88',
        ),
    ),
    Unicode(
        'shaved_ice',
        b'\xf0\x9f\x8d\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf67',
        ),
    ),
    Unicode(
        'sheep',
        b'\xf0\x9f\x90\x91'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc11',
        ),
    ),
    Unicode(
        'shell',
        b'\xf0\x9f\x90\x9a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc1a',
        ),
    ),
    Unicode(
        'shield',
        b'\xf0\x9f\x9b\xa1'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'shinto_shrine',
        b'\xe2\x9b\xa9'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'ship',
        b'\xf0\x9f\x9a\xa2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udea2',
        ),
    ),
    Unicode(
        'shirt',
        b'\xf0\x9f\x91\x95'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc55',
        ),
    ),
    Unicode(
        'shopping_bags',
        b'\xf0\x9f\x9b\x8d'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'shopping_cart',
        b'\xf0\x9f\x9b\x92'.decode('utf8'),
        False,
        (
            'shopping_trolley',
        ),
        None,
        (
            '\ud83d\uded2',
        ),
    ),
    Unicode(
        'shower',
        b'\xf0\x9f\x9a\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udebf',
        ),
    ),
    Unicode(
        'shrimp',
        b'\xf0\x9f\xa6\x90'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd90',
        ),
    ),
    Unicode(
        'shrug',
        b'\xf0\x9f\xa4\xb7'.decode('utf8'),
        False,
        (
            'person_shrugging',
        ),
        None,
        (
            '\ud83e\udd37',
        ),
    ),
    Unicode(
        'shrug_tone1',
        b'\xf0\x9f\xa4\xb7\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_shrugging_tone1',
        ),
        None,
        (
            '\ud83e\udd37\ud83c\udffb',
        ),
    ),
    Unicode(
        'shrug_tone2',
        b'\xf0\x9f\xa4\xb7\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_shrugging_tone2',
        ),
        None,
        (
            '\ud83e\udd37\ud83c\udffc',
        ),
    ),
    Unicode(
        'shrug_tone3',
        b'\xf0\x9f\xa4\xb7\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_shrugging_tone3',
        ),
        None,
        (
            '\ud83e\udd37\ud83c\udffd',
        ),
    ),
    Unicode(
        'shrug_tone4',
        b'\xf0\x9f\xa4\xb7\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_shrugging_tone4',
        ),
        None,
        (
            '\ud83e\udd37\ud83c\udffe',
        ),
    ),
    Unicode(
        'shrug_tone5',
        b'\xf0\x9f\xa4\xb7\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_shrugging_tone5',
        ),
        None,
        (
            '\ud83e\udd37\ud83c\udfff',
        ),
    ),
    Unicode(
        'signal_strength',
        b'\xf0\x9f\x93\xb6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcf6',
        ),
    ),
    Unicode(
        'six',
        b'6\xe2\x83\xa3'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'six_pointed_star',
        b'\xf0\x9f\x94\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd2f',
        ),
    ),
    Unicode(
        'skeleton',
        b'\xf0\x9f\x92\x80'.decode('utf8'),
        False,
        (
            'skull',
        ),
        None,
        (
            '\ud83d\udc80',
        ),
    ),
    Unicode(
        'ski',
        b'\xf0\x9f\x8e\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfbf',
        ),
    ),
    Unicode(
        'skier',
        b'\xe2\x9b\xb7'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'skier_tone1',
        b'\xe2\x9b\xb7\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'skier_tone2',
        b'\xe2\x9b\xb7\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'skier_tone3',
        b'\xe2\x9b\xb7\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'skier_tone4',
        b'\xe2\x9b\xb7\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'skier_tone5',
        b'\xe2\x9b\xb7\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'skull_and_crossbones',
        b'\xe2\x98\xa0'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'sleeping',
        b'\xf0\x9f\x98\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude34',
        ),
    ),
    Unicode(
        'sleeping_accommodation',
        b'\xf0\x9f\x9b\x8c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udecc',
        ),
    ),
    Unicode(
        'sleeping_accommodation_tone1',
        b'\xf0\x9f\x9b\x8c\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_in_bed_tone1',
        ),
        None,
        (
            '\ud83d\udecc\ud83c\udffb',
        ),
    ),
    Unicode(
        'sleeping_accommodation_tone2',
        b'\xf0\x9f\x9b\x8c\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_in_bed_tone2',
        ),
        None,
        (
            '\ud83d\udecc\ud83c\udffc',
        ),
    ),
    Unicode(
        'sleeping_accommodation_tone3',
        b'\xf0\x9f\x9b\x8c\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_in_bed_tone3',
        ),
        None,
        (
            '\ud83d\udecc\ud83c\udffd',
        ),
    ),
    Unicode(
        'sleeping_accommodation_tone4',
        b'\xf0\x9f\x9b\x8c\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_in_bed_tone4',
        ),
        None,
        (
            '\ud83d\udecc\ud83c\udffe',
        ),
    ),
    Unicode(
        'sleeping_accommodation_tone5',
        b'\xf0\x9f\x9b\x8c\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_in_bed_tone5',
        ),
        None,
        (
            '\ud83d\udecc\ud83c\udfff',
        ),
    ),
    Unicode(
        'sleepy',
        b'\xf0\x9f\x98\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude2a',
        ),
    ),
    Unicode(
        'sleuth_or_spy',
        b'\xf0\x9f\x95\xb5'.decode('utf8'),
        False,
        (
            'spy',
        ),
        None,
        None,
    ),
    Unicode(
        'sleuth_or_spy_tone1',
        b'\xf0\x9f\x95\xb5\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'spy_tone1',
            'detective_tone1'
        ),
        None,
        (
            '\ud83d\udd75\ud83c\udffb',
        ),
    ),
    Unicode(
        'sleuth_or_spy_tone2',
        b'\xf0\x9f\x95\xb5\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'spy_tone2',
            'detective_tone2'
        ),
        None,
        (
            '\ud83d\udd75\ud83c\udffc',
        ),
    ),
    Unicode(
        'sleuth_or_spy_tone3',
        b'\xf0\x9f\x95\xb5\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'spy_tone3',
            'detective_tone3'
        ),
        None,
        (
            '\ud83d\udd75\ud83c\udffd',
        ),
    ),
    Unicode(
        'sleuth_or_spy_tone4',
        b'\xf0\x9f\x95\xb5\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'spy_tone4',
            'detective_tone4'
        ),
        None,
        (
            '\ud83d\udd75\ud83c\udffe',
        ),
    ),
    Unicode(
        'sleuth_or_spy_tone5',
        b'\xf0\x9f\x95\xb5\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'spy_tone5',
            'detective_tone5'
        ),
        None,
        (
            '\ud83d\udd75\ud83c\udfff',
        ),
    ),
    Unicode(
        'slight_frown',
        b'\xf0\x9f\x99\x81'.decode('utf8'),
        False,
        (
            'slightly_frowning_face',
        ),
        None,
        (
            '\ud83d\ude41',
        ),
    ),
    Unicode(
        'slight_smile',
        b'\xf0\x9f\x99\x82'.decode('utf8'),
        False,
        (
            'slightly_smiling_face',
        ),
        (':)', ':-)', '=)', '=-)'),
        (
            '\ud83d\ude42',
        ),
    ),
    Unicode(
        'slot_machine',
        b'\xf0\x9f\x8e\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfb0',
        ),
    ),
    Unicode(
        'small_blue_diamond',
        b'\xf0\x9f\x94\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd39',
        ),
    ),
    Unicode(
        'small_orange_diamond',
        b'\xf0\x9f\x94\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd38',
        ),
    ),
    Unicode(
        'small_red_triangle',
        b'\xf0\x9f\x94\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd3a',
        ),
    ),
    Unicode(
        'small_red_triangle_down',
        b'\xf0\x9f\x94\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd3b',
        ),
    ),
    Unicode(
        'smile_cat',
        b'\xf0\x9f\x98\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude38',
        ),
    ),
    Unicode(
        'smiley_cat',
        b'\xf0\x9f\x98\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude3a',
        ),
    ),
    Unicode(
        'smiling_imp',
        b'\xf0\x9f\x98\x88'.decode('utf8'),
        False,
        None,
        (']:)', ']:-)', ']=)', ']=-)'),
        (
            '\ud83d\ude08',
        ),
    ),
    Unicode(
        'smirk',
        b'\xf0\x9f\x98\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude0f',
        ),
    ),
    Unicode(
        'smirk_cat',
        b'\xf0\x9f\x98\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude3c',
        ),
    ),
    Unicode(
        'smoking',
        b'\xf0\x9f\x9a\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeac',
        ),
    ),
    Unicode(
        'snail',
        b'\xf0\x9f\x90\x8c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc0c',
        ),
    ),
    Unicode(
        'snake',
        b'\xf0\x9f\x90\x8d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc0d',
        ),
    ),
    Unicode(
        'sneeze',
        b'\xf0\x9f\xa4\xa7'.decode('utf8'),
        False,
        (
            'sneezing_face',
        ),
        None,
        (
            '\ud83e\udd27',
        ),
    ),
    Unicode(
        'snowboarder',
        b'\xf0\x9f\x8f\x82'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc2',
        ),
    ),
    Unicode(
        'snowboarder_tone1',
        b'\xf0\x9f\x8f\x82\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc2\ud83c\udffb',
        ),
    ),
    Unicode(
        'snowboarder_tone2',
        b'\xf0\x9f\x8f\x82\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc2\ud83c\udffc',
        ),
    ),
    Unicode(
        'snowboarder_tone3',
        b'\xf0\x9f\x8f\x82\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc2\ud83c\udffd',
        ),
    ),
    Unicode(
        'snowboarder_tone4',
        b'\xf0\x9f\x8f\x82\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc2\ud83c\udffe',
        ),
    ),
    Unicode(
        'snowboarder_tone5',
        b'\xf0\x9f\x8f\x82\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc2\ud83c\udfff',
        ),
    ),
    Unicode(
        'snowflake',
        b'\xe2\x9d\x84'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'snowman2',
        b'\xe2\x98\x83'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'snowman',
        b'\xe2\x9b\x84'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'soccer',
        b'\xe2\x9a\xbd'.decode('utf8'),
        False,
        (
            'soccer_ball',
        ),
        None,
        None,
    ),
    Unicode(
        'soon',
        b'\xf0\x9f\x94\x9c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd1c',
        ),
    ),
    Unicode(
        'sos',
        b'\xf0\x9f\x86\x98'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udd98',
        ),
    ),
    Unicode(
        'sound',
        b'\xf0\x9f\x94\x89'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd09',
        ),
    ),
    Unicode(
        'space_invader',
        b'\xf0\x9f\x91\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc7e',
        ),
    ),
    Unicode(
        'spades',
        b'\xe2\x99\xa0'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'spaghetti',
        b'\xf0\x9f\x8d\x9d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf5d',
        ),
    ),
    Unicode(
        'sparkle',
        b'\xe2\x9d\x87'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'sparkler',
        b'\xf0\x9f\x8e\x87'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf87',
        ),
    ),
    Unicode(
        'sparkles',
        b'\xe2\x9c\xa8'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'sparkling_heart',
        b'\xf0\x9f\x92\x96'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc96',
        ),
    ),
    Unicode(
        'speak_no_evil',
        b'\xf0\x9f\x99\x8a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4a',
        ),
    ),
    Unicode(
        'speaker',
        b'\xf0\x9f\x94\x88'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd08',
        ),
    ),
    Unicode(
        'speaking_head',
        b'\xf0\x9f\x97\xa3'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'speech_balloon',
        b'\xf0\x9f\x92\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcac',
        ),
    ),
    Unicode(
        'speedboat',
        b'\xf0\x9f\x9a\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udea4',
        ),
    ),
    Unicode(
        'spider',
        b'\xf0\x9f\x95\xb7'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'spider_web',
        b'\xf0\x9f\x95\xb8'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'spoon',
        b'\xf0\x9f\xa5\x84'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd44',
        ),
    ),
    Unicode(
        'squid',
        b'\xf0\x9f\xa6\x91'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd91',
        ),
    ),
    Unicode(
        'stadium',
        b'\xf0\x9f\x8f\x9f'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'star2',
        b'\xf0\x9f\x8c\x9f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf1f',
        ),
    ),
    Unicode(
        'star',
        b'\xe2\xad\x90'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'star_and_crescent',
        b'\xe2\x98\xaa'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'star_of_david',
        b'\xe2\x9c\xa1'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'stars',
        b'\xf0\x9f\x8c\xa0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf20',
        ),
    ),
    Unicode(
        'station',
        b'\xf0\x9f\x9a\x89'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude89',
        ),
    ),
    Unicode(
        'statue_of_liberty',
        b'\xf0\x9f\x97\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\uddfd',
        ),
    ),
    Unicode(
        'steam_locomotive',
        b'\xf0\x9f\x9a\x82'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude82',
        ),
    ),
    Unicode(
        'stew',
        b'\xf0\x9f\x8d\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf72',
        ),
    ),
    Unicode(
        'stop_button',
        b'\xe2\x8f\xb9'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'stopwatch',
        b'\xe2\x8f\xb1'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'straight_ruler',
        b'\xf0\x9f\x93\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udccf',
        ),
    ),
    Unicode(
        'strawberry',
        b'\xf0\x9f\x8d\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf53',
        ),
    ),
    Unicode(
        'stuck_out_tongue_closed_eyes',
        b'\xf0\x9f\x98\x9d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude1d',
        ),
    ),
    Unicode(
        'stuck_out_tongue_winking_eye',
        b'\xf0\x9f\x98\x9c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude1c',
        ),
    ),
    Unicode(
        'stuffed_flatbread',
        b'\xf0\x9f\xa5\x99'.decode('utf8'),
        False,
        (
            'stuffed_pita',
        ),
        None,
        (
            '\ud83e\udd59',
        ),
    ),
    Unicode(
        'sun_with_face',
        b'\xf0\x9f\x8c\x9e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf1e',
        ),
    ),
    Unicode(
        'sunflower',
        b'\xf0\x9f\x8c\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf3b',
        ),
    ),
    Unicode(
        'sunny',
        b'\xe2\x98\x80'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'sunrise',
        b'\xf0\x9f\x8c\x85'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf05',
        ),
    ),
    Unicode(
        'sunrise_over_mountains',
        b'\xf0\x9f\x8c\x84'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf04',
        ),
    ),
    Unicode(
        'surfer',
        b'\xf0\x9f\x8f\x84'.decode('utf8'),
        False,
        (
            'person_surfing',
        ),
        None,
        (
            '\ud83c\udfc4',
        ),
    ),
    Unicode(
        'surfer_tone1',
        b'\xf0\x9f\x8f\x84\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_surfing_tone1',
        ),
        None,
        (
            '\ud83c\udfc4\ud83c\udffb',
        ),
    ),
    Unicode(
        'surfer_tone2',
        b'\xf0\x9f\x8f\x84\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_surfing_tone2',
        ),
        None,
        (
            '\ud83c\udfc4\ud83c\udffc',
        ),
    ),
    Unicode(
        'surfer_tone3',
        b'\xf0\x9f\x8f\x84\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_surfing_tone3',
        ),
        None,
        (
            '\ud83c\udfc4\ud83c\udffd',
        ),
    ),
    Unicode(
        'surfer_tone4',
        b'\xf0\x9f\x8f\x84\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_surfing_tone4',
        ),
        None,
        (
            '\ud83c\udfc4\ud83c\udffe',
        ),
    ),
    Unicode(
        'surfer_tone5',
        b'\xf0\x9f\x8f\x84\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_surfing_tone5',
        ),
        None,
        (
            '\ud83c\udfc4\ud83c\udfff',
        ),
    ),
    Unicode(
        'sushi',
        b'\xf0\x9f\x8d\xa3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf63',
        ),
    ),
    Unicode(
        'suspension_railway',
        b'\xf0\x9f\x9a\x9f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude9f',
        ),
    ),
    Unicode(
        'sweat_drops',
        b'\xf0\x9f\x92\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udca6',
        ),
    ),
    Unicode(
        'sweet_potato',
        b'\xf0\x9f\x8d\xa0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf60',
        ),
    ),
    Unicode(
        'swimmer',
        b'\xf0\x9f\x8f\x8a'.decode('utf8'),
        False,
        (
            'person_swimming',
        ),
        None,
        (
            '\ud83c\udfca',
        ),
    ),
    Unicode(
        'swimmer_tone1',
        b'\xf0\x9f\x8f\x8a\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_swimming_tone1',
        ),
        None,
        (
            '\ud83c\udfca\ud83c\udffb',
        ),
    ),
    Unicode(
        'swimmer_tone2',
        b'\xf0\x9f\x8f\x8a\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_swimming_tone2',
        ),
        None,
        (
            '\ud83c\udfca\ud83c\udffc',
        ),
    ),
    Unicode(
        'swimmer_tone3',
        b'\xf0\x9f\x8f\x8a\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_swimming_tone3',
        ),
        None,
        (
            '\ud83c\udfca\ud83c\udffd',
        ),
    ),
    Unicode(
        'swimmer_tone4',
        b'\xf0\x9f\x8f\x8a\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_swimming_tone4',
        ),
        None,
        (
            '\ud83c\udfca\ud83c\udffe',
        ),
    ),
    Unicode(
        'swimmer_tone5',
        b'\xf0\x9f\x8f\x8a\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_swimming_tone5',
        ),
        None,
        (
            '\ud83c\udfca\ud83c\udfff',
        ),
    ),
    Unicode(
        'symbols',
        b'\xf0\x9f\x94\xa3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd23',
        ),
    ),
    Unicode(
        'synagogue',
        b'\xf0\x9f\x95\x8d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd4d',
        ),
    ),
    Unicode(
        'syringe',
        b'\xf0\x9f\x92\x89'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc89',
        ),
    ),
    Unicode(
        'taco',
        b'\xf0\x9f\x8c\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf2e',
        ),
    ),
    Unicode(
        'tada',
        b'\xf0\x9f\x8e\x89'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf89',
        ),
    ),
    Unicode(
        'tanabata_tree',
        b'\xf0\x9f\x8e\x8b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf8b',
        ),
    ),
    Unicode(
        'tangerine',
        b'\xf0\x9f\x8d\x8a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf4a',
        ),
    ),
    Unicode(
        'taurus',
        b'\xe2\x99\x89'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'taxi',
        b'\xf0\x9f\x9a\x95'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude95',
        ),
    ),
    Unicode(
        'tea',
        b'\xf0\x9f\x8d\xb5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf75',
        ),
    ),
    Unicode(
        'telephone',
        b'\xe2\x98\x8e'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'telephone_receiver',
        b'\xf0\x9f\x93\x9e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcde',
        ),
    ),
    Unicode(
        'telescope',
        b'\xf0\x9f\x94\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd2d',
        ),
    ),
    Unicode(
        'tennis',
        b'\xf0\x9f\x8e\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfbe',
        ),
    ),
    Unicode(
        'tent',
        b'\xe2\x9b\xba'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'thermometer',
        b'\xf0\x9f\x8c\xa1'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'thinking',
        b'\xf0\x9f\xa4\x94'.decode('utf8'),
        False,
        (
            'thinking_face',
        ),
        None,
        (
            '\ud83e\udd14',
        ),
    ),
    Unicode(
        'third_place',
        b'\xf0\x9f\xa5\x89'.decode('utf8'),
        False,
        (
            'third_place_medal',
        ),
        None,
        (
            '\ud83e\udd49',
        ),
    ),
    Unicode(
        'thought_balloon',
        b'\xf0\x9f\x92\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcad',
        ),
    ),
    Unicode(
        'three',
        b'3\xe2\x83\xa3'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'thunder_cloud_and_rain',
        b'\xe2\x9b\x88'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'ticket',
        b'\xf0\x9f\x8e\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfab',
        ),
    ),
    Unicode(
        'tiger2',
        b'\xf0\x9f\x90\x85'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc05',
        ),
    ),
    Unicode(
        'tiger',
        b'\xf0\x9f\x90\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc2f',
        ),
    ),
    Unicode(
        'timer',
        b'\xe2\x8f\xb2'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'tired_face',
        b'\xf0\x9f\x98\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude2b',
        ),
    ),
    Unicode(
        'tm',
        b'\xe2\x84\xa2'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'toilet',
        b'\xf0\x9f\x9a\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udebd',
        ),
    ),
    Unicode(
        'tokyo_tower',
        b'\xf0\x9f\x97\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\uddfc',
        ),
    ),
    Unicode(
        'tomato',
        b'\xf0\x9f\x8d\x85'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf45',
        ),
    ),
    Unicode(
        'tongue',
        b'\xf0\x9f\x91\x85'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc45',
        ),
    ),
    Unicode(
        'top',
        b'\xf0\x9f\x94\x9d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd1d',
        ),
    ),
    Unicode(
        'tophat',
        b'\xf0\x9f\x8e\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfa9',
        ),
    ),
    Unicode(
        'trackball',
        b'\xf0\x9f\x96\xb2'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'tractor',
        b'\xf0\x9f\x9a\x9c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude9c',
        ),
    ),
    Unicode(
        'traffic_light',
        b'\xf0\x9f\x9a\xa5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udea5',
        ),
    ),
    Unicode(
        'train2',
        b'\xf0\x9f\x9a\x86'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude86',
        ),
    ),
    Unicode(
        'train',
        b'\xf0\x9f\x9a\x8b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude8b',
        ),
    ),
    Unicode(
        'tram',
        b'\xf0\x9f\x9a\x8a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude8a',
        ),
    ),
    Unicode(
        'triangular_flag_on_post',
        b'\xf0\x9f\x9a\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udea9',
        ),
    ),
    Unicode(
        'triangular_ruler',
        b'\xf0\x9f\x93\x90'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcd0',
        ),
    ),
    Unicode(
        'trident',
        b'\xf0\x9f\x94\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd31',
        ),
    ),
    Unicode(
        'triumph',
        b'\xf0\x9f\x98\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude24',
        ),
    ),
    Unicode(
        'trolleybus',
        b'\xf0\x9f\x9a\x8e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude8e',
        ),
    ),
    Unicode(
        'trophy',
        b'\xf0\x9f\x8f\x86'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc6',
        ),
    ),
    Unicode(
        'tropical_drink',
        b'\xf0\x9f\x8d\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf79',
        ),
    ),
    Unicode(
        'tropical_fish',
        b'\xf0\x9f\x90\xa0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc20',
        ),
    ),
    Unicode(
        'truck',
        b'\xf0\x9f\x9a\x9a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude9a',
        ),
    ),
    Unicode(
        'trumpet',
        b'\xf0\x9f\x8e\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfba',
        ),
    ),
    Unicode(
        'tulip',
        b'\xf0\x9f\x8c\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf37',
        ),
    ),
    Unicode(
        'tumbler_glass',
        b'\xf0\x9f\xa5\x83'.decode('utf8'),
        False,
        (
            'whisky',
        ),
        None,
        (
            '\ud83e\udd43',
        ),
    ),
    Unicode(
        'turkey',
        b'\xf0\x9f\xa6\x83'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd83',
        ),
    ),
    Unicode(
        'turtle',
        b'\xf0\x9f\x90\xa2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc22',
        ),
    ),
    Unicode(
        'tv',
        b'\xf0\x9f\x93\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcfa',
        ),
    ),
    Unicode(
        'twisted_rightwards_arrows',
        b'\xf0\x9f\x94\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd00',
        ),
    ),
    Unicode(
        'two',
        b'2\xe2\x83\xa3'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'two_hearts',
        b'\xf0\x9f\x92\x95'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc95',
        ),
    ),
    Unicode(
        'two_men_holding_hands',
        b'\xf0\x9f\x91\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6c',
        ),
    ),
    Unicode(
        'two_women_holding_hands',
        b'\xf0\x9f\x91\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6d',
        ),
    ),
    Unicode(
        'u5272',
        b'\xf0\x9f\x88\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\ude39',
        ),
    ),
    Unicode(
        'u5408',
        b'\xf0\x9f\x88\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\ude34',
        ),
    ),
    Unicode(
        'u55b6',
        b'\xf0\x9f\x88\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\ude3a',
        ),
    ),
    Unicode(
        'u6307',
        b'\xf0\x9f\x88\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\ude2f',
        ),
    ),
    Unicode(
        'u6708',
        b'\xf0\x9f\x88\xb7'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'u6709',
        b'\xf0\x9f\x88\xb6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\ude36',
        ),
    ),
    Unicode(
        'u6e80',
        b'\xf0\x9f\x88\xb5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\ude35',
        ),
    ),
    Unicode(
        'u7121',
        b'\xf0\x9f\x88\x9a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\ude1a',
        ),
    ),
    Unicode(
        'u7533',
        b'\xf0\x9f\x88\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\ude38',
        ),
    ),
    Unicode(
        'u7981',
        b'\xf0\x9f\x88\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\ude32',
        ),
    ),
    Unicode(
        'u7a7a',
        b'\xf0\x9f\x88\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\ude33',
        ),
    ),
    Unicode(
        'umbrella2',
        b'\xe2\x98\x82'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'umbrella',
        b'\xe2\x98\x94'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'underage',
        b'\xf0\x9f\x94\x9e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd1e',
        ),
    ),
    Unicode(
        'unicorn',
        b'\xf0\x9f\xa6\x84'.decode('utf8'),
        False,
        (
            'unicorn_face',
        ),
        None,
        (
            '\ud83e\udd84',
        ),
    ),
    Unicode(
        'unlock',
        b'\xf0\x9f\x94\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd13',
        ),
    ),
    Unicode(
        'up',
        b'\xf0\x9f\x86\x99'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udd99',
        ),
    ),
    Unicode(
        'upside_down',
        b'\xf0\x9f\x99\x83'.decode('utf8'),
        False,
        (
            'upside_down_face',
        ),
        None,
        (
            '\ud83d\ude43',
        ),
    ),
    Unicode(
        'v',
        b'\xe2\x9c\x8c'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'v_tone1',
        b'\xe2\x9c\x8c\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '✌\ud83c\udffb',
        ),
    ),
    Unicode(
        'v_tone2',
        b'\xe2\x9c\x8c\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '✌\ud83c\udffc',
        ),
    ),
    Unicode(
        'v_tone3',
        b'\xe2\x9c\x8c\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '✌\ud83c\udffd',
        ),
    ),
    Unicode(
        'v_tone4',
        b'\xe2\x9c\x8c\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '✌\ud83c\udffe',
        ),
    ),
    Unicode(
        'v_tone5',
        b'\xe2\x9c\x8c\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '✌\ud83c\udfff',
        ),
    ),
    Unicode(
        'vertical_traffic_light',
        b'\xf0\x9f\x9a\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udea6',
        ),
    ),
    Unicode(
        'vhs',
        b'\xf0\x9f\x93\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcfc',
        ),
    ),
    Unicode(
        'vibration_mode',
        b'\xf0\x9f\x93\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcf3',
        ),
    ),
    Unicode(
        'video_camera',
        b'\xf0\x9f\x93\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcf9',
        ),
    ),
    Unicode(
        'video_game',
        b'\xf0\x9f\x8e\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfae',
        ),
    ),
    Unicode(
        'violin',
        b'\xf0\x9f\x8e\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfbb',
        ),
    ),
    Unicode(
        'virgo',
        b'\xe2\x99\x8d'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'volcano',
        b'\xf0\x9f\x8c\x8b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf0b',
        ),
    ),
    Unicode(
        'volleyball',
        b'\xf0\x9f\x8f\x90'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfd0',
        ),
    ),
    Unicode(
        'vs',
        b'\xf0\x9f\x86\x9a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udd9a',
        ),
    ),
    Unicode(
        'walking',
        b'\xf0\x9f\x9a\xb6'.decode('utf8'),
        False,
        (
            'person_walking',
        ),
        None,
        (
            '\ud83d\udeb6',
        ),
    ),
    Unicode(
        'walking_tone1',
        b'\xf0\x9f\x9a\xb6\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_walking_tone1',
        ),
        None,
        (
            '\ud83d\udeb6\ud83c\udffb',
        ),
    ),
    Unicode(
        'walking_tone2',
        b'\xf0\x9f\x9a\xb6\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_walking_tone2',
        ),
        None,
        (
            '\ud83d\udeb6\ud83c\udffc',
        ),
    ),
    Unicode(
        'walking_tone3',
        b'\xf0\x9f\x9a\xb6\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_walking_tone3',
        ),
        None,
        (
            '\ud83d\udeb6\ud83c\udffd',
        ),
    ),
    Unicode(
        'walking_tone4',
        b'\xf0\x9f\x9a\xb6\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_walking_tone4',
        ),
        None,
        (
            '\ud83d\udeb6\ud83c\udffe',
        ),
    ),
    Unicode(
        'walking_tone5',
        b'\xf0\x9f\x9a\xb6\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_walking_tone5',
        ),
        None,
        (
            '\ud83d\udeb6\ud83c\udfff',
        ),
    ),
    Unicode(
        'waning_crescent_moon',
        b'\xf0\x9f\x8c\x98'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf18',
        ),
    ),
    Unicode(
        'waning_gibbous_moon',
        b'\xf0\x9f\x8c\x96'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf16',
        ),
    ),
    Unicode(
        'warning',
        b'\xe2\x9a\xa0'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'wastebasket',
        b'\xf0\x9f\x97\x91'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'watch',
        b'\xe2\x8c\x9a'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'water_buffalo',
        b'\xf0\x9f\x90\x83'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc03',
        ),
    ),
    Unicode(
        'water_polo',
        b'\xf0\x9f\xa4\xbd'.decode('utf8'),
        False,
        (
            'person_playing_water_polo',
        ),
        None,
        (
            '\ud83e\udd3d',
        ),
    ),
    Unicode(
        'water_polo_tone1',
        b'\xf0\x9f\xa4\xbd\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        (
            'person_playing_water_polo_tone1',
        ),
        None,
        (
            '\ud83e\udd3d\ud83c\udffb',
        ),
    ),
    Unicode(
        'water_polo_tone2',
        b'\xf0\x9f\xa4\xbd\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        (
            'person_playing_water_polo_tone2',
        ),
        None,
        (
            '\ud83e\udd3d\ud83c\udffc',
        ),
    ),
    Unicode(
        'water_polo_tone3',
        b'\xf0\x9f\xa4\xbd\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        (
            'person_playing_water_polo_tone3',
        ),
        None,
        (
            '\ud83e\udd3d\ud83c\udffd',
        ),
    ),
    Unicode(
        'water_polo_tone4',
        b'\xf0\x9f\xa4\xbd\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        (
            'person_playing_water_polo_tone4',
        ),
        None,
        (
            '\ud83e\udd3d\ud83c\udffe',
        ),
    ),
    Unicode(
        'water_polo_tone5',
        b'\xf0\x9f\xa4\xbd\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        (
            'person_playing_water_polo_tone5',
        ),
        None,
        (
            '\ud83e\udd3d\ud83c\udfff',
        ),
    ),
    Unicode(
        'watermelon',
        b'\xf0\x9f\x8d\x89'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf49',
        ),
    ),
    Unicode(
        'wave',
        b'\xf0\x9f\x91\x8b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4b',
        ),
    ),
    Unicode(
        'wave_tone1',
        b'\xf0\x9f\x91\x8b\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4b\ud83c\udffb',
        ),
    ),
    Unicode(
        'wave_tone2',
        b'\xf0\x9f\x91\x8b\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4b\ud83c\udffc',
        ),
    ),
    Unicode(
        'wave_tone3',
        b'\xf0\x9f\x91\x8b\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4b\ud83c\udffd',
        ),
    ),
    Unicode(
        'wave_tone4',
        b'\xf0\x9f\x91\x8b\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4b\ud83c\udffe',
        ),
    ),
    Unicode(
        'wave_tone5',
        b'\xf0\x9f\x91\x8b\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc4b\ud83c\udfff',
        ),
    ),
    Unicode(
        'wavy_dash',
        b'\xe3\x80\xb0'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'waxing_crescent_moon',
        b'\xf0\x9f\x8c\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf12',
        ),
    ),
    Unicode(
        'waxing_gibbous_moon',
        b'\xf0\x9f\x8c\x94'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf14',
        ),
    ),
    Unicode(
        'wc',
        b'\xf0\x9f\x9a\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udebe',
        ),
    ),
    Unicode(
        'weary',
        b'\xf0\x9f\x98\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude29',
        ),
    ),
    Unicode(
        'wedding',
        b'\xf0\x9f\x92\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc92',
        ),
    ),
    Unicode(
        'whale2',
        b'\xf0\x9f\x90\x8b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc0b',
        ),
    ),
    Unicode(
        'whale',
        b'\xf0\x9f\x90\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc33',
        ),
    ),
    Unicode(
        'wheel_of_dharma',
        b'\xe2\x98\xb8'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'wheelchair',
        b'\xe2\x99\xbf'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'white_check_mark',
        b'\xe2\x9c\x85'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'white_circle',
        b'\xe2\x9a\xaa'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'white_flower',
        b'\xf0\x9f\x92\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcae',
        ),
    ),
    Unicode(
        'white_large_square',
        b'\xe2\xac\x9c'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'white_medium_small_square',
        b'\xe2\x97\xbd'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'white_medium_square',
        b'\xe2\x97\xbb'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'white_small_square',
        b'\xe2\x96\xab'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'white_square_button',
        b'\xf0\x9f\x94\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd33',
        ),
    ),
    Unicode(
        'white_sun_behind_cloud',
        b'\xf0\x9f\x8c\xa5'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'white_sun_behind_cloud_with_rain',
        b'\xf0\x9f\x8c\xa6'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'white_sun_small_cloud',
        b'\xf0\x9f\x8c\xa4'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'wilted_flower',
        b'\xf0\x9f\xa5\x80'.decode('utf8'),
        False,
        (
            'wilted_rose',
        ),
        None,
        (
            '\ud83e\udd40',
        ),
    ),
    Unicode(
        'wind_blowing_face',
        b'\xf0\x9f\x8c\xac'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'wind_chime',
        b'\xf0\x9f\x8e\x90'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf90',
        ),
    ),
    Unicode(
        'wine_glass',
        b'\xf0\x9f\x8d\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf77',
        ),
    ),
    Unicode(
        'wink',
        b'\xf0\x9f\x98\x89'.decode('utf8'),
        False,
        None,
        (';)', ';-)'),
        (
            '\ud83d\ude09',
        ),
    ),
    Unicode(
        'wolf',
        b'\xf0\x9f\x90\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc3a',
        ),
    ),
    Unicode(
        'woman',
        b'\xf0\x9f\x91\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69',
        ),
    ),
    Unicode(
        'woman_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb',
        ),
    ),
    Unicode(
        'woman_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc',
        ),
    ),
    Unicode(
        'woman_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd',
        ),
    ),
    Unicode(
        'woman_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe',
        ),
    ),
    Unicode(
        'woman_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff',
        ),
    ),
    Unicode(
        'womans_clothes',
        b'\xf0\x9f\x91\x9a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc5a',
        ),
    ),
    Unicode(
        'womans_hat',
        b'\xf0\x9f\x91\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc52',
        ),
    ),
    Unicode(
        'womens',
        b'\xf0\x9f\x9a\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeba',
        ),
    ),
    Unicode(
        'worried',
        b'\xf0\x9f\x98\x9f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude1f',
        ),
    ),
    Unicode(
        'wrench',
        b'\xf0\x9f\x94\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd27',
        ),
    ),
    Unicode(
        'wrestlers',
        b'\xf0\x9f\xa4\xbc'.decode('utf8'),
        False,
        (
            'wrestling',
            'people_wrestling'
        ),
        None,
        (
            '\ud83e\udd3c',
        ),
    ),
    Unicode(
        'writing_hand',
        b'\xe2\x9c\x8d'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'writing_hand_tone1',
        b'\xe2\x9c\x8d\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '✍\ud83c\udffb',
        ),
    ),
    Unicode(
        'writing_hand_tone2',
        b'\xe2\x9c\x8d\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '✍\ud83c\udffc',
        ),
    ),
    Unicode(
        'writing_hand_tone3',
        b'\xe2\x9c\x8d\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '✍\ud83c\udffd',
        ),
    ),
    Unicode(
        'writing_hand_tone4',
        b'\xe2\x9c\x8d\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '✍\ud83c\udffe',
        ),
    ),
    Unicode(
        'writing_hand_tone5',
        b'\xe2\x9c\x8d\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '✍\ud83c\udfff',
        ),
    ),
    Unicode(
        'x',
        b'\xe2\x9d\x8c'.decode('utf8'),
        False,
        (
            'cross_mark',
        ),
        None,
        None,
    ),
    Unicode(
        'yellow_heart',
        b'\xf0\x9f\x92\x9b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc9b',
        ),
    ),
    Unicode(
        'yen',
        b'\xf0\x9f\x92\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udcb4',
        ),
    ),
    Unicode(
        'yin_yang',
        b'\xe2\x98\xaf'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'yum',
        b'\xf0\x9f\x98\x8b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude0b',
        ),
    ),
    Unicode(
        'zap',
        b'\xe2\x9a\xa1'.decode('utf8'),
        False,
        (
            'high_voltage',
        ),
        None,
        None,
    ),
    Unicode(
        'zero',
        b'0\xe2\x83\xa3'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'zipper_mouth',
        b'\xf0\x9f\xa4\x90'.decode('utf8'),
        False,
        (
            'zipper_mouth_face',
        ),
        None,
        (
            '\ud83e\udd10',
        ),
    ),
    Unicode(
        'zzz',
        b'\xf0\x9f\x92\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udca4',
        ),
    ),
    Unicode(
        'a',
        b'\xf0\x9f\x85\xb0\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udd70️',
        ),
    ),
    Unicode(
        'abacus',
        b'\xf0\x9f\xa7\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddee',
        ),
    ),
    Unicode(
        'adhesive_bandage',
        b'\xf0\x9f\xa9\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude79',
        ),
    ),
    Unicode(
        'admission_tickets',
        b'\xf0\x9f\x8e\x9f\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'tickets',
        ),
        None,
        (
            '\ud83c\udf9f️',
        ),
    ),
    Unicode(
        'adult',
        b'\xf0\x9f\xa7\x91'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1',
        ),
    ),
    Unicode(
        'adult_tone1',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb',
        ),
    ),
    Unicode(
        'adult_tone2',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc',
        ),
    ),
    Unicode(
        'adult_tone3',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd',
        ),
    ),
    Unicode(
        'adult_tone4',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe',
        ),
    ),
    Unicode(
        'adult_tone5',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff',
        ),
    ),
    Unicode(
        'airplane',
        b'\xe2\x9c\x88\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'airplane_small',
        b'\xf0\x9f\x9b\xa9\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'small_airplane',
        ),
        None,
        (
            '\ud83d\udee9️',
        ),
    ),
    Unicode(
        'alembic',
        b'\xe2\x9a\x97\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'anger_right',
        b'\xf0\x9f\x97\xaf\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'right_anger_bubble',
        ),
        None,
        (
            '\ud83d\uddef️',
        ),
    ),
    Unicode(
        'arrow_backward',
        b'\xe2\x97\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'arrow_down',
        b'\xe2\xac\x87\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'down_arrow',
        ),
        None,
        None,
    ),
    Unicode(
        'arrow_forward',
        b'\xe2\x96\xb6\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'arrow_heading_down',
        b'\xe2\xa4\xb5\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'arrow_heading_up',
        b'\xe2\xa4\xb4\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'arrow_left',
        b'\xe2\xac\x85\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'left_arrow',
        ),
        None,
        None,
    ),
    Unicode(
        'arrow_lower_left',
        b'\xe2\x86\x99\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'arrow_lower_right',
        b'\xe2\x86\x98\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'arrow_right',
        b'\xe2\x9e\xa1\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'right_arrow',
        ),
        None,
        None,
    ),
    Unicode(
        'arrow_right_hook',
        b'\xe2\x86\xaa\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'arrow_up',
        b'\xe2\xac\x86\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'up_arrow',
        ),
        None,
        None,
    ),
    Unicode(
        'arrow_up_down',
        b'\xe2\x86\x95\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'up_down_arrow',
        ),
        None,
        None,
    ),
    Unicode(
        'arrow_upper_left',
        b'\xe2\x86\x96\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'up_left_arrow',
        ),
        None,
        None,
    ),
    Unicode(
        'arrow_upper_right',
        b'\xe2\x86\x97\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'asterisk',
        b'*\xef\xb8\x8f\xe2\x83\xa3'.decode('utf8'),
        False,
        (
            'keycap_asterisk',
        ),
        None,
        None,
    ),
    Unicode(
        'atom',
        b'\xe2\x9a\x9b\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'atom_symbol',
        ),
        None,
        None,
    ),
    Unicode(
        'auto_rickshaw',
        b'\xf0\x9f\x9b\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udefa',
        ),
    ),
    Unicode(
        'axe',
        b'\xf0\x9f\xaa\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude93',
        ),
    ),
    Unicode(
        'b',
        b'\xf0\x9f\x85\xb1\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udd71️',
        ),
    ),
    Unicode(
        'badger',
        b'\xf0\x9f\xa6\xa1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udda1',
        ),
    ),
    Unicode(
        'bagel',
        b'\xf0\x9f\xa5\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd6f',
        ),
    ),
    Unicode(
        'ballet_shoes',
        b'\xf0\x9f\xa9\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude70',
        ),
    ),
    Unicode(
        'ballot_box',
        b'\xf0\x9f\x97\xb3\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'ballot_box_with_ballot',
        ),
        None,
        (
            '\ud83d\uddf3️',
        ),
    ),
    Unicode(
        'ballot_box_with_check',
        b'\xe2\x98\x91\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'bangbang',
        b'\xe2\x80\xbc\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'banjo',
        b'\xf0\x9f\xaa\x95'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude95',
        ),
    ),
    Unicode(
        'basket',
        b'\xf0\x9f\xa7\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddfa',
        ),
    ),
    Unicode(
        'basketball_player',
        b'\xe2\x9b\xb9\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'person_bouncing_ball',
            'person_with_ball'
        ),
        None,
        None,
    ),
    Unicode(
        'beach',
        b'\xf0\x9f\x8f\x96\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'beach_with_umbrella',
        ),
        None,
        (
            '\ud83c\udfd6️',
        ),
    ),
    Unicode(
        'beach_umbrella',
        b'\xe2\x9b\xb1\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'umbrella_on_ground',
        ),
        None,
        None,
    ),
    Unicode(
        'bearded_person',
        b'\xf0\x9f\xa7\x94'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd4',
        ),
    ),
    Unicode(
        'bearded_person_tone1',
        b'\xf0\x9f\xa7\x94\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd4\ud83c\udffb',
        ),
    ),
    Unicode(
        'bearded_person_tone2',
        b'\xf0\x9f\xa7\x94\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd4\ud83c\udffc',
        ),
    ),
    Unicode(
        'bearded_person_tone3',
        b'\xf0\x9f\xa7\x94\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd4\ud83c\udffd',
        ),
    ),
    Unicode(
        'bearded_person_tone4',
        b'\xf0\x9f\xa7\x94\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd4\ud83c\udffe',
        ),
    ),
    Unicode(
        'bearded_person_tone5',
        b'\xf0\x9f\xa7\x94\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd4\ud83c\udfff',
        ),
    ),
    Unicode(
        'bed',
        b'\xf0\x9f\x9b\x8f\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udecf️',
        ),
    ),
    Unicode(
        'bellhop',
        b'\xf0\x9f\x9b\x8e\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'bellhop_bell',
        ),
        None,
        (
            '\ud83d\udece️',
        ),
    ),
    Unicode(
        'beverage_box',
        b'\xf0\x9f\xa7\x83'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddc3',
        ),
    ),
    Unicode(
        'billed_cap',
        b'\xf0\x9f\xa7\xa2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udde2',
        ),
    ),
    Unicode(
        'biohazard',
        b'\xe2\x98\xa3\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'biohazard_sign',
        ),
        None,
        None,
    ),
    Unicode(
        'black_medium_square',
        b'\xe2\x97\xbc\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'black_nib',
        b'\xe2\x9c\x92\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'black_small_square',
        b'\xe2\x96\xaa\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'blond_haired_man',
        b'\xf0\x9f\x91\xb1\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc71\u200d♂️',
        ),
    ),
    Unicode(
        'blond_haired_man_tone1',
        b'\xf0\x9f\x91\xb1\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc71\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'blond_haired_man_tone2',
        b'\xf0\x9f\x91\xb1\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc71\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'blond_haired_man_tone3',
        b'\xf0\x9f\x91\xb1\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc71\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'blond_haired_man_tone4',
        b'\xf0\x9f\x91\xb1\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc71\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'blond_haired_man_tone5',
        b'\xf0\x9f\x91\xb1\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc71\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'blond_haired_woman',
        b'\xf0\x9f\x91\xb1\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc71\u200d♀️',
        ),
    ),
    Unicode(
        'blond_haired_woman_tone1',
        b'\xf0\x9f\x91\xb1\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc71\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'blond_haired_woman_tone2',
        b'\xf0\x9f\x91\xb1\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc71\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'blond_haired_woman_tone3',
        b'\xf0\x9f\x91\xb1\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc71\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'blond_haired_woman_tone4',
        b'\xf0\x9f\x91\xb1\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc71\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'blond_haired_woman_tone5',
        b'\xf0\x9f\x91\xb1\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc71\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'blue_square',
        b'\xf0\x9f\x9f\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udfe6',
        ),
    ),
    Unicode(
        'bone',
        b'\xf0\x9f\xa6\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb4',
        ),
    ),
    Unicode(
        'bowl_with_spoon',
        b'\xf0\x9f\xa5\xa3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd63',
        ),
    ),
    Unicode(
        'brain',
        b'\xf0\x9f\xa7\xa0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udde0',
        ),
    ),
    Unicode(
        'breast_feeding',
        b'\xf0\x9f\xa4\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd31',
        ),
    ),
    Unicode(
        'breast_feeding_tone1',
        b'\xf0\x9f\xa4\xb1\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd31\ud83c\udffb',
        ),
    ),
    Unicode(
        'breast_feeding_tone2',
        b'\xf0\x9f\xa4\xb1\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd31\ud83c\udffc',
        ),
    ),
    Unicode(
        'breast_feeding_tone3',
        b'\xf0\x9f\xa4\xb1\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd31\ud83c\udffd',
        ),
    ),
    Unicode(
        'breast_feeding_tone4',
        b'\xf0\x9f\xa4\xb1\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd31\ud83c\udffe',
        ),
    ),
    Unicode(
        'breast_feeding_tone5',
        b'\xf0\x9f\xa4\xb1\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd31\ud83c\udfff',
        ),
    ),
    Unicode(
        'bricks',
        b'\xf0\x9f\xa7\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddf1',
        ),
    ),
    Unicode(
        'briefs',
        b'\xf0\x9f\xa9\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude72',
        ),
    ),
    Unicode(
        'broccoli',
        b'\xf0\x9f\xa5\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd66',
        ),
    ),
    Unicode(
        'broom',
        b'\xf0\x9f\xa7\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddf9',
        ),
    ),
    Unicode(
        'brown_circle',
        b'\xf0\x9f\x9f\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udfe4',
        ),
    ),
    Unicode(
        'brown_heart',
        b'\xf0\x9f\xa4\x8e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd0e',
        ),
    ),
    Unicode(
        'brown_square',
        b'\xf0\x9f\x9f\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udfeb',
        ),
    ),
    Unicode(
        'building_construction',
        b'\xf0\x9f\x8f\x97\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'construction_site',
        ),
        None,
        (
            '\ud83c\udfd7️',
        ),
    ),
    Unicode(
        'butter',
        b'\xf0\x9f\xa7\x88'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddc8',
        ),
    ),
    Unicode(
        'calendar_spiral',
        b'\xf0\x9f\x97\x93\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'spiral_calendar_pad',
        ),
        None,
        (
            '\ud83d\uddd3️',
        ),
    ),
    Unicode(
        'camping',
        b'\xf0\x9f\x8f\x95\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfd5️',
        ),
    ),
    Unicode(
        'candle',
        b'\xf0\x9f\x95\xaf\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd6f️',
        ),
    ),
    Unicode(
        'canned_food',
        b'\xf0\x9f\xa5\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd6b',
        ),
    ),
    Unicode(
        'card_box',
        b'\xf0\x9f\x97\x83\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'card_file_box',
        ),
        None,
        (
            '\ud83d\uddc3️',
        ),
    ),
    Unicode(
        'card_index_dividers',
        b'\xf0\x9f\x97\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'dividers',
        ),
        None,
        (
            '\ud83d\uddc2️',
        ),
    ),
    Unicode(
        'chains',
        b'\xe2\x9b\x93\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'chair',
        b'\xf0\x9f\xaa\x91'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude91',
        ),
    ),
    Unicode(
        'chess_pawn',
        b'\xe2\x99\x9f\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'child',
        b'\xf0\x9f\xa7\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd2',
        ),
    ),
    Unicode(
        'child_tone1',
        b'\xf0\x9f\xa7\x92\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd2\ud83c\udffb',
        ),
    ),
    Unicode(
        'child_tone2',
        b'\xf0\x9f\xa7\x92\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd2\ud83c\udffc',
        ),
    ),
    Unicode(
        'child_tone3',
        b'\xf0\x9f\xa7\x92\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd2\ud83c\udffd',
        ),
    ),
    Unicode(
        'child_tone4',
        b'\xf0\x9f\xa7\x92\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd2\ud83c\udffe',
        ),
    ),
    Unicode(
        'child_tone5',
        b'\xf0\x9f\xa7\x92\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd2\ud83c\udfff',
        ),
    ),
    Unicode(
        'chipmunk',
        b'\xf0\x9f\x90\xbf\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc3f️',
        ),
    ),
    Unicode(
        'chopsticks',
        b'\xf0\x9f\xa5\xa2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd62',
        ),
    ),
    Unicode(
        'cityscape',
        b'\xf0\x9f\x8f\x99\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfd9️',
        ),
    ),
    Unicode(
        'classical_building',
        b'\xf0\x9f\x8f\x9b\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfdb️',
        ),
    ),
    Unicode(
        'clock',
        b'\xf0\x9f\x95\xb0\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'mantlepiece_clock',
        ),
        None,
        (
            '\ud83d\udd70️',
        ),
    ),
    Unicode(
        'cloud',
        b'\xe2\x98\x81\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'cloud_lightning',
        b'\xf0\x9f\x8c\xa9\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'cloud_with_lightning',
        ),
        None,
        (
            '\ud83c\udf29️',
        ),
    ),
    Unicode(
        'cloud_rain',
        b'\xf0\x9f\x8c\xa7\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'cloud_with_rain',
        ),
        None,
        (
            '\ud83c\udf27️',
        ),
    ),
    Unicode(
        'cloud_snow',
        b'\xf0\x9f\x8c\xa8\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'cloud_with_snow',
        ),
        None,
        (
            '\ud83c\udf28️',
        ),
    ),
    Unicode(
        'cloud_tornado',
        b'\xf0\x9f\x8c\xaa\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'cloud_with_tornado',
        ),
        None,
        (
            '\ud83c\udf2a️',
        ),
    ),
    Unicode(
        'clubs',
        b'\xe2\x99\xa3\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'club_suit',
        ),
        None,
        None,
    ),
    Unicode(
        'coat',
        b'\xf0\x9f\xa7\xa5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udde5',
        ),
    ),
    Unicode(
        'coconut',
        b'\xf0\x9f\xa5\xa5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd65',
        ),
    ),
    Unicode(
        'coffin',
        b'\xe2\x9a\xb0\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'cold_face',
        b'\xf0\x9f\xa5\xb6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd76',
        ),
    ),
    Unicode(
        'comet',
        b'\xe2\x98\x84\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'compass',
        b'\xf0\x9f\xa7\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udded',
        ),
    ),
    Unicode(
        'compression',
        b'\xf0\x9f\x97\x9c\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udddc️',
        ),
    ),
    Unicode(
        'congratulations',
        b'\xe3\x8a\x97\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'control_knobs',
        b'\xf0\x9f\x8e\x9b\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf9b️',
        ),
    ),
    Unicode(
        'copyright',
        b'\xc2\xa9\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'couch',
        b'\xf0\x9f\x9b\x8b\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'couch_and_lamp',
        ),
        None,
        (
            '\ud83d\udecb️',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d❤️\u200d\ud83d\udc68',
        ),
    ),
    Unicode(
        'crayon',
        b'\xf0\x9f\x96\x8d\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'lower_left_crayon',
        ),
        None,
        (
            '\ud83d\udd8d️',
        ),
    ),
    Unicode(
        'cricket',
        b'\xf0\x9f\xa6\x97'.decode('utf8'),
        True,
        None,
        None,
        (
            '\ud83e\udd97',
        ),
    ),
    Unicode(
        'cross',
        b'\xe2\x9c\x9d\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'latin_cross',
        ),
        None,
        None,
    ),
    Unicode(
        'crossed_swords',
        b'\xe2\x9a\x94\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'cruise_ship',
        b'\xf0\x9f\x9b\xb3\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'passenger_ship',
        ),
        None,
        (
            '\ud83d\udef3️',
        ),
    ),
    Unicode(
        'cup_with_straw',
        b'\xf0\x9f\xa5\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd64',
        ),
    ),
    Unicode(
        'cupcake',
        b'\xf0\x9f\xa7\x81'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddc1',
        ),
    ),
    Unicode(
        'curling_stone',
        b'\xf0\x9f\xa5\x8c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd4c',
        ),
    ),
    Unicode(
        'cut_of_meat',
        b'\xf0\x9f\xa5\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd69',
        ),
    ),
    Unicode(
        'dagger',
        b'\xf0\x9f\x97\xa1\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'dagger_knife',
        ),
        None,
        (
            '\ud83d\udde1️',
        ),
    ),
    Unicode(
        'dark_sunglasses',
        b'\xf0\x9f\x95\xb6\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd76️',
        ),
    ),
    Unicode(
        'deaf_man',
        b'\xf0\x9f\xa7\x8f\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcf\u200d♂️',
        ),
    ),
    Unicode(
        'deaf_man_tone1',
        b'\xf0\x9f\xa7\x8f\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcf\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'deaf_man_tone2',
        b'\xf0\x9f\xa7\x8f\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcf\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'deaf_man_tone3',
        b'\xf0\x9f\xa7\x8f\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcf\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'deaf_man_tone4',
        b'\xf0\x9f\xa7\x8f\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcf\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'deaf_man_tone5',
        b'\xf0\x9f\xa7\x8f\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcf\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'deaf_person',
        b'\xf0\x9f\xa7\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcf',
        ),
    ),
    Unicode(
        'deaf_person_tone1',
        b'\xf0\x9f\xa7\x8f\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcf\ud83c\udffb',
        ),
    ),
    Unicode(
        'deaf_person_tone2',
        b'\xf0\x9f\xa7\x8f\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcf\ud83c\udffc',
        ),
    ),
    Unicode(
        'deaf_person_tone3',
        b'\xf0\x9f\xa7\x8f\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcf\ud83c\udffd',
        ),
    ),
    Unicode(
        'deaf_person_tone4',
        b'\xf0\x9f\xa7\x8f\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcf\ud83c\udffe',
        ),
    ),
    Unicode(
        'deaf_person_tone5',
        b'\xf0\x9f\xa7\x8f\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcf\ud83c\udfff',
        ),
    ),
    Unicode(
        'deaf_woman',
        b'\xf0\x9f\xa7\x8f\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcf\u200d♀️',
        ),
    ),
    Unicode(
        'deaf_woman_tone1',
        b'\xf0\x9f\xa7\x8f\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcf\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'deaf_woman_tone2',
        b'\xf0\x9f\xa7\x8f\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcf\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'deaf_woman_tone3',
        b'\xf0\x9f\xa7\x8f\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcf\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'deaf_woman_tone4',
        b'\xf0\x9f\xa7\x8f\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcf\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'deaf_woman_tone5',
        b'\xf0\x9f\xa7\x8f\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcf\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'derelict_house_building',
        b'\xf0\x9f\x8f\x9a\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'house_abandoned',
        ),
        None,
        (
            '\ud83c\udfda️',
        ),
    ),
    Unicode(
        'desert',
        b'\xf0\x9f\x8f\x9c\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfdc️',
        ),
    ),
    Unicode(
        'desert_island',
        b'\xf0\x9f\x8f\x9d\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'island',
        ),
        None,
        (
            '\ud83c\udfdd️',
        ),
    ),
    Unicode(
        'desktop',
        b'\xf0\x9f\x96\xa5\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'desktop_computer',
        ),
        None,
        (
            '\ud83d\udda5️',
        ),
    ),
    Unicode(
        'detective',
        b'\xf0\x9f\x95\xb5\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'sleuth_or_spy',
            'spy'
        ),
        None,
        (
            '\ud83d\udd75️',
        ),
    ),
    Unicode(
        'diamonds',
        b'\xe2\x99\xa6\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'diamond_suit',
        ),
        None,
        None,
    ),
    Unicode(
        'diving_mask',
        b'\xf0\x9f\xa4\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3f',
        ),
    ),
    Unicode(
        'diya_lamp',
        b'\xf0\x9f\xaa\x94'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude94',
        ),
    ),
    Unicode(
        'dna',
        b'\xf0\x9f\xa7\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddec',
        ),
    ),
    Unicode(
        'double_vertical_bar',
        b'\xe2\x8f\xb8\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'pause_button',
        ),
        None,
        None,
    ),
    Unicode(
        'dove',
        b'\xf0\x9f\x95\x8a\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'dove_of_peace',
        ),
        None,
        (
            '\ud83d\udd4a️',
        ),
    ),
    Unicode(
        'drop_of_blood',
        b'\xf0\x9f\xa9\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude78',
        ),
    ),
    Unicode(
        'dumpling',
        b'\xf0\x9f\xa5\x9f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd5f',
        ),
    ),
    Unicode(
        'ear_with_hearing_aid',
        b'\xf0\x9f\xa6\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddbb',
        ),
    ),
    Unicode(
        'ear_with_hearing_aid_tone1',
        b'\xf0\x9f\xa6\xbb\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddbb\ud83c\udffb',
        ),
    ),
    Unicode(
        'ear_with_hearing_aid_tone2',
        b'\xf0\x9f\xa6\xbb\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddbb\ud83c\udffc',
        ),
    ),
    Unicode(
        'ear_with_hearing_aid_tone3',
        b'\xf0\x9f\xa6\xbb\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddbb\ud83c\udffd',
        ),
    ),
    Unicode(
        'ear_with_hearing_aid_tone4',
        b'\xf0\x9f\xa6\xbb\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddbb\ud83c\udffe',
        ),
    ),
    Unicode(
        'ear_with_hearing_aid_tone5',
        b'\xf0\x9f\xa6\xbb\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddbb\ud83c\udfff',
        ),
    ),
    Unicode(
        'eight',
        b'8\xef\xb8\x8f\xe2\x83\xa3'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'eight_pointed_black_star',
        b'\xe2\x9c\xb4\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'eight_spoked_asterisk',
        b'\xe2\x9c\xb3\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'eject',
        b'\xe2\x8f\x8f\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'eject_symbol',
        ),
        None,
        None,
    ),
    Unicode(
        'elf',
        b'\xf0\x9f\xa7\x9d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddd',
        ),
    ),
    Unicode(
        'elf_tone1',
        b'\xf0\x9f\xa7\x9d\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddd\ud83c\udffb',
        ),
    ),
    Unicode(
        'elf_tone2',
        b'\xf0\x9f\xa7\x9d\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddd\ud83c\udffc',
        ),
    ),
    Unicode(
        'elf_tone3',
        b'\xf0\x9f\xa7\x9d\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddd\ud83c\udffd',
        ),
    ),
    Unicode(
        'elf_tone4',
        b'\xf0\x9f\xa7\x9d\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddd\ud83c\udffe',
        ),
    ),
    Unicode(
        'elf_tone5',
        b'\xf0\x9f\xa7\x9d\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddd\ud83c\udfff',
        ),
    ),
    Unicode(
        'england',
        (
            b'\xf0\x9f\x8f\xb4\xf3\xa0\x81\xa7\xf3\xa0\x81\xa2\xf3\xa0'
            b'\x81\xa5\xf3\xa0\x81\xae\xf3\xa0\x81\xa7\xf3\xa0\x81\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f',
        ),
    ),
    Unicode(
        'envelope',
        b'\xe2\x9c\x89\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'exploding_head',
        b'\xf0\x9f\xa4\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd2f',
        ),
    ),
    Unicode(
        'eye',
        b'\xf0\x9f\x91\x81\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc41️',
        ),
    ),
    Unicode(
        'face_vomiting',
        b'\xf0\x9f\xa4\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd2e',
        ),
    ),
    Unicode(
        'face_with_hand_over_mouth',
        b'\xf0\x9f\xa4\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd2d',
        ),
    ),
    Unicode(
        'face_with_monocle',
        b'\xf0\x9f\xa7\x90'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd0',
        ),
    ),
    Unicode(
        'face_with_raised_eyebrow',
        b'\xf0\x9f\xa4\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd28',
        ),
    ),
    Unicode(
        'face_with_symbols_over_mouth',
        b'\xf0\x9f\xa4\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd2c',
        ),
    ),
    Unicode(
        'fairy',
        b'\xf0\x9f\xa7\x9a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddda',
        ),
    ),
    Unicode(
        'fairy_tone1',
        b'\xf0\x9f\xa7\x9a\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddda\ud83c\udffb',
        ),
    ),
    Unicode(
        'fairy_tone2',
        b'\xf0\x9f\xa7\x9a\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddda\ud83c\udffc',
        ),
    ),
    Unicode(
        'fairy_tone3',
        b'\xf0\x9f\xa7\x9a\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddda\ud83c\udffd',
        ),
    ),
    Unicode(
        'fairy_tone4',
        b'\xf0\x9f\xa7\x9a\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddda\ud83c\udffe',
        ),
    ),
    Unicode(
        'fairy_tone5',
        b'\xf0\x9f\xa7\x9a\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddda\ud83c\udfff',
        ),
    ),
    Unicode(
        'falafel',
        b'\xf0\x9f\xa7\x86'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddc6',
        ),
    ),
    Unicode(
        'family_man_boy',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83d\udc66',
        ),
    ),
    Unicode(
        'family_man_boy_boy',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa6\xe2\x80\x8d\xf0\x9f\x91\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66',
        ),
    ),
    Unicode(
        'family_man_girl',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83d\udc67',
        ),
    ),
    Unicode(
        'family_man_girl_boy',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa7\xe2\x80\x8d\xf0\x9f\x91\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc66',
        ),
    ),
    Unicode(
        'family_man_girl_girl',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa7\xe2\x80\x8d\xf0\x9f\x91\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67',
        ),
    ),
    Unicode(
        'family_man_woman_boy',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc66',
        ),
    ),
    Unicode(
        'family_woman_boy',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83d\udc66',
        ),
    ),
    Unicode(
        'family_woman_boy_boy',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa6\xe2\x80\x8d\xf0\x9f\x91\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66',
        ),
    ),
    Unicode(
        'family_woman_girl',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83d\udc67',
        ),
    ),
    Unicode(
        'family_woman_girl_boy',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa7\xe2\x80\x8d\xf0\x9f\x91\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66',
        ),
    ),
    Unicode(
        'family_woman_girl_girl',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x91\xa7\xe2\x80\x8d\xf0\x9f\x91\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67',
        ),
    ),
    Unicode(
        'female_sign',
        b'\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'ferry',
        b'\xe2\x9b\xb4\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'file_cabinet',
        b'\xf0\x9f\x97\x84\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\uddc4️',
        ),
    ),
    Unicode(
        'film_frames',
        b'\xf0\x9f\x8e\x9e\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf9e️',
        ),
    ),
    Unicode(
        'film_projector',
        b'\xf0\x9f\x93\xbd\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'projector',
        ),
        None,
        (
            '\ud83d\udcfd️',
        ),
    ),
    Unicode(
        'fire_extinguisher',
        b'\xf0\x9f\xa7\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddef',
        ),
    ),
    Unicode(
        'firecracker',
        b'\xf0\x9f\xa7\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udde8',
        ),
    ),
    Unicode(
        'five',
        b'5\xef\xb8\x8f\xe2\x83\xa3'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'flag_white',
        b'\xf0\x9f\x8f\xb3\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udff3️',
        ),
    ),
    Unicode(
        'flamingo',
        b'\xf0\x9f\xa6\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udda9',
        ),
    ),
    Unicode(
        'fleur_de_lis',
        b'\xe2\x9a\x9c\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'flying_disc',
        b'\xf0\x9f\xa5\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd4f',
        ),
    ),
    Unicode(
        'flying_saucer',
        b'\xf0\x9f\x9b\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udef8',
        ),
    ),
    Unicode(
        'fog',
        b'\xf0\x9f\x8c\xab\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf2b️',
        ),
    ),
    Unicode(
        'foot',
        b'\xf0\x9f\xa6\xb6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb6',
        ),
    ),
    Unicode(
        'foot_tone1',
        b'\xf0\x9f\xa6\xb6\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb6\ud83c\udffb',
        ),
    ),
    Unicode(
        'foot_tone2',
        b'\xf0\x9f\xa6\xb6\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb6\ud83c\udffc',
        ),
    ),
    Unicode(
        'foot_tone3',
        b'\xf0\x9f\xa6\xb6\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb6\ud83c\udffd',
        ),
    ),
    Unicode(
        'foot_tone4',
        b'\xf0\x9f\xa6\xb6\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb6\ud83c\udffe',
        ),
    ),
    Unicode(
        'foot_tone5',
        b'\xf0\x9f\xa6\xb6\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb6\ud83c\udfff',
        ),
    ),
    Unicode(
        'fork_and_knife_with_plate',
        b'\xf0\x9f\x8d\xbd\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'fork_knife_plate',
        ),
        None,
        (
            '\ud83c\udf7d️',
        ),
    ),
    Unicode(
        'fortune_cookie',
        b'\xf0\x9f\xa5\xa0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd60',
        ),
    ),
    Unicode(
        'four',
        b'4\xef\xb8\x8f\xe2\x83\xa3'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'frame_photo',
        b'\xf0\x9f\x96\xbc\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'frame_with_picture',
        ),
        None,
        (
            '\ud83d\uddbc️',
        ),
    ),
    Unicode(
        'frowning2',
        b'\xe2\x98\xb9\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'white_frowning_face',
            'frowning_face'
        ),
        None,
        None,
    ),
    Unicode(
        'funeral_urn',
        b'\xe2\x9a\xb1\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'urn',
        ),
        None,
        None,
    ),
    Unicode(
        'garlic',
        b'\xf0\x9f\xa7\x84'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddc4',
        ),
    ),
    Unicode(
        'gear',
        b'\xe2\x9a\x99\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'genie',
        b'\xf0\x9f\xa7\x9e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddde',
        ),
    ),
    Unicode(
        'giraffe',
        b'\xf0\x9f\xa6\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd92',
        ),
    ),
    Unicode(
        'gloves',
        b'\xf0\x9f\xa7\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udde4',
        ),
    ),
    Unicode(
        'goggles',
        b'\xf0\x9f\xa5\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd7d',
        ),
    ),
    Unicode(
        'golfer',
        b'\xf0\x9f\x8f\x8c\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'person_golfing',
        ),
        None,
        (
            '\ud83c\udfcc️',
        ),
    ),
    Unicode(
        'green_circle',
        b'\xf0\x9f\x9f\xa2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udfe2',
        ),
    ),
    Unicode(
        'green_square',
        b'\xf0\x9f\x9f\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udfe9',
        ),
    ),
    Unicode(
        'guide_dog',
        b'\xf0\x9f\xa6\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddae',
        ),
    ),
    Unicode(
        'hammer_and_pick',
        b'\xe2\x9a\x92\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'hammer_pick',
        ),
        None,
        None,
    ),
    Unicode(
        'hammer_and_wrench',
        b'\xf0\x9f\x9b\xa0\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'tools',
        ),
        None,
        (
            '\ud83d\udee0️',
        ),
    ),
    Unicode(
        'hand_splayed',
        b'\xf0\x9f\x96\x90\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'raised_hand_with_fingers_splayed',
        ),
        None,
        (
            '\ud83d\udd90️',
        ),
    ),
    Unicode(
        'hash',
        b'#\xef\xb8\x8f\xe2\x83\xa3'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'heart',
        b'\xe2\x9d\xa4\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'red_heart',
        ),
        ('<3', '♡'),
        None,
    ),
    Unicode(
        'heart_exclamation',
        b'\xe2\x9d\xa3\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'heavy_heart_exclamation_mark_ornament',
        ),
        None,
        None,
    ),
    Unicode(
        'hearts',
        b'\xe2\x99\xa5\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'heart_suit',
        ),
        None,
        None,
    ),
    Unicode(
        'heavy_check_mark',
        b'\xe2\x9c\x94\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'check_mark',
        ),
        None,
        None,
    ),
    Unicode(
        'heavy_multiplication_x',
        b'\xe2\x9c\x96\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'hedgehog',
        b'\xf0\x9f\xa6\x94'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd94',
        ),
    ),
    Unicode(
        'helmet_with_cross',
        b'\xe2\x9b\x91\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'helmet_with_white_cross',
        ),
        None,
        None,
    ),
    Unicode(
        'hiking_boot',
        b'\xf0\x9f\xa5\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd7e',
        ),
    ),
    Unicode(
        'hindu_temple',
        b'\xf0\x9f\x9b\x95'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\uded5',
        ),
    ),
    Unicode(
        'hippopotamus',
        b'\xf0\x9f\xa6\x9b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd9b',
        ),
    ),
    Unicode(
        'hole',
        b'\xf0\x9f\x95\xb3\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd73️',
        ),
    ),
    Unicode(
        'homes',
        b'\xf0\x9f\x8f\x98\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'house_buildings',
        ),
        None,
        (
            '\ud83c\udfd8️',
        ),
    ),
    Unicode(
        'hot_face',
        b'\xf0\x9f\xa5\xb5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd75',
        ),
    ),
    Unicode(
        'hot_pepper',
        b'\xf0\x9f\x8c\xb6\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf36️',
        ),
    ),
    Unicode(
        'hotsprings',
        b'\xe2\x99\xa8\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'hot_springs',
        ),
        None,
        None,
    ),
    Unicode(
        'ice_cube',
        b'\xf0\x9f\xa7\x8a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddca',
        ),
    ),
    Unicode(
        'ice_skate',
        b'\xe2\x9b\xb8\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'infinity',
        b'\xe2\x99\xbe\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'information_source',
        b'\xe2\x84\xb9\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'information',
        ),
        None,
        None,
    ),
    Unicode(
        'interrobang',
        b'\xe2\x81\x89\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'jigsaw',
        b'\xf0\x9f\xa7\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udde9',
        ),
    ),
    Unicode(
        'joystick',
        b'\xf0\x9f\x95\xb9\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd79️',
        ),
    ),
    Unicode(
        'kangaroo',
        b'\xf0\x9f\xa6\x98'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd98',
        ),
    ),
    Unicode(
        'key2',
        b'\xf0\x9f\x97\x9d\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'old_key',
        ),
        None,
        (
            '\ud83d\udddd️',
        ),
    ),
    Unicode(
        'keyboard',
        b'\xe2\x8c\xa8\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'kiss_woman_man',
        (
            b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68',
        ),
    ),
    Unicode(
        'kite',
        b'\xf0\x9f\xaa\x81'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude81',
        ),
    ),
    Unicode(
        'lab_coat',
        b'\xf0\x9f\xa5\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd7c',
        ),
    ),
    Unicode(
        'label',
        b'\xf0\x9f\x8f\xb7\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udff7️',
        ),
    ),
    Unicode(
        'lacrosse',
        b'\xf0\x9f\xa5\x8d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd4d',
        ),
    ),
    Unicode(
        'leafy_green',
        b'\xf0\x9f\xa5\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd6c',
        ),
    ),
    Unicode(
        'left_right_arrow',
        b'\xe2\x86\x94\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'left_speech_bubble',
        b'\xf0\x9f\x97\xa8\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'speech_left',
        ),
        None,
        (
            '\ud83d\udde8️',
        ),
    ),
    Unicode(
        'leftwards_arrow_with_hook',
        b'\xe2\x86\xa9\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'leg',
        b'\xf0\x9f\xa6\xb5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb5',
        ),
    ),
    Unicode(
        'leg_tone1',
        b'\xf0\x9f\xa6\xb5\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb5\ud83c\udffb',
        ),
    ),
    Unicode(
        'leg_tone2',
        b'\xf0\x9f\xa6\xb5\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb5\ud83c\udffc',
        ),
    ),
    Unicode(
        'leg_tone3',
        b'\xf0\x9f\xa6\xb5\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb5\ud83c\udffd',
        ),
    ),
    Unicode(
        'leg_tone4',
        b'\xf0\x9f\xa6\xb5\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb5\ud83c\udffe',
        ),
    ),
    Unicode(
        'leg_tone5',
        b'\xf0\x9f\xa6\xb5\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb5\ud83c\udfff',
        ),
    ),
    Unicode(
        'level_slider',
        b'\xf0\x9f\x8e\x9a\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf9a️',
        ),
    ),
    Unicode(
        'levitate',
        b'\xf0\x9f\x95\xb4\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'man_in_business_suit_levitating',
        ),
        None,
        (
            '\ud83d\udd74️',
        ),
    ),
    Unicode(
        'lifter',
        b'\xf0\x9f\x8f\x8b\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'person_lifting_weights',
            'weight_lifter'
        ),
        None,
        (
            '\ud83c\udfcb️',
        ),
    ),
    Unicode(
        'linked_paperclips',
        b'\xf0\x9f\x96\x87\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'paperclips',
        ),
        None,
        (
            '\ud83d\udd87️',
        ),
    ),
    Unicode(
        'llama',
        b'\xf0\x9f\xa6\x99'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd99',
        ),
    ),
    Unicode(
        'lobster',
        b'\xf0\x9f\xa6\x9e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd9e',
        ),
    ),
    Unicode(
        'love_you_gesture',
        b'\xf0\x9f\xa4\x9f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd1f',
        ),
    ),
    Unicode(
        'love_you_gesture_tone1',
        b'\xf0\x9f\xa4\x9f\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd1f\ud83c\udffb',
        ),
    ),
    Unicode(
        'love_you_gesture_tone2',
        b'\xf0\x9f\xa4\x9f\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd1f\ud83c\udffc',
        ),
    ),
    Unicode(
        'love_you_gesture_tone3',
        b'\xf0\x9f\xa4\x9f\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd1f\ud83c\udffd',
        ),
    ),
    Unicode(
        'love_you_gesture_tone4',
        b'\xf0\x9f\xa4\x9f\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd1f\ud83c\udffe',
        ),
    ),
    Unicode(
        'love_you_gesture_tone5',
        b'\xf0\x9f\xa4\x9f\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd1f\ud83c\udfff',
        ),
    ),
    Unicode(
        'lower_left_ballpoint_pen',
        b'\xf0\x9f\x96\x8a\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'pen_ballpoint',
        ),
        None,
        (
            '\ud83d\udd8a️',
        ),
    ),
    Unicode(
        'lower_left_fountain_pen',
        b'\xf0\x9f\x96\x8b\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'pen_fountain',
        ),
        None,
        (
            '\ud83d\udd8b️',
        ),
    ),
    Unicode(
        'lower_left_paintbrush',
        b'\xf0\x9f\x96\x8c\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'paintbrush',
        ),
        None,
        (
            '\ud83d\udd8c️',
        ),
    ),
    Unicode(
        'luggage',
        b'\xf0\x9f\xa7\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddf3',
        ),
    ),
    Unicode(
        'm',
        b'\xe2\x93\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'circled_m',
        ),
        None,
        None,
    ),
    Unicode(
        'mage',
        b'\xf0\x9f\xa7\x99'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd9',
        ),
    ),
    Unicode(
        'mage_tone1',
        b'\xf0\x9f\xa7\x99\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd9\ud83c\udffb',
        ),
    ),
    Unicode(
        'mage_tone2',
        b'\xf0\x9f\xa7\x99\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd9\ud83c\udffc',
        ),
    ),
    Unicode(
        'mage_tone3',
        b'\xf0\x9f\xa7\x99\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd9\ud83c\udffd',
        ),
    ),
    Unicode(
        'mage_tone4',
        b'\xf0\x9f\xa7\x99\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd9\ud83c\udffe',
        ),
    ),
    Unicode(
        'mage_tone5',
        b'\xf0\x9f\xa7\x99\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd9\ud83c\udfff',
        ),
    ),
    Unicode(
        'magnet',
        b'\xf0\x9f\xa7\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddf2',
        ),
    ),
    Unicode(
        'male_sign',
        b'\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'man_artist',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x8e\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83c\udfa8',
        ),
    ),
    Unicode(
        'man_artist_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8e\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83c\udfa8',
        ),
    ),
    Unicode(
        'man_artist_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8e\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83c\udfa8',
        ),
    ),
    Unicode(
        'man_artist_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8e\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83c\udfa8',
        ),
    ),
    Unicode(
        'man_artist_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8e\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83c\udfa8',
        ),
    ),
    Unicode(
        'man_artist_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8e\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83c\udfa8',
        ),
    ),
    Unicode(
        'man_astronaut',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x9a\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83d\ude80',
        ),
    ),
    Unicode(
        'man_astronaut_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x9a\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83d\ude80',
        ),
    ),
    Unicode(
        'man_astronaut_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x9a\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83d\ude80',
        ),
    ),
    Unicode(
        'man_astronaut_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x9a\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83d\ude80',
        ),
    ),
    Unicode(
        'man_astronaut_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x9a\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83d\ude80',
        ),
    ),
    Unicode(
        'man_astronaut_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x9a\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83d\ude80',
        ),
    ),
    Unicode(
        'man_bald',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\xa6\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83e\uddb2',
        ),
    ),
    Unicode(
        'man_bald_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xa6\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83e\uddb2',
        ),
    ),
    Unicode(
        'man_bald_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xa6\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83e\uddb2',
        ),
    ),
    Unicode(
        'man_bald_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xa6\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83e\uddb2',
        ),
    ),
    Unicode(
        'man_bald_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xa6\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83e\uddb2',
        ),
    ),
    Unicode(
        'man_bald_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xa6\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83e\uddb2',
        ),
    ),
    Unicode(
        'man_biking',
        b'\xf0\x9f\x9a\xb4\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb4\u200d♂️',
        ),
    ),
    Unicode(
        'man_biking_tone1',
        b'\xf0\x9f\x9a\xb4\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb4\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_biking_tone2',
        b'\xf0\x9f\x9a\xb4\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb4\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_biking_tone3',
        b'\xf0\x9f\x9a\xb4\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb4\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_biking_tone4',
        b'\xf0\x9f\x9a\xb4\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb4\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_biking_tone5',
        b'\xf0\x9f\x9a\xb4\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb4\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_bouncing_ball',
        b'\xe2\x9b\xb9\xef\xb8\x8f\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'man_bouncing_ball_tone1',
        b'\xe2\x9b\xb9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '⛹\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_bouncing_ball_tone2',
        b'\xe2\x9b\xb9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '⛹\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_bouncing_ball_tone3',
        b'\xe2\x9b\xb9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '⛹\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_bouncing_ball_tone4',
        b'\xe2\x9b\xb9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '⛹\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_bouncing_ball_tone5',
        b'\xe2\x9b\xb9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '⛹\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_bowing',
        b'\xf0\x9f\x99\x87\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude47\u200d♂️',
        ),
    ),
    Unicode(
        'man_bowing_tone1',
        b'\xf0\x9f\x99\x87\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude47\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_bowing_tone2',
        b'\xf0\x9f\x99\x87\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude47\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_bowing_tone3',
        b'\xf0\x9f\x99\x87\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude47\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_bowing_tone4',
        b'\xf0\x9f\x99\x87\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude47\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_bowing_tone5',
        b'\xf0\x9f\x99\x87\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude47\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_cartwheeling',
        b'\xf0\x9f\xa4\xb8\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd38\u200d♂️',
        ),
    ),
    Unicode(
        'man_cartwheeling_tone1',
        b'\xf0\x9f\xa4\xb8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd38\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_cartwheeling_tone2',
        b'\xf0\x9f\xa4\xb8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd38\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_cartwheeling_tone3',
        b'\xf0\x9f\xa4\xb8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd38\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_cartwheeling_tone4',
        b'\xf0\x9f\xa4\xb8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd38\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_cartwheeling_tone5',
        b'\xf0\x9f\xa4\xb8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd38\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_climbing',
        b'\xf0\x9f\xa7\x97\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd7\u200d♂️',
        ),
    ),
    Unicode(
        'man_climbing_tone1',
        b'\xf0\x9f\xa7\x97\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd7\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_climbing_tone2',
        b'\xf0\x9f\xa7\x97\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd7\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_climbing_tone3',
        b'\xf0\x9f\xa7\x97\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd7\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_climbing_tone4',
        b'\xf0\x9f\xa7\x97\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd7\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_climbing_tone5',
        b'\xf0\x9f\xa7\x97\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd7\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_construction_worker',
        b'\xf0\x9f\x91\xb7\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc77\u200d♂️',
        ),
    ),
    Unicode(
        'man_construction_worker_tone1',
        b'\xf0\x9f\x91\xb7\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc77\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_construction_worker_tone2',
        b'\xf0\x9f\x91\xb7\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc77\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_construction_worker_tone3',
        b'\xf0\x9f\x91\xb7\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc77\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_construction_worker_tone4',
        b'\xf0\x9f\x91\xb7\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc77\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_construction_worker_tone5',
        b'\xf0\x9f\x91\xb7\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc77\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_cook',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x8d\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83c\udf73',
        ),
    ),
    Unicode(
        'man_cook_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8d\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83c\udf73',
        ),
    ),
    Unicode(
        'man_cook_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8d\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83c\udf73',
        ),
    ),
    Unicode(
        'man_cook_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8d\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83c\udf73',
        ),
    ),
    Unicode(
        'man_cook_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8d\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83c\udf73',
        ),
    ),
    Unicode(
        'man_cook_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8d\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83c\udf73',
        ),
    ),
    Unicode(
        'man_curly_haired',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\xa6\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83e\uddb1',
        ),
    ),
    Unicode(
        'man_curly_haired_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xa6\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83e\uddb1',
        ),
    ),
    Unicode(
        'man_curly_haired_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xa6\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83e\uddb1',
        ),
    ),
    Unicode(
        'man_curly_haired_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xa6\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83e\uddb1',
        ),
    ),
    Unicode(
        'man_curly_haired_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xa6\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83e\uddb1',
        ),
    ),
    Unicode(
        'man_curly_haired_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xa6\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83e\uddb1',
        ),
    ),
    Unicode(
        'man_detective',
        b'\xf0\x9f\x95\xb5\xef\xb8\x8f\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd75️\u200d♂️',
        ),
    ),
    Unicode(
        'man_detective_tone1',
        b'\xf0\x9f\x95\xb5\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd75\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_detective_tone2',
        b'\xf0\x9f\x95\xb5\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd75\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_detective_tone3',
        b'\xf0\x9f\x95\xb5\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd75\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_detective_tone4',
        b'\xf0\x9f\x95\xb5\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd75\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_detective_tone5',
        b'\xf0\x9f\x95\xb5\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd75\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_elf',
        b'\xf0\x9f\xa7\x9d\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddd\u200d♂️',
        ),
    ),
    Unicode(
        'man_elf_tone1',
        b'\xf0\x9f\xa7\x9d\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddd\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_elf_tone2',
        b'\xf0\x9f\xa7\x9d\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddd\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_elf_tone3',
        b'\xf0\x9f\xa7\x9d\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddd\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_elf_tone4',
        b'\xf0\x9f\xa7\x9d\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddd\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_elf_tone5',
        b'\xf0\x9f\xa7\x9d\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddd\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_facepalming',
        b'\xf0\x9f\xa4\xa6\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd26\u200d♂️',
        ),
    ),
    Unicode(
        'man_facepalming_tone1',
        b'\xf0\x9f\xa4\xa6\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd26\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_facepalming_tone2',
        b'\xf0\x9f\xa4\xa6\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd26\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_facepalming_tone3',
        b'\xf0\x9f\xa4\xa6\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd26\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_facepalming_tone4',
        b'\xf0\x9f\xa4\xa6\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd26\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_facepalming_tone5',
        b'\xf0\x9f\xa4\xa6\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd26\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_factory_worker',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x8f\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83c\udfed',
        ),
    ),
    Unicode(
        'man_factory_worker_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8f\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83c\udfed',
        ),
    ),
    Unicode(
        'man_factory_worker_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8f\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83c\udfed',
        ),
    ),
    Unicode(
        'man_factory_worker_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8f\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83c\udfed',
        ),
    ),
    Unicode(
        'man_factory_worker_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8f\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83c\udfed',
        ),
    ),
    Unicode(
        'man_factory_worker_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8f\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83c\udfed',
        ),
    ),
    Unicode(
        'man_fairy',
        b'\xf0\x9f\xa7\x9a\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddda\u200d♂️',
        ),
    ),
    Unicode(
        'man_fairy_tone1',
        b'\xf0\x9f\xa7\x9a\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddda\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_fairy_tone2',
        b'\xf0\x9f\xa7\x9a\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddda\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_fairy_tone3',
        b'\xf0\x9f\xa7\x9a\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddda\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_fairy_tone4',
        b'\xf0\x9f\xa7\x9a\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddda\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_fairy_tone5',
        b'\xf0\x9f\xa7\x9a\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddda\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_farmer',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x8c\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83c\udf3e',
        ),
    ),
    Unicode(
        'man_farmer_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8c\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83c\udf3e',
        ),
    ),
    Unicode(
        'man_farmer_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8c\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83c\udf3e',
        ),
    ),
    Unicode(
        'man_farmer_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8c\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83c\udf3e',
        ),
    ),
    Unicode(
        'man_farmer_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8c\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83c\udf3e',
        ),
    ),
    Unicode(
        'man_farmer_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8c\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83c\udf3e',
        ),
    ),
    Unicode(
        'man_firefighter',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x9a\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83d\ude92',
        ),
    ),
    Unicode(
        'man_firefighter_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x9a\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83d\ude92',
        ),
    ),
    Unicode(
        'man_firefighter_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x9a\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83d\ude92',
        ),
    ),
    Unicode(
        'man_firefighter_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x9a\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83d\ude92',
        ),
    ),
    Unicode(
        'man_firefighter_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x9a\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83d\ude92',
        ),
    ),
    Unicode(
        'man_firefighter_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x9a\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83d\ude92',
        ),
    ),
    Unicode(
        'man_frowning',
        b'\xf0\x9f\x99\x8d\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4d\u200d♂️',
        ),
    ),
    Unicode(
        'man_frowning_tone1',
        b'\xf0\x9f\x99\x8d\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4d\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_frowning_tone2',
        b'\xf0\x9f\x99\x8d\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4d\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_frowning_tone3',
        b'\xf0\x9f\x99\x8d\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4d\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_frowning_tone4',
        b'\xf0\x9f\x99\x8d\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4d\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_frowning_tone5',
        b'\xf0\x9f\x99\x8d\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4d\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_genie',
        b'\xf0\x9f\xa7\x9e\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddde\u200d♂️',
        ),
    ),
    Unicode(
        'man_gesturing_no',
        b'\xf0\x9f\x99\x85\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude45\u200d♂️',
        ),
    ),
    Unicode(
        'man_gesturing_no_tone1',
        b'\xf0\x9f\x99\x85\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude45\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_gesturing_no_tone2',
        b'\xf0\x9f\x99\x85\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude45\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_gesturing_no_tone3',
        b'\xf0\x9f\x99\x85\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude45\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_gesturing_no_tone4',
        b'\xf0\x9f\x99\x85\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude45\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_gesturing_no_tone5',
        b'\xf0\x9f\x99\x85\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude45\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_gesturing_ok',
        b'\xf0\x9f\x99\x86\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude46\u200d♂️',
        ),
    ),
    Unicode(
        'man_gesturing_ok_tone1',
        b'\xf0\x9f\x99\x86\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude46\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_gesturing_ok_tone2',
        b'\xf0\x9f\x99\x86\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude46\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_gesturing_ok_tone3',
        b'\xf0\x9f\x99\x86\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude46\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_gesturing_ok_tone4',
        b'\xf0\x9f\x99\x86\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude46\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_gesturing_ok_tone5',
        b'\xf0\x9f\x99\x86\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude46\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_getting_face_massage',
        b'\xf0\x9f\x92\x86\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc86\u200d♂️',
        ),
    ),
    Unicode(
        'man_getting_face_massage_tone1',
        b'\xf0\x9f\x92\x86\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc86\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_getting_face_massage_tone2',
        b'\xf0\x9f\x92\x86\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc86\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_getting_face_massage_tone3',
        b'\xf0\x9f\x92\x86\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc86\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_getting_face_massage_tone4',
        b'\xf0\x9f\x92\x86\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc86\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_getting_face_massage_tone5',
        b'\xf0\x9f\x92\x86\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc86\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_getting_haircut',
        b'\xf0\x9f\x92\x87\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc87\u200d♂️',
        ),
    ),
    Unicode(
        'man_getting_haircut_tone1',
        b'\xf0\x9f\x92\x87\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc87\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_getting_haircut_tone2',
        b'\xf0\x9f\x92\x87\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc87\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_getting_haircut_tone3',
        b'\xf0\x9f\x92\x87\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc87\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_getting_haircut_tone4',
        b'\xf0\x9f\x92\x87\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc87\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_getting_haircut_tone5',
        b'\xf0\x9f\x92\x87\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc87\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_golfing',
        b'\xf0\x9f\x8f\x8c\xef\xb8\x8f\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcc️\u200d♂️',
        ),
    ),
    Unicode(
        'man_golfing_tone1',
        b'\xf0\x9f\x8f\x8c\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcc\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_golfing_tone2',
        b'\xf0\x9f\x8f\x8c\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcc\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_golfing_tone3',
        b'\xf0\x9f\x8f\x8c\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcc\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_golfing_tone4',
        b'\xf0\x9f\x8f\x8c\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcc\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_golfing_tone5',
        b'\xf0\x9f\x8f\x8c\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcc\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_guard',
        b'\xf0\x9f\x92\x82\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc82\u200d♂️',
        ),
    ),
    Unicode(
        'man_guard_tone1',
        b'\xf0\x9f\x92\x82\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc82\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_guard_tone2',
        b'\xf0\x9f\x92\x82\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc82\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_guard_tone3',
        b'\xf0\x9f\x92\x82\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc82\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_guard_tone4',
        b'\xf0\x9f\x92\x82\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc82\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_guard_tone5',
        b'\xf0\x9f\x92\x82\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc82\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_health_worker',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xe2\x9a\x95\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d⚕️',
        ),
    ),
    Unicode(
        'man_health_worker_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9a\x95\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d⚕️',
        ),
    ),
    Unicode(
        'man_health_worker_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9a\x95\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d⚕️',
        ),
    ),
    Unicode(
        'man_health_worker_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9a\x95\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d⚕️',
        ),
    ),
    Unicode(
        'man_health_worker_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9a\x95\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d⚕️',
        ),
    ),
    Unicode(
        'man_health_worker_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9a\x95\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d⚕️',
        ),
    ),
    Unicode(
        'man_in_lotus_position',
        b'\xf0\x9f\xa7\x98\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd8\u200d♂️',
        ),
    ),
    Unicode(
        'man_in_lotus_position_tone1',
        b'\xf0\x9f\xa7\x98\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd8\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_in_lotus_position_tone2',
        b'\xf0\x9f\xa7\x98\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd8\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_in_lotus_position_tone3',
        b'\xf0\x9f\xa7\x98\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd8\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_in_lotus_position_tone4',
        b'\xf0\x9f\xa7\x98\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd8\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_in_lotus_position_tone5',
        b'\xf0\x9f\xa7\x98\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd8\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_in_manual_wheelchair',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\xa6\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83e\uddbd',
        ),
    ),
    Unicode(
        'man_in_manual_wheelchair_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xa6\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83e\uddbd',
        ),
    ),
    Unicode(
        'man_in_manual_wheelchair_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xa6\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83e\uddbd',
        ),
    ),
    Unicode(
        'man_in_manual_wheelchair_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xa6\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83e\uddbd',
        ),
    ),
    Unicode(
        'man_in_manual_wheelchair_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xa6\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83e\uddbd',
        ),
    ),
    Unicode(
        'man_in_manual_wheelchair_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xa6\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83e\uddbd',
        ),
    ),
    Unicode(
        'man_in_motorized_wheelchair',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\xa6\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83e\uddbc',
        ),
    ),
    Unicode(
        'man_in_motorized_wheelchair_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xa6\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83e\uddbc',
        ),
    ),
    Unicode(
        'man_in_motorized_wheelchair_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xa6\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83e\uddbc',
        ),
    ),
    Unicode(
        'man_in_motorized_wheelchair_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xa6\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83e\uddbc',
        ),
    ),
    Unicode(
        'man_in_motorized_wheelchair_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xa6\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83e\uddbc',
        ),
    ),
    Unicode(
        'man_in_motorized_wheelchair_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xa6\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83e\uddbc',
        ),
    ),
    Unicode(
        'man_in_steamy_room',
        b'\xf0\x9f\xa7\x96\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd6\u200d♂️',
        ),
    ),
    Unicode(
        'man_in_steamy_room_tone1',
        b'\xf0\x9f\xa7\x96\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd6\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_in_steamy_room_tone2',
        b'\xf0\x9f\xa7\x96\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd6\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_in_steamy_room_tone3',
        b'\xf0\x9f\xa7\x96\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd6\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_in_steamy_room_tone4',
        b'\xf0\x9f\xa7\x96\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd6\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_in_steamy_room_tone5',
        b'\xf0\x9f\xa7\x96\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd6\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_judge',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xe2\x9a\x96\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d⚖️',
        ),
    ),
    Unicode(
        'man_judge_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9a\x96\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d⚖️',
        ),
    ),
    Unicode(
        'man_judge_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9a\x96\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d⚖️',
        ),
    ),
    Unicode(
        'man_judge_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9a\x96\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d⚖️',
        ),
    ),
    Unicode(
        'man_judge_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9a\x96\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d⚖️',
        ),
    ),
    Unicode(
        'man_judge_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9a\x96\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d⚖️',
        ),
    ),
    Unicode(
        'man_juggling',
        b'\xf0\x9f\xa4\xb9\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd39\u200d♂️',
        ),
    ),
    Unicode(
        'man_juggling_tone1',
        b'\xf0\x9f\xa4\xb9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd39\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_juggling_tone2',
        b'\xf0\x9f\xa4\xb9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd39\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_juggling_tone3',
        b'\xf0\x9f\xa4\xb9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd39\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_juggling_tone4',
        b'\xf0\x9f\xa4\xb9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd39\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_juggling_tone5',
        b'\xf0\x9f\xa4\xb9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd39\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_kneeling',
        b'\xf0\x9f\xa7\x8e\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddce\u200d♂️',
        ),
    ),
    Unicode(
        'man_kneeling_tone1',
        b'\xf0\x9f\xa7\x8e\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddce\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_kneeling_tone2',
        b'\xf0\x9f\xa7\x8e\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddce\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_kneeling_tone3',
        b'\xf0\x9f\xa7\x8e\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddce\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_kneeling_tone4',
        b'\xf0\x9f\xa7\x8e\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddce\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_kneeling_tone5',
        b'\xf0\x9f\xa7\x8e\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddce\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_lifting_weights',
        b'\xf0\x9f\x8f\x8b\xef\xb8\x8f\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcb️\u200d♂️',
        ),
    ),
    Unicode(
        'man_lifting_weights_tone1',
        b'\xf0\x9f\x8f\x8b\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcb\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_lifting_weights_tone2',
        b'\xf0\x9f\x8f\x8b\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcb\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_lifting_weights_tone3',
        b'\xf0\x9f\x8f\x8b\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcb\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_lifting_weights_tone4',
        b'\xf0\x9f\x8f\x8b\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcb\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_lifting_weights_tone5',
        b'\xf0\x9f\x8f\x8b\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcb\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_mage',
        b'\xf0\x9f\xa7\x99\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd9\u200d♂️',
        ),
    ),
    Unicode(
        'man_mage_tone1',
        b'\xf0\x9f\xa7\x99\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd9\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_mage_tone2',
        b'\xf0\x9f\xa7\x99\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd9\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_mage_tone3',
        b'\xf0\x9f\xa7\x99\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd9\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_mage_tone4',
        b'\xf0\x9f\xa7\x99\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd9\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_mage_tone5',
        b'\xf0\x9f\xa7\x99\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd9\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_mechanic',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x94\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83d\udd27',
        ),
    ),
    Unicode(
        'man_mechanic_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x94\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27',
        ),
    ),
    Unicode(
        'man_mechanic_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x94\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83d\udd27',
        ),
    ),
    Unicode(
        'man_mechanic_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x94\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83d\udd27',
        ),
    ),
    Unicode(
        'man_mechanic_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x94\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83d\udd27',
        ),
    ),
    Unicode(
        'man_mechanic_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x94\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83d\udd27',
        ),
    ),
    Unicode(
        'man_mountain_biking',
        b'\xf0\x9f\x9a\xb5\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb5\u200d♂️',
        ),
    ),
    Unicode(
        'man_mountain_biking_tone1',
        b'\xf0\x9f\x9a\xb5\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb5\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_mountain_biking_tone2',
        b'\xf0\x9f\x9a\xb5\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb5\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_mountain_biking_tone3',
        b'\xf0\x9f\x9a\xb5\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb5\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_mountain_biking_tone4',
        b'\xf0\x9f\x9a\xb5\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb5\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_mountain_biking_tone5',
        b'\xf0\x9f\x9a\xb5\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb5\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_office_worker',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x92\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83d\udcbc',
        ),
    ),
    Unicode(
        'man_office_worker_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x92\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83d\udcbc',
        ),
    ),
    Unicode(
        'man_office_worker_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x92\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83d\udcbc',
        ),
    ),
    Unicode(
        'man_office_worker_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x92\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83d\udcbc',
        ),
    ),
    Unicode(
        'man_office_worker_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x92\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83d\udcbc',
        ),
    ),
    Unicode(
        'man_office_worker_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x92\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83d\udcbc',
        ),
    ),
    Unicode(
        'man_pilot',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xe2\x9c\x88\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d✈️',
        ),
    ),
    Unicode(
        'man_pilot_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9c\x88\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d✈️',
        ),
    ),
    Unicode(
        'man_pilot_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9c\x88\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d✈️',
        ),
    ),
    Unicode(
        'man_pilot_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9c\x88\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d✈️',
        ),
    ),
    Unicode(
        'man_pilot_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9c\x88\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d✈️',
        ),
    ),
    Unicode(
        'man_pilot_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9c\x88\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d✈️',
        ),
    ),
    Unicode(
        'man_playing_handball',
        b'\xf0\x9f\xa4\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3e\u200d♂️',
        ),
    ),
    Unicode(
        'man_playing_handball_tone1',
        b'\xf0\x9f\xa4\xbe\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3e\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_playing_handball_tone2',
        b'\xf0\x9f\xa4\xbe\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3e\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_playing_handball_tone3',
        b'\xf0\x9f\xa4\xbe\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3e\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_playing_handball_tone4',
        b'\xf0\x9f\xa4\xbe\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3e\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_playing_handball_tone5',
        b'\xf0\x9f\xa4\xbe\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3e\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_playing_water_polo',
        b'\xf0\x9f\xa4\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3d\u200d♂️',
        ),
    ),
    Unicode(
        'man_playing_water_polo_tone1',
        b'\xf0\x9f\xa4\xbd\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3d\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_playing_water_polo_tone2',
        b'\xf0\x9f\xa4\xbd\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3d\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_playing_water_polo_tone3',
        b'\xf0\x9f\xa4\xbd\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3d\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_playing_water_polo_tone4',
        b'\xf0\x9f\xa4\xbd\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3d\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_playing_water_polo_tone5',
        b'\xf0\x9f\xa4\xbd\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3d\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_police_officer',
        b'\xf0\x9f\x91\xae\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6e\u200d♂️',
        ),
    ),
    Unicode(
        'man_police_officer_tone1',
        b'\xf0\x9f\x91\xae\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6e\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_police_officer_tone2',
        b'\xf0\x9f\x91\xae\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6e\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_police_officer_tone3',
        b'\xf0\x9f\x91\xae\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6e\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_police_officer_tone4',
        b'\xf0\x9f\x91\xae\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6e\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_police_officer_tone5',
        b'\xf0\x9f\x91\xae\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6e\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_pouting',
        b'\xf0\x9f\x99\x8e\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4e\u200d♂️',
        ),
    ),
    Unicode(
        'man_pouting_tone1',
        b'\xf0\x9f\x99\x8e\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4e\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_pouting_tone2',
        b'\xf0\x9f\x99\x8e\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4e\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_pouting_tone3',
        b'\xf0\x9f\x99\x8e\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4e\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_pouting_tone4',
        b'\xf0\x9f\x99\x8e\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4e\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_pouting_tone5',
        b'\xf0\x9f\x99\x8e\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4e\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_raising_hand',
        b'\xf0\x9f\x99\x8b\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4b\u200d♂️',
        ),
    ),
    Unicode(
        'man_raising_hand_tone1',
        b'\xf0\x9f\x99\x8b\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4b\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_raising_hand_tone2',
        b'\xf0\x9f\x99\x8b\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4b\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_raising_hand_tone3',
        b'\xf0\x9f\x99\x8b\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4b\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_raising_hand_tone4',
        b'\xf0\x9f\x99\x8b\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4b\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_raising_hand_tone5',
        b'\xf0\x9f\x99\x8b\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4b\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_red_haired',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\xa6\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83e\uddb0',
        ),
    ),
    Unicode(
        'man_red_haired_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xa6\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83e\uddb0',
        ),
    ),
    Unicode(
        'man_red_haired_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xa6\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83e\uddb0',
        ),
    ),
    Unicode(
        'man_red_haired_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xa6\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83e\uddb0',
        ),
    ),
    Unicode(
        'man_red_haired_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xa6\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83e\uddb0',
        ),
    ),
    Unicode(
        'man_red_haired_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xa6\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83e\uddb0',
        ),
    ),
    Unicode(
        'man_rowing_boat',
        b'\xf0\x9f\x9a\xa3\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udea3\u200d♂️',
        ),
    ),
    Unicode(
        'man_rowing_boat_tone1',
        b'\xf0\x9f\x9a\xa3\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udea3\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_rowing_boat_tone2',
        b'\xf0\x9f\x9a\xa3\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udea3\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_rowing_boat_tone3',
        b'\xf0\x9f\x9a\xa3\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udea3\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_rowing_boat_tone4',
        b'\xf0\x9f\x9a\xa3\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udea3\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_rowing_boat_tone5',
        b'\xf0\x9f\x9a\xa3\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udea3\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_running',
        b'\xf0\x9f\x8f\x83\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc3\u200d♂️',
        ),
    ),
    Unicode(
        'man_running_tone1',
        b'\xf0\x9f\x8f\x83\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc3\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_running_tone2',
        b'\xf0\x9f\x8f\x83\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc3\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_running_tone3',
        b'\xf0\x9f\x8f\x83\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc3\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_running_tone4',
        b'\xf0\x9f\x8f\x83\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc3\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_running_tone5',
        b'\xf0\x9f\x8f\x83\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc3\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_scientist',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x94\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83d\udd2c',
        ),
    ),
    Unicode(
        'man_scientist_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x94\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd2c',
        ),
    ),
    Unicode(
        'man_scientist_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x94\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83d\udd2c',
        ),
    ),
    Unicode(
        'man_scientist_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x94\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83d\udd2c',
        ),
    ),
    Unicode(
        'man_scientist_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x94\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83d\udd2c',
        ),
    ),
    Unicode(
        'man_scientist_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x94\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83d\udd2c',
        ),
    ),
    Unicode(
        'man_shrugging',
        b'\xf0\x9f\xa4\xb7\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd37\u200d♂️',
        ),
    ),
    Unicode(
        'man_shrugging_tone1',
        b'\xf0\x9f\xa4\xb7\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd37\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_shrugging_tone2',
        b'\xf0\x9f\xa4\xb7\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd37\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_shrugging_tone3',
        b'\xf0\x9f\xa4\xb7\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd37\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_shrugging_tone4',
        b'\xf0\x9f\xa4\xb7\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd37\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_shrugging_tone5',
        b'\xf0\x9f\xa4\xb7\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd37\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_singer',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x8e\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83c\udfa4',
        ),
    ),
    Unicode(
        'man_singer_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8e\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83c\udfa4',
        ),
    ),
    Unicode(
        'man_singer_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8e\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83c\udfa4',
        ),
    ),
    Unicode(
        'man_singer_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8e\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83c\udfa4',
        ),
    ),
    Unicode(
        'man_singer_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8e\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83c\udfa4',
        ),
    ),
    Unicode(
        'man_singer_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8e\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83c\udfa4',
        ),
    ),
    Unicode(
        'man_standing',
        b'\xf0\x9f\xa7\x8d\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcd\u200d♂️',
        ),
    ),
    Unicode(
        'man_standing_tone1',
        b'\xf0\x9f\xa7\x8d\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcd\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_standing_tone2',
        b'\xf0\x9f\xa7\x8d\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcd\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_standing_tone3',
        b'\xf0\x9f\xa7\x8d\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcd\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_standing_tone4',
        b'\xf0\x9f\xa7\x8d\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcd\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_standing_tone5',
        b'\xf0\x9f\xa7\x8d\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcd\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_student',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x8e\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83c\udf93',
        ),
    ),
    Unicode(
        'man_student_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8e\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83c\udf93',
        ),
    ),
    Unicode(
        'man_student_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8e\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83c\udf93',
        ),
    ),
    Unicode(
        'man_student_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8e\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83c\udf93',
        ),
    ),
    Unicode(
        'man_student_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8e\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83c\udf93',
        ),
    ),
    Unicode(
        'man_student_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8e\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83c\udf93',
        ),
    ),
    Unicode(
        'man_superhero',
        b'\xf0\x9f\xa6\xb8\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb8\u200d♂️',
        ),
    ),
    Unicode(
        'man_superhero_tone1',
        b'\xf0\x9f\xa6\xb8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb8\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_superhero_tone2',
        b'\xf0\x9f\xa6\xb8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb8\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_superhero_tone3',
        b'\xf0\x9f\xa6\xb8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb8\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_superhero_tone4',
        b'\xf0\x9f\xa6\xb8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb8\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_superhero_tone5',
        b'\xf0\x9f\xa6\xb8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb8\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_supervillain',
        b'\xf0\x9f\xa6\xb9\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb9\u200d♂️',
        ),
    ),
    Unicode(
        'man_supervillain_tone1',
        b'\xf0\x9f\xa6\xb9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb9\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_supervillain_tone2',
        b'\xf0\x9f\xa6\xb9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb9\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_supervillain_tone3',
        b'\xf0\x9f\xa6\xb9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb9\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_supervillain_tone4',
        b'\xf0\x9f\xa6\xb9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb9\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_supervillain_tone5',
        b'\xf0\x9f\xa6\xb9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb9\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_surfing',
        b'\xf0\x9f\x8f\x84\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc4\u200d♂️',
        ),
    ),
    Unicode(
        'man_surfing_tone1',
        b'\xf0\x9f\x8f\x84\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc4\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_surfing_tone2',
        b'\xf0\x9f\x8f\x84\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc4\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_surfing_tone3',
        b'\xf0\x9f\x8f\x84\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc4\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_surfing_tone4',
        b'\xf0\x9f\x8f\x84\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc4\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_surfing_tone5',
        b'\xf0\x9f\x8f\x84\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc4\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_swimming',
        b'\xf0\x9f\x8f\x8a\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfca\u200d♂️',
        ),
    ),
    Unicode(
        'man_swimming_tone1',
        b'\xf0\x9f\x8f\x8a\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfca\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_swimming_tone2',
        b'\xf0\x9f\x8f\x8a\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfca\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_swimming_tone3',
        b'\xf0\x9f\x8f\x8a\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfca\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_swimming_tone4',
        b'\xf0\x9f\x8f\x8a\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfca\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_swimming_tone5',
        b'\xf0\x9f\x8f\x8a\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfca\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_teacher',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x8f\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83c\udfeb',
        ),
    ),
    Unicode(
        'man_teacher_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8f\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83c\udfeb',
        ),
    ),
    Unicode(
        'man_teacher_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8f\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83c\udfeb',
        ),
    ),
    Unicode(
        'man_teacher_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8f\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83c\udfeb',
        ),
    ),
    Unicode(
        'man_teacher_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8f\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83c\udfeb',
        ),
    ),
    Unicode(
        'man_teacher_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8f\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83c\udfeb',
        ),
    ),
    Unicode(
        'man_technologist',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x92\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83d\udcbb',
        ),
    ),
    Unicode(
        'man_technologist_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x92\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83d\udcbb',
        ),
    ),
    Unicode(
        'man_technologist_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x92\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83d\udcbb',
        ),
    ),
    Unicode(
        'man_technologist_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x92\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83d\udcbb',
        ),
    ),
    Unicode(
        'man_technologist_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x92\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83d\udcbb',
        ),
    ),
    Unicode(
        'man_technologist_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x92\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83d\udcbb',
        ),
    ),
    Unicode(
        'man_tipping_hand',
        b'\xf0\x9f\x92\x81\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc81\u200d♂️',
        ),
    ),
    Unicode(
        'man_tipping_hand_tone1',
        b'\xf0\x9f\x92\x81\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc81\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_tipping_hand_tone2',
        b'\xf0\x9f\x92\x81\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc81\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_tipping_hand_tone3',
        b'\xf0\x9f\x92\x81\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc81\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_tipping_hand_tone4',
        b'\xf0\x9f\x92\x81\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc81\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_tipping_hand_tone5',
        b'\xf0\x9f\x92\x81\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc81\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_vampire',
        b'\xf0\x9f\xa7\x9b\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddb\u200d♂️',
        ),
    ),
    Unicode(
        'man_vampire_tone1',
        b'\xf0\x9f\xa7\x9b\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddb\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_vampire_tone2',
        b'\xf0\x9f\xa7\x9b\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddb\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_vampire_tone3',
        b'\xf0\x9f\xa7\x9b\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddb\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_vampire_tone4',
        b'\xf0\x9f\xa7\x9b\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddb\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_vampire_tone5',
        b'\xf0\x9f\xa7\x9b\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddb\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_walking',
        b'\xf0\x9f\x9a\xb6\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb6\u200d♂️',
        ),
    ),
    Unicode(
        'man_walking_tone1',
        b'\xf0\x9f\x9a\xb6\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb6\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_walking_tone2',
        b'\xf0\x9f\x9a\xb6\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb6\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_walking_tone3',
        b'\xf0\x9f\x9a\xb6\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb6\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_walking_tone4',
        b'\xf0\x9f\x9a\xb6\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb6\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_walking_tone5',
        b'\xf0\x9f\x9a\xb6\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb6\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_wearing_turban',
        b'\xf0\x9f\x91\xb3\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc73\u200d♂️',
        ),
    ),
    Unicode(
        'man_wearing_turban_tone1',
        b'\xf0\x9f\x91\xb3\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc73\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_wearing_turban_tone2',
        b'\xf0\x9f\x91\xb3\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc73\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_wearing_turban_tone3',
        b'\xf0\x9f\x91\xb3\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc73\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'man_wearing_turban_tone4',
        b'\xf0\x9f\x91\xb3\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc73\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_wearing_turban_tone5',
        b'\xf0\x9f\x91\xb3\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc73\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'man_white_haired',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\xa6\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83e\uddb3',
        ),
    ),
    Unicode(
        'man_white_haired_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xa6\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83e\uddb3',
        ),
    ),
    Unicode(
        'man_white_haired_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xa6\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83e\uddb3',
        ),
    ),
    Unicode(
        'man_white_haired_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xa6\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83e\uddb3',
        ),
    ),
    Unicode(
        'man_white_haired_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xa6\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83e\uddb3',
        ),
    ),
    Unicode(
        'man_white_haired_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xa6\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83e\uddb3',
        ),
    ),
    Unicode(
        'man_with_probing_cane',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\xa6\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83e\uddaf',
        ),
    ),
    Unicode(
        'man_with_probing_cane_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xa6\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83e\uddaf',
        ),
    ),
    Unicode(
        'man_with_probing_cane_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xa6\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83e\uddaf',
        ),
    ),
    Unicode(
        'man_with_probing_cane_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xa6\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83e\uddaf',
        ),
    ),
    Unicode(
        'man_with_probing_cane_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xa6\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83e\uddaf',
        ),
    ),
    Unicode(
        'man_with_probing_cane_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xa6\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83e\uddaf',
        ),
    ),
    Unicode(
        'man_zombie',
        b'\xf0\x9f\xa7\x9f\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddf\u200d♂️',
        ),
    ),
    Unicode(
        'mango',
        b'\xf0\x9f\xa5\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd6d',
        ),
    ),
    Unicode(
        'manual_wheelchair',
        b'\xf0\x9f\xa6\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddbd',
        ),
    ),
    Unicode(
        'map',
        b'\xf0\x9f\x97\xba\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'world_map',
        ),
        None,
        (
            '\ud83d\uddfa️',
        ),
    ),
    Unicode(
        'mate',
        b'\xf0\x9f\xa7\x89'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddc9',
        ),
    ),
    Unicode(
        'mechanical_arm',
        b'\xf0\x9f\xa6\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddbe',
        ),
    ),
    Unicode(
        'mechanical_leg',
        b'\xf0\x9f\xa6\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddbf',
        ),
    ),
    Unicode(
        'medical_symbol',
        b'\xe2\x9a\x95\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'men_with_bunny_ears_partying',
        b'\xf0\x9f\x91\xaf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6f\u200d♂️',
        ),
    ),
    Unicode(
        'men_wrestling',
        b'\xf0\x9f\xa4\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3c\u200d♂️',
        ),
    ),
    Unicode(
        'mermaid',
        b'\xf0\x9f\xa7\x9c\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddc\u200d♀️',
        ),
    ),
    Unicode(
        'mermaid_tone1',
        b'\xf0\x9f\xa7\x9c\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddc\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'mermaid_tone2',
        b'\xf0\x9f\xa7\x9c\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddc\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'mermaid_tone3',
        b'\xf0\x9f\xa7\x9c\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddc\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'mermaid_tone4',
        b'\xf0\x9f\xa7\x9c\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddc\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'mermaid_tone5',
        b'\xf0\x9f\xa7\x9c\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddc\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'merman',
        b'\xf0\x9f\xa7\x9c\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddc\u200d♂️',
        ),
    ),
    Unicode(
        'merman_tone1',
        b'\xf0\x9f\xa7\x9c\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddc\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'merman_tone2',
        b'\xf0\x9f\xa7\x9c\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddc\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'merman_tone3',
        b'\xf0\x9f\xa7\x9c\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddc\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'merman_tone4',
        b'\xf0\x9f\xa7\x9c\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddc\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'merman_tone5',
        b'\xf0\x9f\xa7\x9c\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddc\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'merperson',
        b'\xf0\x9f\xa7\x9c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddc',
        ),
    ),
    Unicode(
        'merperson_tone1',
        b'\xf0\x9f\xa7\x9c\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddc\ud83c\udffb',
        ),
    ),
    Unicode(
        'merperson_tone2',
        b'\xf0\x9f\xa7\x9c\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddc\ud83c\udffc',
        ),
    ),
    Unicode(
        'merperson_tone3',
        b'\xf0\x9f\xa7\x9c\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddc\ud83c\udffd',
        ),
    ),
    Unicode(
        'merperson_tone4',
        b'\xf0\x9f\xa7\x9c\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddc\ud83c\udffe',
        ),
    ),
    Unicode(
        'merperson_tone5',
        b'\xf0\x9f\xa7\x9c\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddc\ud83c\udfff',
        ),
    ),
    Unicode(
        'microbe',
        b'\xf0\x9f\xa6\xa0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udda0',
        ),
    ),
    Unicode(
        'microphone2',
        b'\xf0\x9f\x8e\x99\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'studio_microphone',
        ),
        None,
        (
            '\ud83c\udf99️',
        ),
    ),
    Unicode(
        'military_medal',
        b'\xf0\x9f\x8e\x96\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf96️',
        ),
    ),
    Unicode(
        'moon_cake',
        b'\xf0\x9f\xa5\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd6e',
        ),
    ),
    Unicode(
        'mosquito',
        b'\xf0\x9f\xa6\x9f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd9f',
        ),
    ),
    Unicode(
        'motorboat',
        b'\xf0\x9f\x9b\xa5\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udee5️',
        ),
    ),
    Unicode(
        'motorcycle',
        b'\xf0\x9f\x8f\x8d\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'racing_motorcycle',
        ),
        None,
        (
            '\ud83c\udfcd️',
        ),
    ),
    Unicode(
        'motorized_wheelchair',
        b'\xf0\x9f\xa6\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddbc',
        ),
    ),
    Unicode(
        'motorway',
        b'\xf0\x9f\x9b\xa3\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udee3️',
        ),
    ),
    Unicode(
        'mountain',
        b'\xe2\x9b\xb0\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'mountain_snow',
        b'\xf0\x9f\x8f\x94\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'snow_capped_mountain',
        ),
        None,
        (
            '\ud83c\udfd4️',
        ),
    ),
    Unicode(
        'mouse_three_button',
        b'\xf0\x9f\x96\xb1\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'three_button_mouse',
        ),
        None,
        (
            '\ud83d\uddb1️',
        ),
    ),
    Unicode(
        'national_park',
        b'\xf0\x9f\x8f\x9e\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'park',
        ),
        None,
        (
            '\ud83c\udfde️',
        ),
    ),
    Unicode(
        'nazar_amulet',
        b'\xf0\x9f\xa7\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddff',
        ),
    ),
    Unicode(
        'newspaper2',
        b'\xf0\x9f\x97\x9e\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'rolled_up_newspaper',
        ),
        None,
        (
            '\ud83d\uddde️',
        ),
    ),
    Unicode(
        'next_track',
        b'\xe2\x8f\xad\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'track_next',
        ),
        None,
        None,
    ),
    Unicode(
        'nine',
        b'9\xef\xb8\x8f\xe2\x83\xa3'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'notepad_spiral',
        b'\xf0\x9f\x97\x92\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'spiral_note_pad',
        ),
        None,
        (
            '\ud83d\uddd2️',
        ),
    ),
    Unicode(
        'o2',
        b'\xf0\x9f\x85\xbe\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udd7e️',
        ),
    ),
    Unicode(
        'oil',
        b'\xf0\x9f\x9b\xa2\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'oil_drum',
        ),
        None,
        (
            '\ud83d\udee2️',
        ),
    ),
    Unicode(
        'older_adult',
        b'\xf0\x9f\xa7\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd3',
        ),
    ),
    Unicode(
        'older_adult_tone1',
        b'\xf0\x9f\xa7\x93\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd3\ud83c\udffb',
        ),
    ),
    Unicode(
        'older_adult_tone2',
        b'\xf0\x9f\xa7\x93\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd3\ud83c\udffc',
        ),
    ),
    Unicode(
        'older_adult_tone3',
        b'\xf0\x9f\xa7\x93\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd3\ud83c\udffd',
        ),
    ),
    Unicode(
        'older_adult_tone4',
        b'\xf0\x9f\xa7\x93\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd3\ud83c\udffe',
        ),
    ),
    Unicode(
        'older_adult_tone5',
        b'\xf0\x9f\xa7\x93\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd3\ud83c\udfff',
        ),
    ),
    Unicode(
        'om_symbol',
        b'\xf0\x9f\x95\x89\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd49️',
        ),
    ),
    Unicode(
        'one',
        b'1\xef\xb8\x8f\xe2\x83\xa3'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'one_piece_swimsuit',
        b'\xf0\x9f\xa9\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude71',
        ),
    ),
    Unicode(
        'onion',
        b'\xf0\x9f\xa7\x85'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddc5',
        ),
    ),
    Unicode(
        'orange_circle',
        b'\xf0\x9f\x9f\xa0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udfe0',
        ),
    ),
    Unicode(
        'orange_heart',
        b'\xf0\x9f\xa7\xa1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udde1',
        ),
    ),
    Unicode(
        'orange_square',
        b'\xf0\x9f\x9f\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udfe7',
        ),
    ),
    Unicode(
        'orangutan',
        b'\xf0\x9f\xa6\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udda7',
        ),
    ),
    Unicode(
        'orthodox_cross',
        b'\xe2\x98\xa6\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'otter',
        b'\xf0\x9f\xa6\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udda6',
        ),
    ),
    Unicode(
        'oyster',
        b'\xf0\x9f\xa6\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddaa',
        ),
    ),
    Unicode(
        'palms_up_together',
        b'\xf0\x9f\xa4\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd32',
        ),
    ),
    Unicode(
        'palms_up_together_tone1',
        b'\xf0\x9f\xa4\xb2\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd32\ud83c\udffb',
        ),
    ),
    Unicode(
        'palms_up_together_tone2',
        b'\xf0\x9f\xa4\xb2\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd32\ud83c\udffc',
        ),
    ),
    Unicode(
        'palms_up_together_tone3',
        b'\xf0\x9f\xa4\xb2\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd32\ud83c\udffd',
        ),
    ),
    Unicode(
        'palms_up_together_tone4',
        b'\xf0\x9f\xa4\xb2\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd32\ud83c\udffe',
        ),
    ),
    Unicode(
        'palms_up_together_tone5',
        b'\xf0\x9f\xa4\xb2\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd32\ud83c\udfff',
        ),
    ),
    Unicode(
        'parachute',
        b'\xf0\x9f\xaa\x82'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude82',
        ),
    ),
    Unicode(
        'parking',
        b'\xf0\x9f\x85\xbf\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udd7f️',
        ),
    ),
    Unicode(
        'parrot',
        b'\xf0\x9f\xa6\x9c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd9c',
        ),
    ),
    Unicode(
        'part_alternation_mark',
        b'\xe3\x80\xbd\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'partying_face',
        b'\xf0\x9f\xa5\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd73',
        ),
    ),
    Unicode(
        'peace',
        b'\xe2\x98\xae\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'peace_symbol',
        ),
        None,
        None,
    ),
    Unicode(
        'peacock',
        b'\xf0\x9f\xa6\x9a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd9a',
        ),
    ),
    Unicode(
        'pencil2',
        b'\xe2\x9c\x8f\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'people_holding_hands',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xf0\x9f\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d\ud83e\udd1d\u200d\ud83e\uddd1',
        ),
    ),
    Unicode(
        'person_climbing',
        b'\xf0\x9f\xa7\x97'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd7',
        ),
    ),
    Unicode(
        'person_climbing_tone1',
        b'\xf0\x9f\xa7\x97\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd7\ud83c\udffb',
        ),
    ),
    Unicode(
        'person_climbing_tone2',
        b'\xf0\x9f\xa7\x97\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd7\ud83c\udffc',
        ),
    ),
    Unicode(
        'person_climbing_tone3',
        b'\xf0\x9f\xa7\x97\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd7\ud83c\udffd',
        ),
    ),
    Unicode(
        'person_climbing_tone4',
        b'\xf0\x9f\xa7\x97\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd7\ud83c\udffe',
        ),
    ),
    Unicode(
        'person_climbing_tone5',
        b'\xf0\x9f\xa7\x97\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd7\ud83c\udfff',
        ),
    ),
    Unicode(
        'person_in_lotus_position',
        b'\xf0\x9f\xa7\x98'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd8',
        ),
    ),
    Unicode(
        'person_in_lotus_position_tone1',
        b'\xf0\x9f\xa7\x98\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd8\ud83c\udffb',
        ),
    ),
    Unicode(
        'person_in_lotus_position_tone2',
        b'\xf0\x9f\xa7\x98\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd8\ud83c\udffc',
        ),
    ),
    Unicode(
        'person_in_lotus_position_tone3',
        b'\xf0\x9f\xa7\x98\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd8\ud83c\udffd',
        ),
    ),
    Unicode(
        'person_in_lotus_position_tone4',
        b'\xf0\x9f\xa7\x98\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd8\ud83c\udffe',
        ),
    ),
    Unicode(
        'person_in_lotus_position_tone5',
        b'\xf0\x9f\xa7\x98\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd8\ud83c\udfff',
        ),
    ),
    Unicode(
        'person_in_steamy_room',
        b'\xf0\x9f\xa7\x96'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd6',
        ),
    ),
    Unicode(
        'person_in_steamy_room_tone1',
        b'\xf0\x9f\xa7\x96\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd6\ud83c\udffb',
        ),
    ),
    Unicode(
        'person_in_steamy_room_tone2',
        b'\xf0\x9f\xa7\x96\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd6\ud83c\udffc',
        ),
    ),
    Unicode(
        'person_in_steamy_room_tone3',
        b'\xf0\x9f\xa7\x96\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd6\ud83c\udffd',
        ),
    ),
    Unicode(
        'person_in_steamy_room_tone4',
        b'\xf0\x9f\xa7\x96\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd6\ud83c\udffe',
        ),
    ),
    Unicode(
        'person_in_steamy_room_tone5',
        b'\xf0\x9f\xa7\x96\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd6\ud83c\udfff',
        ),
    ),
    Unicode(
        'person_kneeling',
        b'\xf0\x9f\xa7\x8e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddce',
        ),
    ),
    Unicode(
        'person_kneeling_tone1',
        b'\xf0\x9f\xa7\x8e\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddce\ud83c\udffb',
        ),
    ),
    Unicode(
        'person_kneeling_tone2',
        b'\xf0\x9f\xa7\x8e\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddce\ud83c\udffc',
        ),
    ),
    Unicode(
        'person_kneeling_tone3',
        b'\xf0\x9f\xa7\x8e\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddce\ud83c\udffd',
        ),
    ),
    Unicode(
        'person_kneeling_tone4',
        b'\xf0\x9f\xa7\x8e\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddce\ud83c\udffe',
        ),
    ),
    Unicode(
        'person_kneeling_tone5',
        b'\xf0\x9f\xa7\x8e\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddce\ud83c\udfff',
        ),
    ),
    Unicode(
        'person_standing',
        b'\xf0\x9f\xa7\x8d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcd',
        ),
    ),
    Unicode(
        'person_standing_tone1',
        b'\xf0\x9f\xa7\x8d\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcd\ud83c\udffb',
        ),
    ),
    Unicode(
        'person_standing_tone2',
        b'\xf0\x9f\xa7\x8d\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcd\ud83c\udffc',
        ),
    ),
    Unicode(
        'person_standing_tone3',
        b'\xf0\x9f\xa7\x8d\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcd\ud83c\udffd',
        ),
    ),
    Unicode(
        'person_standing_tone4',
        b'\xf0\x9f\xa7\x8d\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcd\ud83c\udffe',
        ),
    ),
    Unicode(
        'person_standing_tone5',
        b'\xf0\x9f\xa7\x8d\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcd\ud83c\udfff',
        ),
    ),
    Unicode(
        'petri_dish',
        b'\xf0\x9f\xa7\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddeb',
        ),
    ),
    Unicode(
        'pick',
        b'\xe2\x9b\x8f\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'pie',
        b'\xf0\x9f\xa5\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd67',
        ),
    ),
    Unicode(
        'pinching_hand',
        b'\xf0\x9f\xa4\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd0f',
        ),
    ),
    Unicode(
        'pinching_hand_tone1',
        b'\xf0\x9f\xa4\x8f\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd0f\ud83c\udffb',
        ),
    ),
    Unicode(
        'pinching_hand_tone2',
        b'\xf0\x9f\xa4\x8f\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd0f\ud83c\udffc',
        ),
    ),
    Unicode(
        'pinching_hand_tone3',
        b'\xf0\x9f\xa4\x8f\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd0f\ud83c\udffd',
        ),
    ),
    Unicode(
        'pinching_hand_tone4',
        b'\xf0\x9f\xa4\x8f\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd0f\ud83c\udffe',
        ),
    ),
    Unicode(
        'pinching_hand_tone5',
        b'\xf0\x9f\xa4\x8f\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd0f\ud83c\udfff',
        ),
    ),
    Unicode(
        'pirate_flag',
        b'\xf0\x9f\x8f\xb4\xe2\x80\x8d\xe2\x98\xa0\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udff4\u200d☠️',
        ),
    ),
    Unicode(
        'play_pause',
        b'\xe2\x8f\xaf\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'pleading_face',
        b'\xf0\x9f\xa5\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd7a',
        ),
    ),
    Unicode(
        'point_up',
        b'\xe2\x98\x9d\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'pretzel',
        b'\xf0\x9f\xa5\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd68',
        ),
    ),
    Unicode(
        'previous_track',
        b'\xe2\x8f\xae\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'track_previous',
        ),
        None,
        None,
    ),
    Unicode(
        'printer',
        b'\xf0\x9f\x96\xa8\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udda8️',
        ),
    ),
    Unicode(
        'probing_cane',
        b'\xf0\x9f\xa6\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddaf',
        ),
    ),
    Unicode(
        'purple_circle',
        b'\xf0\x9f\x9f\xa3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udfe3',
        ),
    ),
    Unicode(
        'purple_square',
        b'\xf0\x9f\x9f\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udfea',
        ),
    ),
    Unicode(
        'raccoon',
        b'\xf0\x9f\xa6\x9d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd9d',
        ),
    ),
    Unicode(
        'race_car',
        b'\xf0\x9f\x8f\x8e\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'racing_car',
        ),
        None,
        (
            '\ud83c\udfce️',
        ),
    ),
    Unicode(
        'radioactive',
        b'\xe2\x98\xa2\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'radioactive_sign',
        ),
        None,
        None,
    ),
    Unicode(
        'railroad_track',
        b'\xf0\x9f\x9b\xa4\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'railway_track',
        ),
        None,
        (
            '\ud83d\udee4️',
        ),
    ),
    Unicode(
        'razor',
        b'\xf0\x9f\xaa\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude92',
        ),
    ),
    Unicode(
        'receipt',
        b'\xf0\x9f\xa7\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddfe',
        ),
    ),
    Unicode(
        'record_button',
        b'\xe2\x8f\xba\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'recycle',
        b'\xe2\x99\xbb\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'red_envelope',
        b'\xf0\x9f\xa7\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udde7',
        ),
    ),
    Unicode(
        'red_square',
        b'\xf0\x9f\x9f\xa5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udfe5',
        ),
    ),
    Unicode(
        'registered',
        b'\xc2\xae\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'relaxed',
        b'\xe2\x98\xba\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'smiling_face',
        ),
        None,
        None,
    ),
    Unicode(
        'reminder_ribbon',
        b'\xf0\x9f\x8e\x97\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf97️',
        ),
    ),
    Unicode(
        'ringed_planet',
        b'\xf0\x9f\xaa\x90'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude90',
        ),
    ),
    Unicode(
        'roll_of_paper',
        b'\xf0\x9f\xa7\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddfb',
        ),
    ),
    Unicode(
        'rosette',
        b'\xf0\x9f\x8f\xb5\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udff5️',
        ),
    ),
    Unicode(
        'sa',
        b'\xf0\x9f\x88\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\ude02️',
        ),
    ),
    Unicode(
        'safety_pin',
        b'\xf0\x9f\xa7\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddf7',
        ),
    ),
    Unicode(
        'safety_vest',
        b'\xf0\x9f\xa6\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddba',
        ),
    ),
    Unicode(
        'salt',
        b'\xf0\x9f\xa7\x82'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddc2',
        ),
    ),
    Unicode(
        'sandwich',
        b'\xf0\x9f\xa5\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd6a',
        ),
    ),
    Unicode(
        'sari',
        b'\xf0\x9f\xa5\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd7b',
        ),
    ),
    Unicode(
        'satellite_orbital',
        b'\xf0\x9f\x9b\xb0\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udef0️',
        ),
    ),
    Unicode(
        'sauropod',
        b'\xf0\x9f\xa6\x95'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd95',
        ),
    ),
    Unicode(
        'scales',
        b'\xe2\x9a\x96\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'balance_scale',
        ),
        None,
        None,
    ),
    Unicode(
        'scarf',
        b'\xf0\x9f\xa7\xa3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udde3',
        ),
    ),
    Unicode(
        'scissors',
        b'\xe2\x9c\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'scotland',
        (
            b'\xf0\x9f\x8f\xb4\xf3\xa0\x81\xa7\xf3\xa0\x81\xa2\xf3\xa0'
            b'\x81\xb3\xf3\xa0\x81\xa3\xf3\xa0\x81\xb4\xf3\xa0\x81\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc73\udb40\udc63\udb40\udc74\udb40\udc7f',
        ),
    ),
    Unicode(
        'secret',
        b'\xe3\x8a\x99\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'service_dog',
        b'\xf0\x9f\x90\x95\xe2\x80\x8d\xf0\x9f\xa6\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc15\u200d\ud83e\uddba',
        ),
    ),
    Unicode(
        'seven',
        b'7\xef\xb8\x8f\xe2\x83\xa3'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'shamrock',
        b'\xe2\x98\x98\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'shield',
        b'\xf0\x9f\x9b\xa1\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udee1️',
        ),
    ),
    Unicode(
        'shinto_shrine',
        b'\xe2\x9b\xa9\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'shopping_bags',
        b'\xf0\x9f\x9b\x8d\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udecd️',
        ),
    ),
    Unicode(
        'shorts',
        b'\xf0\x9f\xa9\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude73',
        ),
    ),
    Unicode(
        'shushing_face',
        b'\xf0\x9f\xa4\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd2b',
        ),
    ),
    Unicode(
        'six',
        b'6\xef\xb8\x8f\xe2\x83\xa3'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'skateboard',
        b'\xf0\x9f\x9b\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udef9',
        ),
    ),
    Unicode(
        'skier',
        b'\xe2\x9b\xb7\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'skull_and_crossbones',
        b'\xe2\x98\xa0\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'skull_crossbones',
        ),
        None,
        None,
    ),
    Unicode(
        'skunk',
        b'\xf0\x9f\xa6\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udda8',
        ),
    ),
    Unicode(
        'sled',
        b'\xf0\x9f\x9b\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udef7',
        ),
    ),
    Unicode(
        'sloth',
        b'\xf0\x9f\xa6\xa5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udda5',
        ),
    ),
    Unicode(
        'smiling_face_with_3_hearts',
        b'\xf0\x9f\xa5\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd70',
        ),
    ),
    Unicode(
        'snowflake',
        b'\xe2\x9d\x84\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'snowman2',
        b'\xe2\x98\x83\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'soap',
        b'\xf0\x9f\xa7\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddfc',
        ),
    ),
    Unicode(
        'socks',
        b'\xf0\x9f\xa7\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udde6',
        ),
    ),
    Unicode(
        'softball',
        b'\xf0\x9f\xa5\x8e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd4e',
        ),
    ),
    Unicode(
        'spades',
        b'\xe2\x99\xa0\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'spade_suit',
        ),
        None,
        None,
    ),
    Unicode(
        'sparkle',
        b'\xe2\x9d\x87\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'speaking_head',
        b'\xf0\x9f\x97\xa3\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'speaking_head_in_silhouette',
        ),
        None,
        (
            '\ud83d\udde3️',
        ),
    ),
    Unicode(
        'spider',
        b'\xf0\x9f\x95\xb7\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd77️',
        ),
    ),
    Unicode(
        'spider_web',
        b'\xf0\x9f\x95\xb8\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd78️',
        ),
    ),
    Unicode(
        'sponge',
        b'\xf0\x9f\xa7\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddfd',
        ),
    ),
    Unicode(
        'squeeze_bottle',
        b'\xf0\x9f\xa7\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddf4',
        ),
    ),
    Unicode(
        'stadium',
        b'\xf0\x9f\x8f\x9f\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfdf️',
        ),
    ),
    Unicode(
        'star_and_crescent',
        b'\xe2\x98\xaa\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'star_of_david',
        b'\xe2\x9c\xa1\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'star_struck',
        b'\xf0\x9f\xa4\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd29',
        ),
    ),
    Unicode(
        'stethoscope',
        b'\xf0\x9f\xa9\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude7a',
        ),
    ),
    Unicode(
        'stop_button',
        b'\xe2\x8f\xb9\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'stopwatch',
        b'\xe2\x8f\xb1\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'sunny',
        b'\xe2\x98\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'sun',
        ),
        None,
        None,
    ),
    Unicode(
        'superhero',
        b'\xf0\x9f\xa6\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb8',
        ),
    ),
    Unicode(
        'superhero_tone1',
        b'\xf0\x9f\xa6\xb8\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb8\ud83c\udffb',
        ),
    ),
    Unicode(
        'superhero_tone2',
        b'\xf0\x9f\xa6\xb8\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb8\ud83c\udffc',
        ),
    ),
    Unicode(
        'superhero_tone3',
        b'\xf0\x9f\xa6\xb8\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb8\ud83c\udffd',
        ),
    ),
    Unicode(
        'superhero_tone4',
        b'\xf0\x9f\xa6\xb8\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb8\ud83c\udffe',
        ),
    ),
    Unicode(
        'superhero_tone5',
        b'\xf0\x9f\xa6\xb8\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb8\ud83c\udfff',
        ),
    ),
    Unicode(
        'supervillain',
        b'\xf0\x9f\xa6\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb9',
        ),
    ),
    Unicode(
        'supervillain_tone1',
        b'\xf0\x9f\xa6\xb9\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb9\ud83c\udffb',
        ),
    ),
    Unicode(
        'supervillain_tone2',
        b'\xf0\x9f\xa6\xb9\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb9\ud83c\udffc',
        ),
    ),
    Unicode(
        'supervillain_tone3',
        b'\xf0\x9f\xa6\xb9\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb9\ud83c\udffd',
        ),
    ),
    Unicode(
        'supervillain_tone4',
        b'\xf0\x9f\xa6\xb9\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb9\ud83c\udffe',
        ),
    ),
    Unicode(
        'supervillain_tone5',
        b'\xf0\x9f\xa6\xb9\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb9\ud83c\udfff',
        ),
    ),
    Unicode(
        'swan',
        b'\xf0\x9f\xa6\xa2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udda2',
        ),
    ),
    Unicode(
        't_rex',
        b'\xf0\x9f\xa6\x96'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd96',
        ),
    ),
    Unicode(
        'takeout_box',
        b'\xf0\x9f\xa5\xa1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd61',
        ),
    ),
    Unicode(
        'teddy_bear',
        b'\xf0\x9f\xa7\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddf8',
        ),
    ),
    Unicode(
        'telephone',
        b'\xe2\x98\x8e\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'test_tube',
        b'\xf0\x9f\xa7\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddea',
        ),
    ),
    Unicode(
        'thermometer',
        b'\xf0\x9f\x8c\xa1\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf21️',
        ),
    ),
    Unicode(
        'thread',
        b'\xf0\x9f\xa7\xb5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddf5',
        ),
    ),
    Unicode(
        'three',
        b'3\xef\xb8\x8f\xe2\x83\xa3'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'thunder_cloud_and_rain',
        b'\xe2\x9b\x88\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'thunder_cloud_rain',
        ),
        None,
        None,
    ),
    Unicode(
        'timer',
        b'\xe2\x8f\xb2\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'timer_clock',
        ),
        None,
        None,
    ),
    Unicode(
        'tm',
        b'\xe2\x84\xa2\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'trade_mark',
        ),
        None,
        None,
    ),
    Unicode(
        'toolbox',
        b'\xf0\x9f\xa7\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddf0',
        ),
    ),
    Unicode(
        'tooth',
        b'\xf0\x9f\xa6\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb7',
        ),
    ),
    Unicode(
        'trackball',
        b'\xf0\x9f\x96\xb2\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\uddb2️',
        ),
    ),
    Unicode(
        'two',
        b'2\xef\xb8\x8f\xe2\x83\xa3'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'u6708',
        b'\xf0\x9f\x88\xb7\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\ude37️',
        ),
    ),
    Unicode(
        'umbrella2',
        b'\xe2\x98\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'united_nations',
        b'\xf0\x9f\x87\xba\xf0\x9f\x87\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\uddfa\ud83c\uddf3',
        ),
    ),
    Unicode(
        'v',
        b'\xe2\x9c\x8c\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'victory_hand',
        ),
        None,
        None,
    ),
    Unicode(
        'vampire',
        b'\xf0\x9f\xa7\x9b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddb',
        ),
    ),
    Unicode(
        'vampire_tone1',
        b'\xf0\x9f\xa7\x9b\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddb\ud83c\udffb',
        ),
    ),
    Unicode(
        'vampire_tone2',
        b'\xf0\x9f\xa7\x9b\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddb\ud83c\udffc',
        ),
    ),
    Unicode(
        'vampire_tone3',
        b'\xf0\x9f\xa7\x9b\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddb\ud83c\udffd',
        ),
    ),
    Unicode(
        'vampire_tone4',
        b'\xf0\x9f\xa7\x9b\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddb\ud83c\udffe',
        ),
    ),
    Unicode(
        'vampire_tone5',
        b'\xf0\x9f\xa7\x9b\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddb\ud83c\udfff',
        ),
    ),
    Unicode(
        'waffle',
        b'\xf0\x9f\xa7\x87'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddc7',
        ),
    ),
    Unicode(
        'wales',
        (
            b'\xf0\x9f\x8f\xb4\xf3\xa0\x81\xa7\xf3\xa0\x81\xa2\xf3\xa0'
            b'\x81\xb7\xf3\xa0\x81\xac\xf3\xa0\x81\xb3\xf3\xa0\x81\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f',
        ),
    ),
    Unicode(
        'warning',
        b'\xe2\x9a\xa0\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'wastebasket',
        b'\xf0\x9f\x97\x91\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\uddd1️',
        ),
    ),
    Unicode(
        'wavy_dash',
        b'\xe3\x80\xb0\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'wheel_of_dharma',
        b'\xe2\x98\xb8\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'white_heart',
        b'\xf0\x9f\xa4\x8d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd0d',
        ),
    ),
    Unicode(
        'white_medium_square',
        b'\xe2\x97\xbb\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'white_small_square',
        b'\xe2\x96\xab\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'white_sun_behind_cloud',
        b'\xf0\x9f\x8c\xa5\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'white_sun_cloud',
        ),
        None,
        (
            '\ud83c\udf25️',
        ),
    ),
    Unicode(
        'white_sun_behind_cloud_with_rain',
        b'\xf0\x9f\x8c\xa6\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'white_sun_rain_cloud',
        ),
        None,
        (
            '\ud83c\udf26️',
        ),
    ),
    Unicode(
        'white_sun_small_cloud',
        b'\xf0\x9f\x8c\xa4\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'white_sun_with_small_cloud',
        ),
        None,
        (
            '\ud83c\udf24️',
        ),
    ),
    Unicode(
        'wind_blowing_face',
        b'\xf0\x9f\x8c\xac\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udf2c️',
        ),
    ),
    Unicode(
        'woman_artist',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x8e\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83c\udfa8',
        ),
    ),
    Unicode(
        'woman_artist_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8e\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83c\udfa8',
        ),
    ),
    Unicode(
        'woman_artist_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8e\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83c\udfa8',
        ),
    ),
    Unicode(
        'woman_artist_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8e\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83c\udfa8',
        ),
    ),
    Unicode(
        'woman_artist_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8e\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83c\udfa8',
        ),
    ),
    Unicode(
        'woman_artist_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8e\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83c\udfa8',
        ),
    ),
    Unicode(
        'woman_astronaut',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x9a\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83d\ude80',
        ),
    ),
    Unicode(
        'woman_astronaut_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x9a\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83d\ude80',
        ),
    ),
    Unicode(
        'woman_astronaut_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x9a\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83d\ude80',
        ),
    ),
    Unicode(
        'woman_astronaut_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x9a\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83d\ude80',
        ),
    ),
    Unicode(
        'woman_astronaut_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x9a\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83d\ude80',
        ),
    ),
    Unicode(
        'woman_astronaut_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x9a\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83d\ude80',
        ),
    ),
    Unicode(
        'woman_bald',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\xa6\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83e\uddb2',
        ),
    ),
    Unicode(
        'woman_bald_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xa6\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83e\uddb2',
        ),
    ),
    Unicode(
        'woman_bald_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xa6\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83e\uddb2',
        ),
    ),
    Unicode(
        'woman_bald_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xa6\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83e\uddb2',
        ),
    ),
    Unicode(
        'woman_bald_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xa6\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83e\uddb2',
        ),
    ),
    Unicode(
        'woman_bald_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xa6\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83e\uddb2',
        ),
    ),
    Unicode(
        'woman_biking',
        b'\xf0\x9f\x9a\xb4\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb4\u200d♀️',
        ),
    ),
    Unicode(
        'woman_biking_tone1',
        b'\xf0\x9f\x9a\xb4\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb4\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_biking_tone2',
        b'\xf0\x9f\x9a\xb4\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb4\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_biking_tone3',
        b'\xf0\x9f\x9a\xb4\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb4\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_biking_tone4',
        b'\xf0\x9f\x9a\xb4\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb4\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_biking_tone5',
        b'\xf0\x9f\x9a\xb4\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb4\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_bouncing_ball',
        b'\xe2\x9b\xb9\xef\xb8\x8f\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'woman_bouncing_ball_tone1',
        b'\xe2\x9b\xb9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '⛹\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_bouncing_ball_tone2',
        b'\xe2\x9b\xb9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '⛹\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_bouncing_ball_tone3',
        b'\xe2\x9b\xb9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '⛹\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_bouncing_ball_tone4',
        b'\xe2\x9b\xb9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '⛹\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_bouncing_ball_tone5',
        b'\xe2\x9b\xb9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '⛹\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_bowing',
        b'\xf0\x9f\x99\x87\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude47\u200d♀️',
        ),
    ),
    Unicode(
        'woman_bowing_tone1',
        b'\xf0\x9f\x99\x87\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude47\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_bowing_tone2',
        b'\xf0\x9f\x99\x87\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude47\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_bowing_tone3',
        b'\xf0\x9f\x99\x87\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude47\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_bowing_tone4',
        b'\xf0\x9f\x99\x87\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude47\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_bowing_tone5',
        b'\xf0\x9f\x99\x87\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude47\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_cartwheeling',
        b'\xf0\x9f\xa4\xb8\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd38\u200d♀️',
        ),
    ),
    Unicode(
        'woman_cartwheeling_tone1',
        b'\xf0\x9f\xa4\xb8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd38\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_cartwheeling_tone2',
        b'\xf0\x9f\xa4\xb8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd38\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_cartwheeling_tone3',
        b'\xf0\x9f\xa4\xb8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd38\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_cartwheeling_tone4',
        b'\xf0\x9f\xa4\xb8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd38\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_cartwheeling_tone5',
        b'\xf0\x9f\xa4\xb8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd38\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_climbing',
        b'\xf0\x9f\xa7\x97\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd7\u200d♀️',
        ),
    ),
    Unicode(
        'woman_climbing_tone1',
        b'\xf0\x9f\xa7\x97\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd7\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_climbing_tone2',
        b'\xf0\x9f\xa7\x97\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd7\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_climbing_tone3',
        b'\xf0\x9f\xa7\x97\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd7\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_climbing_tone4',
        b'\xf0\x9f\xa7\x97\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd7\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_climbing_tone5',
        b'\xf0\x9f\xa7\x97\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd7\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_construction_worker',
        b'\xf0\x9f\x91\xb7\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc77\u200d♀️',
        ),
    ),
    Unicode(
        'woman_construction_worker_tone1',
        b'\xf0\x9f\x91\xb7\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc77\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_construction_worker_tone2',
        b'\xf0\x9f\x91\xb7\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc77\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_construction_worker_tone3',
        b'\xf0\x9f\x91\xb7\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc77\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_construction_worker_tone4',
        b'\xf0\x9f\x91\xb7\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc77\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_construction_worker_tone5',
        b'\xf0\x9f\x91\xb7\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc77\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_cook',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x8d\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83c\udf73',
        ),
    ),
    Unicode(
        'woman_cook_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8d\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83c\udf73',
        ),
    ),
    Unicode(
        'woman_cook_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8d\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83c\udf73',
        ),
    ),
    Unicode(
        'woman_cook_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8d\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83c\udf73',
        ),
    ),
    Unicode(
        'woman_cook_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8d\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83c\udf73',
        ),
    ),
    Unicode(
        'woman_cook_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8d\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83c\udf73',
        ),
    ),
    Unicode(
        'woman_curly_haired',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\xa6\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83e\uddb1',
        ),
    ),
    Unicode(
        'woman_curly_haired_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xa6\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83e\uddb1',
        ),
    ),
    Unicode(
        'woman_curly_haired_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xa6\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83e\uddb1',
        ),
    ),
    Unicode(
        'woman_curly_haired_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xa6\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83e\uddb1',
        ),
    ),
    Unicode(
        'woman_curly_haired_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xa6\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83e\uddb1',
        ),
    ),
    Unicode(
        'woman_curly_haired_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xa6\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83e\uddb1',
        ),
    ),
    Unicode(
        'woman_detective',
        b'\xf0\x9f\x95\xb5\xef\xb8\x8f\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd75️\u200d♀️',
        ),
    ),
    Unicode(
        'woman_detective_tone1',
        b'\xf0\x9f\x95\xb5\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd75\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_detective_tone2',
        b'\xf0\x9f\x95\xb5\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd75\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_detective_tone3',
        b'\xf0\x9f\x95\xb5\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd75\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_detective_tone4',
        b'\xf0\x9f\x95\xb5\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd75\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_detective_tone5',
        b'\xf0\x9f\x95\xb5\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udd75\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_elf',
        b'\xf0\x9f\xa7\x9d\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_elf_tone1',
        b'\xf0\x9f\xa7\x9d\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddd\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_elf_tone2',
        b'\xf0\x9f\xa7\x9d\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddd\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_elf_tone3',
        b'\xf0\x9f\xa7\x9d\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddd\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_elf_tone4',
        b'\xf0\x9f\xa7\x9d\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddd\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_elf_tone5',
        b'\xf0\x9f\xa7\x9d\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddd\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_facepalming',
        b'\xf0\x9f\xa4\xa6\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd26\u200d♀️',
        ),
    ),
    Unicode(
        'woman_facepalming_tone1',
        b'\xf0\x9f\xa4\xa6\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd26\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_facepalming_tone2',
        b'\xf0\x9f\xa4\xa6\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd26\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_facepalming_tone3',
        b'\xf0\x9f\xa4\xa6\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd26\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_facepalming_tone4',
        b'\xf0\x9f\xa4\xa6\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd26\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_facepalming_tone5',
        b'\xf0\x9f\xa4\xa6\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd26\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_factory_worker',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x8f\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83c\udfed',
        ),
    ),
    Unicode(
        'woman_factory_worker_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8f\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83c\udfed',
        ),
    ),
    Unicode(
        'woman_factory_worker_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8f\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83c\udfed',
        ),
    ),
    Unicode(
        'woman_factory_worker_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8f\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83c\udfed',
        ),
    ),
    Unicode(
        'woman_factory_worker_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8f\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83c\udfed',
        ),
    ),
    Unicode(
        'woman_factory_worker_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8f\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83c\udfed',
        ),
    ),
    Unicode(
        'woman_fairy',
        b'\xf0\x9f\xa7\x9a\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddda\u200d♀️',
        ),
    ),
    Unicode(
        'woman_fairy_tone1',
        b'\xf0\x9f\xa7\x9a\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddda\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_fairy_tone2',
        b'\xf0\x9f\xa7\x9a\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddda\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_fairy_tone3',
        b'\xf0\x9f\xa7\x9a\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddda\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_fairy_tone4',
        b'\xf0\x9f\xa7\x9a\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddda\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_fairy_tone5',
        b'\xf0\x9f\xa7\x9a\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddda\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_farmer',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x8c\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83c\udf3e',
        ),
    ),
    Unicode(
        'woman_farmer_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8c\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83c\udf3e',
        ),
    ),
    Unicode(
        'woman_farmer_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8c\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83c\udf3e',
        ),
    ),
    Unicode(
        'woman_farmer_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8c\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83c\udf3e',
        ),
    ),
    Unicode(
        'woman_farmer_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8c\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83c\udf3e',
        ),
    ),
    Unicode(
        'woman_farmer_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8c\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83c\udf3e',
        ),
    ),
    Unicode(
        'woman_firefighter',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x9a\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83d\ude92',
        ),
    ),
    Unicode(
        'woman_firefighter_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x9a\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83d\ude92',
        ),
    ),
    Unicode(
        'woman_firefighter_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x9a\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83d\ude92',
        ),
    ),
    Unicode(
        'woman_firefighter_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x9a\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83d\ude92',
        ),
    ),
    Unicode(
        'woman_firefighter_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x9a\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83d\ude92',
        ),
    ),
    Unicode(
        'woman_firefighter_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x9a\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83d\ude92',
        ),
    ),
    Unicode(
        'woman_frowning',
        b'\xf0\x9f\x99\x8d\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4d\u200d♀️',
        ),
    ),
    Unicode(
        'woman_frowning_tone1',
        b'\xf0\x9f\x99\x8d\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4d\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_frowning_tone2',
        b'\xf0\x9f\x99\x8d\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4d\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_frowning_tone3',
        b'\xf0\x9f\x99\x8d\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4d\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_frowning_tone4',
        b'\xf0\x9f\x99\x8d\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4d\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_frowning_tone5',
        b'\xf0\x9f\x99\x8d\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4d\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_genie',
        b'\xf0\x9f\xa7\x9e\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddde\u200d♀️',
        ),
    ),
    Unicode(
        'woman_gesturing_no',
        b'\xf0\x9f\x99\x85\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude45\u200d♀️',
        ),
    ),
    Unicode(
        'woman_gesturing_no_tone1',
        b'\xf0\x9f\x99\x85\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude45\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_gesturing_no_tone2',
        b'\xf0\x9f\x99\x85\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude45\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_gesturing_no_tone3',
        b'\xf0\x9f\x99\x85\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude45\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_gesturing_no_tone4',
        b'\xf0\x9f\x99\x85\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude45\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_gesturing_no_tone5',
        b'\xf0\x9f\x99\x85\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude45\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_gesturing_ok',
        b'\xf0\x9f\x99\x86\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude46\u200d♀️',
        ),
    ),
    Unicode(
        'woman_gesturing_ok_tone1',
        b'\xf0\x9f\x99\x86\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude46\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_gesturing_ok_tone2',
        b'\xf0\x9f\x99\x86\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude46\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_gesturing_ok_tone3',
        b'\xf0\x9f\x99\x86\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude46\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_gesturing_ok_tone4',
        b'\xf0\x9f\x99\x86\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude46\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_gesturing_ok_tone5',
        b'\xf0\x9f\x99\x86\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude46\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_getting_face_massage',
        b'\xf0\x9f\x92\x86\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc86\u200d♀️',
        ),
    ),
    Unicode(
        'woman_getting_face_massage_tone1',
        b'\xf0\x9f\x92\x86\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc86\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_getting_face_massage_tone2',
        b'\xf0\x9f\x92\x86\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc86\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_getting_face_massage_tone3',
        b'\xf0\x9f\x92\x86\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc86\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_getting_face_massage_tone4',
        b'\xf0\x9f\x92\x86\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc86\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_getting_face_massage_tone5',
        b'\xf0\x9f\x92\x86\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc86\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_getting_haircut',
        b'\xf0\x9f\x92\x87\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc87\u200d♀️',
        ),
    ),
    Unicode(
        'woman_getting_haircut_tone1',
        b'\xf0\x9f\x92\x87\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc87\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_getting_haircut_tone2',
        b'\xf0\x9f\x92\x87\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc87\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_getting_haircut_tone3',
        b'\xf0\x9f\x92\x87\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc87\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_getting_haircut_tone4',
        b'\xf0\x9f\x92\x87\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc87\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_getting_haircut_tone5',
        b'\xf0\x9f\x92\x87\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc87\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_golfing',
        b'\xf0\x9f\x8f\x8c\xef\xb8\x8f\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcc️\u200d♀️',
        ),
    ),
    Unicode(
        'woman_golfing_tone1',
        b'\xf0\x9f\x8f\x8c\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcc\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_golfing_tone2',
        b'\xf0\x9f\x8f\x8c\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcc\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_golfing_tone3',
        b'\xf0\x9f\x8f\x8c\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcc\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_golfing_tone4',
        b'\xf0\x9f\x8f\x8c\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcc\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_golfing_tone5',
        b'\xf0\x9f\x8f\x8c\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcc\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_guard',
        b'\xf0\x9f\x92\x82\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc82\u200d♀️',
        ),
    ),
    Unicode(
        'woman_guard_tone1',
        b'\xf0\x9f\x92\x82\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc82\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_guard_tone2',
        b'\xf0\x9f\x92\x82\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc82\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_guard_tone3',
        b'\xf0\x9f\x92\x82\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc82\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_guard_tone4',
        b'\xf0\x9f\x92\x82\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc82\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_guard_tone5',
        b'\xf0\x9f\x92\x82\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc82\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_health_worker',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xe2\x9a\x95\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d⚕️',
        ),
    ),
    Unicode(
        'woman_health_worker_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9a\x95\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d⚕️',
        ),
    ),
    Unicode(
        'woman_health_worker_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9a\x95\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d⚕️',
        ),
    ),
    Unicode(
        'woman_health_worker_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9a\x95\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d⚕️',
        ),
    ),
    Unicode(
        'woman_health_worker_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9a\x95\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d⚕️',
        ),
    ),
    Unicode(
        'woman_health_worker_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9a\x95\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d⚕️',
        ),
    ),
    Unicode(
        'woman_in_lotus_position',
        b'\xf0\x9f\xa7\x98\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd8\u200d♀️',
        ),
    ),
    Unicode(
        'woman_in_lotus_position_tone1',
        b'\xf0\x9f\xa7\x98\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd8\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_in_lotus_position_tone2',
        b'\xf0\x9f\xa7\x98\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd8\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_in_lotus_position_tone3',
        b'\xf0\x9f\xa7\x98\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd8\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_in_lotus_position_tone4',
        b'\xf0\x9f\xa7\x98\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd8\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_in_lotus_position_tone5',
        b'\xf0\x9f\xa7\x98\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd8\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_in_manual_wheelchair',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\xa6\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83e\uddbd',
        ),
    ),
    Unicode(
        'woman_in_manual_wheelchair_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xa6\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83e\uddbd',
        ),
    ),
    Unicode(
        'woman_in_manual_wheelchair_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xa6\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83e\uddbd',
        ),
    ),
    Unicode(
        'woman_in_manual_wheelchair_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xa6\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83e\uddbd',
        ),
    ),
    Unicode(
        'woman_in_manual_wheelchair_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xa6\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83e\uddbd',
        ),
    ),
    Unicode(
        'woman_in_manual_wheelchair_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xa6\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83e\uddbd',
        ),
    ),
    Unicode(
        'woman_in_motorized_wheelchair',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\xa6\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83e\uddbc',
        ),
    ),
    Unicode(
        'woman_in_motorized_wheelchair_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xa6\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83e\uddbc',
        ),
    ),
    Unicode(
        'woman_in_motorized_wheelchair_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xa6\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83e\uddbc',
        ),
    ),
    Unicode(
        'woman_in_motorized_wheelchair_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xa6\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83e\uddbc',
        ),
    ),
    Unicode(
        'woman_in_motorized_wheelchair_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xa6\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83e\uddbc',
        ),
    ),
    Unicode(
        'woman_in_motorized_wheelchair_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xa6\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83e\uddbc',
        ),
    ),
    Unicode(
        'woman_in_steamy_room',
        b'\xf0\x9f\xa7\x96\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd6\u200d♀️',
        ),
    ),
    Unicode(
        'woman_in_steamy_room_tone1',
        b'\xf0\x9f\xa7\x96\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd6\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_in_steamy_room_tone2',
        b'\xf0\x9f\xa7\x96\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd6\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_in_steamy_room_tone3',
        b'\xf0\x9f\xa7\x96\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd6\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_in_steamy_room_tone4',
        b'\xf0\x9f\xa7\x96\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd6\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_in_steamy_room_tone5',
        b'\xf0\x9f\xa7\x96\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd6\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_judge',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xe2\x9a\x96\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d⚖️',
        ),
    ),
    Unicode(
        'woman_judge_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9a\x96\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d⚖️',
        ),
    ),
    Unicode(
        'woman_judge_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9a\x96\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d⚖️',
        ),
    ),
    Unicode(
        'woman_judge_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9a\x96\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d⚖️',
        ),
    ),
    Unicode(
        'woman_judge_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9a\x96\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d⚖️',
        ),
    ),
    Unicode(
        'woman_judge_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9a\x96\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d⚖️',
        ),
    ),
    Unicode(
        'woman_juggling',
        b'\xf0\x9f\xa4\xb9\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd39\u200d♀️',
        ),
    ),
    Unicode(
        'woman_juggling_tone1',
        b'\xf0\x9f\xa4\xb9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd39\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_juggling_tone2',
        b'\xf0\x9f\xa4\xb9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd39\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_juggling_tone3',
        b'\xf0\x9f\xa4\xb9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd39\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_juggling_tone4',
        b'\xf0\x9f\xa4\xb9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd39\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_juggling_tone5',
        b'\xf0\x9f\xa4\xb9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd39\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_kneeling',
        b'\xf0\x9f\xa7\x8e\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddce\u200d♀️',
        ),
    ),
    Unicode(
        'woman_kneeling_tone1',
        b'\xf0\x9f\xa7\x8e\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddce\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_kneeling_tone2',
        b'\xf0\x9f\xa7\x8e\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddce\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_kneeling_tone3',
        b'\xf0\x9f\xa7\x8e\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddce\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_kneeling_tone4',
        b'\xf0\x9f\xa7\x8e\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddce\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_kneeling_tone5',
        b'\xf0\x9f\xa7\x8e\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddce\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_lifting_weights',
        b'\xf0\x9f\x8f\x8b\xef\xb8\x8f\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcb️\u200d♀️',
        ),
    ),
    Unicode(
        'woman_lifting_weights_tone1',
        b'\xf0\x9f\x8f\x8b\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcb\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_lifting_weights_tone2',
        b'\xf0\x9f\x8f\x8b\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcb\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_lifting_weights_tone3',
        b'\xf0\x9f\x8f\x8b\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcb\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_lifting_weights_tone4',
        b'\xf0\x9f\x8f\x8b\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcb\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_lifting_weights_tone5',
        b'\xf0\x9f\x8f\x8b\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfcb\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_mage',
        b'\xf0\x9f\xa7\x99\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd9\u200d♀️',
        ),
    ),
    Unicode(
        'woman_mage_tone1',
        b'\xf0\x9f\xa7\x99\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd9\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_mage_tone2',
        b'\xf0\x9f\xa7\x99\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd9\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_mage_tone3',
        b'\xf0\x9f\xa7\x99\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd9\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_mage_tone4',
        b'\xf0\x9f\xa7\x99\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd9\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_mage_tone5',
        b'\xf0\x9f\xa7\x99\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd9\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_mechanic',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x94\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83d\udd27',
        ),
    ),
    Unicode(
        'woman_mechanic_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x94\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83d\udd27',
        ),
    ),
    Unicode(
        'woman_mechanic_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x94\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83d\udd27',
        ),
    ),
    Unicode(
        'woman_mechanic_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x94\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83d\udd27',
        ),
    ),
    Unicode(
        'woman_mechanic_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x94\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83d\udd27',
        ),
    ),
    Unicode(
        'woman_mechanic_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x94\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83d\udd27',
        ),
    ),
    Unicode(
        'woman_mountain_biking',
        b'\xf0\x9f\x9a\xb5\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb5\u200d♀️',
        ),
    ),
    Unicode(
        'woman_mountain_biking_tone1',
        b'\xf0\x9f\x9a\xb5\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb5\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_mountain_biking_tone2',
        b'\xf0\x9f\x9a\xb5\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb5\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_mountain_biking_tone3',
        b'\xf0\x9f\x9a\xb5\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb5\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_mountain_biking_tone4',
        b'\xf0\x9f\x9a\xb5\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb5\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_mountain_biking_tone5',
        b'\xf0\x9f\x9a\xb5\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb5\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_office_worker',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x92\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83d\udcbc',
        ),
    ),
    Unicode(
        'woman_office_worker_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x92\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83d\udcbc',
        ),
    ),
    Unicode(
        'woman_office_worker_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x92\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83d\udcbc',
        ),
    ),
    Unicode(
        'woman_office_worker_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x92\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83d\udcbc',
        ),
    ),
    Unicode(
        'woman_office_worker_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x92\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbc',
        ),
    ),
    Unicode(
        'woman_office_worker_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x92\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83d\udcbc',
        ),
    ),
    Unicode(
        'woman_pilot',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xe2\x9c\x88\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d✈️',
        ),
    ),
    Unicode(
        'woman_pilot_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9c\x88\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d✈️',
        ),
    ),
    Unicode(
        'woman_pilot_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9c\x88\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d✈️',
        ),
    ),
    Unicode(
        'woman_pilot_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9c\x88\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d✈️',
        ),
    ),
    Unicode(
        'woman_pilot_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9c\x88\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d✈️',
        ),
    ),
    Unicode(
        'woman_pilot_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9c\x88\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d✈️',
        ),
    ),
    Unicode(
        'woman_playing_handball',
        b'\xf0\x9f\xa4\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3e\u200d♀️',
        ),
    ),
    Unicode(
        'woman_playing_handball_tone1',
        b'\xf0\x9f\xa4\xbe\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3e\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_playing_handball_tone2',
        b'\xf0\x9f\xa4\xbe\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3e\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_playing_handball_tone3',
        b'\xf0\x9f\xa4\xbe\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3e\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_playing_handball_tone4',
        b'\xf0\x9f\xa4\xbe\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3e\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_playing_handball_tone5',
        b'\xf0\x9f\xa4\xbe\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3e\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_playing_water_polo',
        b'\xf0\x9f\xa4\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3d\u200d♀️',
        ),
    ),
    Unicode(
        'woman_playing_water_polo_tone1',
        b'\xf0\x9f\xa4\xbd\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3d\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_playing_water_polo_tone2',
        b'\xf0\x9f\xa4\xbd\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3d\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_playing_water_polo_tone3',
        b'\xf0\x9f\xa4\xbd\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3d\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_playing_water_polo_tone4',
        b'\xf0\x9f\xa4\xbd\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3d\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_playing_water_polo_tone5',
        b'\xf0\x9f\xa4\xbd\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3d\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_police_officer',
        b'\xf0\x9f\x91\xae\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6e\u200d♀️',
        ),
    ),
    Unicode(
        'woman_police_officer_tone1',
        b'\xf0\x9f\x91\xae\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6e\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_police_officer_tone2',
        b'\xf0\x9f\x91\xae\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6e\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_police_officer_tone3',
        b'\xf0\x9f\x91\xae\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6e\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_police_officer_tone4',
        b'\xf0\x9f\x91\xae\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6e\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_police_officer_tone5',
        b'\xf0\x9f\x91\xae\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6e\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_pouting',
        b'\xf0\x9f\x99\x8e\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4e\u200d♀️',
        ),
    ),
    Unicode(
        'woman_pouting_tone1',
        b'\xf0\x9f\x99\x8e\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4e\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_pouting_tone2',
        b'\xf0\x9f\x99\x8e\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4e\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_pouting_tone3',
        b'\xf0\x9f\x99\x8e\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4e\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_pouting_tone4',
        b'\xf0\x9f\x99\x8e\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4e\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_pouting_tone5',
        b'\xf0\x9f\x99\x8e\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4e\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_raising_hand',
        b'\xf0\x9f\x99\x8b\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4b\u200d♀️',
        ),
    ),
    Unicode(
        'woman_raising_hand_tone1',
        b'\xf0\x9f\x99\x8b\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4b\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_raising_hand_tone2',
        b'\xf0\x9f\x99\x8b\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4b\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_raising_hand_tone3',
        b'\xf0\x9f\x99\x8b\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4b\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_raising_hand_tone4',
        b'\xf0\x9f\x99\x8b\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4b\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_raising_hand_tone5',
        b'\xf0\x9f\x99\x8b\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude4b\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_red_haired',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\xa6\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83e\uddb0',
        ),
    ),
    Unicode(
        'woman_red_haired_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xa6\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83e\uddb0',
        ),
    ),
    Unicode(
        'woman_red_haired_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xa6\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83e\uddb0',
        ),
    ),
    Unicode(
        'woman_red_haired_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xa6\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83e\uddb0',
        ),
    ),
    Unicode(
        'woman_red_haired_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xa6\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83e\uddb0',
        ),
    ),
    Unicode(
        'woman_red_haired_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xa6\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83e\uddb0',
        ),
    ),
    Unicode(
        'woman_rowing_boat',
        b'\xf0\x9f\x9a\xa3\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udea3\u200d♀️',
        ),
    ),
    Unicode(
        'woman_rowing_boat_tone1',
        b'\xf0\x9f\x9a\xa3\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udea3\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_rowing_boat_tone2',
        b'\xf0\x9f\x9a\xa3\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udea3\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_rowing_boat_tone3',
        b'\xf0\x9f\x9a\xa3\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udea3\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_rowing_boat_tone4',
        b'\xf0\x9f\x9a\xa3\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udea3\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_rowing_boat_tone5',
        b'\xf0\x9f\x9a\xa3\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udea3\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_running',
        b'\xf0\x9f\x8f\x83\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc3\u200d♀️',
        ),
    ),
    Unicode(
        'woman_running_tone1',
        b'\xf0\x9f\x8f\x83\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc3\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_running_tone2',
        b'\xf0\x9f\x8f\x83\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc3\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_running_tone3',
        b'\xf0\x9f\x8f\x83\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc3\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_running_tone4',
        b'\xf0\x9f\x8f\x83\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc3\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_running_tone5',
        b'\xf0\x9f\x8f\x83\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc3\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_scientist',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x94\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83d\udd2c',
        ),
    ),
    Unicode(
        'woman_scientist_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x94\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83d\udd2c',
        ),
    ),
    Unicode(
        'woman_scientist_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x94\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83d\udd2c',
        ),
    ),
    Unicode(
        'woman_scientist_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x94\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83d\udd2c',
        ),
    ),
    Unicode(
        'woman_scientist_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x94\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83d\udd2c',
        ),
    ),
    Unicode(
        'woman_scientist_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x94\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83d\udd2c',
        ),
    ),
    Unicode(
        'woman_shrugging',
        b'\xf0\x9f\xa4\xb7\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd37\u200d♀️',
        ),
    ),
    Unicode(
        'woman_shrugging_tone1',
        b'\xf0\x9f\xa4\xb7\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd37\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_shrugging_tone2',
        b'\xf0\x9f\xa4\xb7\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd37\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_shrugging_tone3',
        b'\xf0\x9f\xa4\xb7\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd37\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_shrugging_tone4',
        b'\xf0\x9f\xa4\xb7\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd37\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_shrugging_tone5',
        b'\xf0\x9f\xa4\xb7\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd37\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_singer',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x8e\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83c\udfa4',
        ),
    ),
    Unicode(
        'woman_singer_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8e\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83c\udfa4',
        ),
    ),
    Unicode(
        'woman_singer_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8e\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83c\udfa4',
        ),
    ),
    Unicode(
        'woman_singer_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8e\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83c\udfa4',
        ),
    ),
    Unicode(
        'woman_singer_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8e\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83c\udfa4',
        ),
    ),
    Unicode(
        'woman_singer_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8e\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83c\udfa4',
        ),
    ),
    Unicode(
        'woman_standing',
        b'\xf0\x9f\xa7\x8d\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_standing_tone1',
        b'\xf0\x9f\xa7\x8d\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcd\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_standing_tone2',
        b'\xf0\x9f\xa7\x8d\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcd\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_standing_tone3',
        b'\xf0\x9f\xa7\x8d\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcd\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_standing_tone4',
        b'\xf0\x9f\xa7\x8d\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcd\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_standing_tone5',
        b'\xf0\x9f\xa7\x8d\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcd\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_student',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x8e\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83c\udf93',
        ),
    ),
    Unicode(
        'woman_student_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8e\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83c\udf93',
        ),
    ),
    Unicode(
        'woman_student_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8e\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83c\udf93',
        ),
    ),
    Unicode(
        'woman_student_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8e\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83c\udf93',
        ),
    ),
    Unicode(
        'woman_student_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8e\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83c\udf93',
        ),
    ),
    Unicode(
        'woman_student_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8e\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83c\udf93',
        ),
    ),
    Unicode(
        'woman_superhero',
        b'\xf0\x9f\xa6\xb8\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb8\u200d♀️',
        ),
    ),
    Unicode(
        'woman_superhero_tone1',
        b'\xf0\x9f\xa6\xb8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb8\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_superhero_tone2',
        b'\xf0\x9f\xa6\xb8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb8\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_superhero_tone3',
        b'\xf0\x9f\xa6\xb8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb8\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_superhero_tone4',
        b'\xf0\x9f\xa6\xb8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb8\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_superhero_tone5',
        b'\xf0\x9f\xa6\xb8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb8\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_supervillain',
        b'\xf0\x9f\xa6\xb9\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb9\u200d♀️',
        ),
    ),
    Unicode(
        'woman_supervillain_tone1',
        b'\xf0\x9f\xa6\xb9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb9\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_supervillain_tone2',
        b'\xf0\x9f\xa6\xb9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb9\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_supervillain_tone3',
        b'\xf0\x9f\xa6\xb9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb9\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_supervillain_tone4',
        b'\xf0\x9f\xa6\xb9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb9\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_supervillain_tone5',
        b'\xf0\x9f\xa6\xb9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddb9\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_surfing',
        b'\xf0\x9f\x8f\x84\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc4\u200d♀️',
        ),
    ),
    Unicode(
        'woman_surfing_tone1',
        b'\xf0\x9f\x8f\x84\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc4\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_surfing_tone2',
        b'\xf0\x9f\x8f\x84\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc4\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_surfing_tone3',
        b'\xf0\x9f\x8f\x84\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc4\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_surfing_tone4',
        b'\xf0\x9f\x8f\x84\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc4\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_surfing_tone5',
        b'\xf0\x9f\x8f\x84\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfc4\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_swimming',
        b'\xf0\x9f\x8f\x8a\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfca\u200d♀️',
        ),
    ),
    Unicode(
        'woman_swimming_tone1',
        b'\xf0\x9f\x8f\x8a\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfca\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_swimming_tone2',
        b'\xf0\x9f\x8f\x8a\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfca\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_swimming_tone3',
        b'\xf0\x9f\x8f\x8a\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfca\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_swimming_tone4',
        b'\xf0\x9f\x8f\x8a\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfca\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_swimming_tone5',
        b'\xf0\x9f\x8f\x8a\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udfca\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_teacher',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x8f\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83c\udfeb',
        ),
    ),
    Unicode(
        'woman_teacher_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8f\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83c\udfeb',
        ),
    ),
    Unicode(
        'woman_teacher_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8f\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83c\udfeb',
        ),
    ),
    Unicode(
        'woman_teacher_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8f\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83c\udfeb',
        ),
    ),
    Unicode(
        'woman_teacher_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8f\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83c\udfeb',
        ),
    ),
    Unicode(
        'woman_teacher_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8f\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83c\udfeb',
        ),
    ),
    Unicode(
        'woman_technologist',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x92\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83d\udcbb',
        ),
    ),
    Unicode(
        'woman_technologist_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x92\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83d\udcbb',
        ),
    ),
    Unicode(
        'woman_technologist_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x92\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83d\udcbb',
        ),
    ),
    Unicode(
        'woman_technologist_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x92\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83d\udcbb',
        ),
    ),
    Unicode(
        'woman_technologist_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x92\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb',
        ),
    ),
    Unicode(
        'woman_technologist_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x92\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83d\udcbb',
        ),
    ),
    Unicode(
        'woman_tipping_hand',
        b'\xf0\x9f\x92\x81\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc81\u200d♀️',
        ),
    ),
    Unicode(
        'woman_tipping_hand_tone1',
        b'\xf0\x9f\x92\x81\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc81\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_tipping_hand_tone2',
        b'\xf0\x9f\x92\x81\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc81\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_tipping_hand_tone3',
        b'\xf0\x9f\x92\x81\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc81\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_tipping_hand_tone4',
        b'\xf0\x9f\x92\x81\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc81\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_tipping_hand_tone5',
        b'\xf0\x9f\x92\x81\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc81\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_vampire',
        b'\xf0\x9f\xa7\x9b\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_vampire_tone1',
        b'\xf0\x9f\xa7\x9b\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddb\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_vampire_tone2',
        b'\xf0\x9f\xa7\x9b\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddb\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_vampire_tone3',
        b'\xf0\x9f\xa7\x9b\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddb\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_vampire_tone4',
        b'\xf0\x9f\xa7\x9b\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddb\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_vampire_tone5',
        b'\xf0\x9f\xa7\x9b\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddb\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_walking',
        b'\xf0\x9f\x9a\xb6\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb6\u200d♀️',
        ),
    ),
    Unicode(
        'woman_walking_tone1',
        b'\xf0\x9f\x9a\xb6\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb6\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_walking_tone2',
        b'\xf0\x9f\x9a\xb6\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb6\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_walking_tone3',
        b'\xf0\x9f\x9a\xb6\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb6\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_walking_tone4',
        b'\xf0\x9f\x9a\xb6\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb6\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_walking_tone5',
        b'\xf0\x9f\x9a\xb6\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udeb6\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_wearing_turban',
        b'\xf0\x9f\x91\xb3\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc73\u200d♀️',
        ),
    ),
    Unicode(
        'woman_wearing_turban_tone1',
        b'\xf0\x9f\x91\xb3\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc73\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_wearing_turban_tone2',
        b'\xf0\x9f\x91\xb3\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc73\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_wearing_turban_tone3',
        b'\xf0\x9f\x91\xb3\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc73\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_wearing_turban_tone4',
        b'\xf0\x9f\x91\xb3\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc73\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'woman_wearing_turban_tone5',
        b'\xf0\x9f\x91\xb3\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc73\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'woman_white_haired',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\xa6\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83e\uddb3',
        ),
    ),
    Unicode(
        'woman_white_haired_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xa6\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83e\uddb3',
        ),
    ),
    Unicode(
        'woman_white_haired_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xa6\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83e\uddb3',
        ),
    ),
    Unicode(
        'woman_white_haired_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xa6\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83e\uddb3',
        ),
    ),
    Unicode(
        'woman_white_haired_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xa6\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83e\uddb3',
        ),
    ),
    Unicode(
        'woman_white_haired_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xa6\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83e\uddb3',
        ),
    ),
    Unicode(
        'woman_with_headscarf',
        b'\xf0\x9f\xa7\x95'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd5',
        ),
    ),
    Unicode(
        'woman_with_headscarf_tone1',
        b'\xf0\x9f\xa7\x95\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd5\ud83c\udffb',
        ),
    ),
    Unicode(
        'woman_with_headscarf_tone2',
        b'\xf0\x9f\xa7\x95\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd5\ud83c\udffc',
        ),
    ),
    Unicode(
        'woman_with_headscarf_tone3',
        b'\xf0\x9f\xa7\x95\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd5\ud83c\udffd',
        ),
    ),
    Unicode(
        'woman_with_headscarf_tone4',
        b'\xf0\x9f\xa7\x95\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd5\ud83c\udffe',
        ),
    ),
    Unicode(
        'woman_with_headscarf_tone5',
        b'\xf0\x9f\xa7\x95\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd5\ud83c\udfff',
        ),
    ),
    Unicode(
        'woman_with_probing_cane',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\xa6\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83e\uddaf',
        ),
    ),
    Unicode(
        'woman_with_probing_cane_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xa6\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83e\uddaf',
        ),
    ),
    Unicode(
        'woman_with_probing_cane_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xa6\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83e\uddaf',
        ),
    ),
    Unicode(
        'woman_with_probing_cane_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xa6\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83e\uddaf',
        ),
    ),
    Unicode(
        'woman_with_probing_cane_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xa6\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83e\uddaf',
        ),
    ),
    Unicode(
        'woman_with_probing_cane_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xa6\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83e\uddaf',
        ),
    ),
    Unicode(
        'woman_zombie',
        b'\xf0\x9f\xa7\x9f\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddf\u200d♀️',
        ),
    ),
    Unicode(
        'womans_flat_shoe',
        b'\xf0\x9f\xa5\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd7f',
        ),
    ),
    Unicode(
        'women_with_bunny_ears_partying',
        b'\xf0\x9f\x91\xaf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6f\u200d♀️',
        ),
    ),
    Unicode(
        'women_wrestling',
        b'\xf0\x9f\xa4\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd3c\u200d♀️',
        ),
    ),
    Unicode(
        'woozy_face',
        b'\xf0\x9f\xa5\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd74',
        ),
    ),
    Unicode(
        'writing_hand',
        b'\xe2\x9c\x8d\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'yarn',
        b'\xf0\x9f\xa7\xb6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddf6',
        ),
    ),
    Unicode(
        'yawning_face',
        b'\xf0\x9f\xa5\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd71',
        ),
    ),
    Unicode(
        'yellow_circle',
        b'\xf0\x9f\x9f\xa1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udfe1',
        ),
    ),
    Unicode(
        'yellow_square',
        b'\xf0\x9f\x9f\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udfe8',
        ),
    ),
    Unicode(
        'yin_yang',
        b'\xe2\x98\xaf\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'yo_yo',
        b'\xf0\x9f\xaa\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude80',
        ),
    ),
    Unicode(
        'zany_face',
        b'\xf0\x9f\xa4\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd2a',
        ),
    ),
    Unicode(
        'zebra',
        b'\xf0\x9f\xa6\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd93',
        ),
    ),
    Unicode(
        'zero',
        b'0\xef\xb8\x8f\xe2\x83\xa3'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'zombie',
        b'\xf0\x9f\xa7\x9f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udddf',
        ),
    ),
    Unicode(
        'technologist_tone4',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x92\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83d\udcbb',
        ),
    ),
    Unicode(
        'firefighter_tone4',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x9a\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83d\ude92',
        ),
    ),
    Unicode(
        'man_feeding_baby_tone4',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8d\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83c\udf7c',
        ),
    ),
    Unicode(
        'man_feeding_baby_tone5',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8d\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83c\udf7c',
        ),
    ),
    Unicode(
        'technologist_tone5',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x92\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83d\udcbb',
        ),
    ),
    Unicode(
        'firefighter_tone5',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x9a\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83d\ude92',
        ),
    ),
    Unicode(
        'women_holding_hands_tone1',
        b'\xf0\x9f\x91\xad\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6d\ud83c\udffb',
        ),
    ),
    Unicode(
        'women_holding_hands_tone1_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c\udffc',
        ),
    ),
    Unicode(
        'sewing_needle',
        b'\xf0\x9f\xaa\xa1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udea1',
        ),
    ),
    Unicode(
        'technologist',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xf0\x9f\x92\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d\ud83d\udcbb',
        ),
    ),
    Unicode(
        'women_holding_hands_tone1_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c\udffd',
        ),
    ),
    Unicode(
        'women_holding_hands_tone1_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c\udffe',
        ),
    ),
    Unicode(
        'technologist_tone1',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x92\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83d\udcbb',
        ),
    ),
    Unicode(
        'technologist_tone2',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x92\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83d\udcbb',
        ),
    ),
    Unicode(
        'women_holding_hands_tone1_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c\udfff',
        ),
    ),
    Unicode(
        'plunger',
        b'\xf0\x9f\xaa\xa0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udea0',
        ),
    ),
    Unicode(
        'technologist_tone3',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x92\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83d\udcbb',
        ),
    ),
    Unicode(
        'women_holding_hands_tone2_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c\udffb',
        ),
    ),
    Unicode(
        'women_holding_hands_tone2',
        b'\xf0\x9f\x91\xad\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6d\ud83c\udffc',
        ),
    ),
    Unicode(
        'bucket',
        b'\xf0\x9f\xaa\xa3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udea3',
        ),
    ),
    Unicode(
        'women_holding_hands_tone2_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c\udffd',
        ),
    ),
    Unicode(
        'person_tone3_curly_hair',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xa6\xb1'.decode('utf8'),
        False,
        (
            'person_medium_skin_tone_curly_hair',
        ),
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83e\uddb1',
        ),
    ),
    Unicode(
        'firefighter',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xf0\x9f\x9a\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d\ud83d\ude92',
        ),
    ),
    Unicode(
        'women_holding_hands_tone2_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c\udffe',
        ),
    ),
    Unicode(
        'person_tone5_curly_hair',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xa6\xb1'.decode('utf8'),
        False,
        (
            'person_dark_skin_tone_curly_hair',
        ),
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83e\uddb1',
        ),
    ),
    Unicode(
        'women_holding_hands_tone2_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c\udfff',
        ),
    ),
    Unicode(
        'firefighter_tone1',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x9a\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83d\ude92',
        ),
    ),
    Unicode(
        'man_feeding_baby',
        b'\xf0\x9f\x91\xa8\xe2\x80\x8d\xf0\x9f\x8d\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\u200d\ud83c\udf7c',
        ),
    ),
    Unicode(
        'women_holding_hands_tone3_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c\udffb',
        ),
    ),
    Unicode(
        'firefighter_tone2',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x9a\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83d\ude92',
        ),
    ),
    Unicode(
        'firefighter_tone3',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x9a\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83d\ude92',
        ),
    ),
    Unicode(
        'man_feeding_baby_tone1',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8d\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83c\udf7c',
        ),
    ),
    Unicode(
        'women_holding_hands_tone3_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c\udffc',
        ),
    ),
    Unicode(
        'man_feeding_baby_tone2',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8d\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83c\udf7c',
        ),
    ),
    Unicode(
        'women_holding_hands_tone3',
        b'\xf0\x9f\x91\xad\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6d\ud83c\udffd',
        ),
    ),
    Unicode(
        'man_feeding_baby_tone3',
        b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8d\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83c\udf7c',
        ),
    ),
    Unicode(
        'women_holding_hands_tone3_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c\udffe',
        ),
    ),
    Unicode(
        'women_holding_hands_tone3_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c\udfff',
        ),
    ),
    Unicode(
        'women_holding_hands_tone4_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c\udffb',
        ),
    ),
    Unicode(
        'women_holding_hands_tone4_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c\udffc',
        ),
    ),
    Unicode(
        'teacher_tone3',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8f\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83c\udfeb',
        ),
    ),
    Unicode(
        'women_holding_hands_tone4_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c\udffd',
        ),
    ),
    Unicode(
        'teacher_tone5',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8f\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83c\udfeb',
        ),
    ),
    Unicode(
        'women_holding_hands_tone4',
        b'\xf0\x9f\x91\xad\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6d\ud83c\udffe',
        ),
    ),
    Unicode(
        'women_holding_hands_tone4_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c\udfff',
        ),
    ),
    Unicode(
        'women_holding_hands_tone5_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c\udffb',
        ),
    ),
    Unicode(
        'women_holding_hands_tone5_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c\udffc',
        ),
    ),
    Unicode(
        'women_holding_hands_tone5_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c\udffd',
        ),
    ),
    Unicode(
        'women_holding_hands_tone5_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c\udffe',
        ),
    ),
    Unicode(
        'women_holding_hands_tone5',
        b'\xf0\x9f\x91\xad\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6d\ud83c\udfff',
        ),
    ),
    Unicode(
        'person_curly_hair',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xf0\x9f\xa6\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d\ud83e\uddb1',
        ),
    ),
    Unicode(
        'person_tone1_curly_hair',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xa6\xb1'.decode('utf8'),
        False,
        (
            'person_light_skin_tone_curly_hair',
        ),
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83e\uddb1',
        ),
    ),
    Unicode(
        'mouse_trap',
        b'\xf0\x9f\xaa\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udea4',
        ),
    ),
    Unicode(
        'person_tone2_curly_hair',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xa6\xb1'.decode('utf8'),
        False,
        (
            'person_medium_light_skin_tone_curly_hair',
        ),
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83e\uddb1',
        ),
    ),
    Unicode(
        'person_tone4_curly_hair',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xa6\xb1'.decode('utf8'),
        False,
        (
            'person_medium_dark_skin_tone_curly_hair',
        ),
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83e\uddb1',
        ),
    ),
    Unicode(
        'piñata',
        b'\xf0\x9f\xaa\x85'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude85',
        ),
    ),
    Unicode(
        'teacher',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xf0\x9f\x8f\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d\ud83c\udfeb',
        ),
    ),
    Unicode(
        'nesting_dolls',
        b'\xf0\x9f\xaa\x86'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude86',
        ),
    ),
    Unicode(
        'teacher_tone1',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8f\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83c\udfeb',
        ),
    ),
    Unicode(
        'seal',
        b'\xf0\x9f\xa6\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddad',
        ),
    ),
    Unicode(
        'teacher_tone2',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8f\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83c\udfeb',
        ),
    ),
    Unicode(
        'teacher_tone4',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8f\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83c\udfeb',
        ),
    ),
    Unicode(
        'mammoth',
        b'\xf0\x9f\xa6\xa3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udda3',
        ),
    ),
    Unicode(
        'bison',
        b'\xf0\x9f\xa6\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddac',
        ),
    ),
    Unicode(
        'window',
        b'\xf0\x9f\xaa\x9f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude9f',
        ),
    ),
    Unicode(
        'man_with_veil_tone4',
        b'\xf0\x9f\x91\xb0\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc70\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_with_veil_tone5',
        b'\xf0\x9f\x91\xb0\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc70\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'health_worker_tone3',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9a\x95\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d⚕️',
        ),
    ),
    Unicode(
        'health_worker_tone5',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9a\x95\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d⚕️',
        ),
    ),
    Unicode(
        'man_with_veil',
        b'\xf0\x9f\x91\xb0\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc70\u200d♂️',
        ),
    ),
    Unicode(
        'man_with_veil_tone1',
        b'\xf0\x9f\x91\xb0\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc70\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_with_veil_tone2',
        b'\xf0\x9f\x91\xb0\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc70\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_with_veil_tone3',
        b'\xf0\x9f\x91\xb0\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc70\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'health_worker',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xe2\x9a\x95\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d⚕️',
        ),
    ),
    Unicode(
        'health_worker_tone1',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9a\x95\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d⚕️',
        ),
    ),
    Unicode(
        'health_worker_tone2',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9a\x95\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d⚕️',
        ),
    ),
    Unicode(
        'health_worker_tone4',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9a\x95\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d⚕️',
        ),
    ),
    Unicode(
        'scientist_tone3',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x94\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83d\udd2c',
        ),
    ),
    Unicode(
        'scientist_tone5',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x94\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83d\udd2c',
        ),
    ),
    Unicode(
        'woman_in_tuxedo_tone4',
        b'\xf0\x9f\xa4\xb5\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd35\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'scientist',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xf0\x9f\x94\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d\ud83d\udd2c',
        ),
    ),
    Unicode(
        'woman_in_tuxedo_tone5',
        b'\xf0\x9f\xa4\xb5\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd35\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'scientist_tone1',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x94\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83d\udd2c',
        ),
    ),
    Unicode(
        'scientist_tone2',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x94\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83d\udd2c',
        ),
    ),
    Unicode(
        'scientist_tone4',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x94\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83d\udd2c',
        ),
    ),
    Unicode(
        'judge_tone4',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9a\x96\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d⚖️',
        ),
    ),
    Unicode(
        'person_tone4_white_hair',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xa6\xb3'.decode('utf8'),
        False,
        (
            'person_medium_dark_skin_tone_white_hair',
        ),
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83e\uddb3',
        ),
    ),
    Unicode(
        'judge_tone5',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9a\x96\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d⚖️',
        ),
    ),
    Unicode(
        'person_tone5_white_hair',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xa6\xb3'.decode('utf8'),
        False,
        (
            'person_dark_skin_tone_white_hair',
        ),
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83e\uddb3',
        ),
    ),
    Unicode(
        'woman_in_tuxedo_tone3',
        b'\xf0\x9f\xa4\xb5\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd35\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'judge_tone3',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9a\x96\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d⚖️',
        ),
    ),
    Unicode(
        'person_in_manual_wheelchair',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xf0\x9f\xa6\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d\ud83e\uddbd',
        ),
    ),
    Unicode(
        'person_in_manual_wheelchair_tone1',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xa6\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83e\uddbd',
        ),
    ),
    Unicode(
        'person_in_manual_wheelchair_tone2',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xa6\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83e\uddbd',
        ),
    ),
    Unicode(
        'feather',
        b'\xf0\x9f\xaa\xb6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udeb6',
        ),
    ),
    Unicode(
        'elevator',
        b'\xf0\x9f\x9b\x97'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\uded7',
        ),
    ),
    Unicode(
        'rock',
        b'\xf0\x9f\xaa\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udea8',
        ),
    ),
    Unicode(
        'wood',
        b'\xf0\x9f\xaa\xb5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udeb5',
        ),
    ),
    Unicode(
        'potted_plant',
        b'\xf0\x9f\xaa\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udeb4',
        ),
    ),
    Unicode(
        'beaver',
        b'\xf0\x9f\xa6\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddab',
        ),
    ),
    Unicode(
        'person_tone3_red_hair',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xa6\xb0'.decode('utf8'),
        False,
        (
            'person_medium_skin_tone_red_hair',
        ),
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83e\uddb0',
        ),
    ),
    Unicode(
        'person_tone5_red_hair',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xa6\xb0'.decode('utf8'),
        False,
        (
            'person_dark_skin_tone_red_hair',
        ),
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83e\uddb0',
        ),
    ),
    Unicode(
        'factory_worker_tone3',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8f\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83c\udfed',
        ),
    ),
    Unicode(
        'factory_worker_tone5',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8f\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83c\udfed',
        ),
    ),
    Unicode(
        'tamale',
        b'\xf0\x9f\xab\x94'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uded4',
        ),
    ),
    Unicode(
        'person_red_hair',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xf0\x9f\xa6\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d\ud83e\uddb0',
        ),
    ),
    Unicode(
        'person_tone1_red_hair',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xa6\xb0'.decode('utf8'),
        False,
        (
            'person_light_skin_tone_red_hair',
        ),
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83e\uddb0',
        ),
    ),
    Unicode(
        'fondue',
        b'\xf0\x9f\xab\x95'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uded5',
        ),
    ),
    Unicode(
        'person_tone2_red_hair',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xa6\xb0'.decode('utf8'),
        False,
        (
            'person_medium_light_skin_tone_red_hair',
        ),
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83e\uddb0',
        ),
    ),
    Unicode(
        'person_tone4_red_hair',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xa6\xb0'.decode('utf8'),
        False,
        (
            'person_medium_dark_skin_tone_red_hair',
        ),
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83e\uddb0',
        ),
    ),
    Unicode(
        'black_cat',
        b'\xf0\x9f\x90\x88\xe2\x80\x8d\xe2\xac\x9b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc08\u200d⬛',
        ),
    ),
    Unicode(
        'factory_worker',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xf0\x9f\x8f\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d\ud83c\udfed',
        ),
    ),
    Unicode(
        'factory_worker_tone1',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8f\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83c\udfed',
        ),
    ),
    Unicode(
        'factory_worker_tone2',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8f\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83c\udfed',
        ),
    ),
    Unicode(
        'factory_worker_tone4',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8f\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83c\udfed',
        ),
    ),
    Unicode(
        'person_in_motorized_wheelchair_tone4',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xa6\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83e\uddbc',
        ),
    ),
    Unicode(
        'person_white_hair',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xf0\x9f\xa6\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d\ud83e\uddb3',
        ),
    ),
    Unicode(
        'student_tone4',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8e\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83c\udf93',
        ),
    ),
    Unicode(
        'office_worker_tone4',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x92\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83d\udcbc',
        ),
    ),
    Unicode(
        'office_worker_tone5',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x92\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83d\udcbc',
        ),
    ),
    Unicode(
        'judge',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xe2\x9a\x96\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d⚖️',
        ),
    ),
    Unicode(
        'woman_in_tuxedo',
        b'\xf0\x9f\xa4\xb5\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd35\u200d♀️',
        ),
    ),
    Unicode(
        'woman_in_tuxedo_tone1',
        b'\xf0\x9f\xa4\xb5\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd35\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'person_in_motorized_wheelchair_tone5',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xa6\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83e\uddbc',
        ),
    ),
    Unicode(
        'person_tone1_white_hair',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xa6\xb3'.decode('utf8'),
        False,
        (
            'person_light_skin_tone_white_hair',
        ),
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83e\uddb3',
        ),
    ),
    Unicode(
        'judge_tone1',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9a\x96\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d⚖️',
        ),
    ),
    Unicode(
        'person_tone2_white_hair',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xa6\xb3'.decode('utf8'),
        False,
        (
            'person_medium_light_skin_tone_white_hair',
        ),
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83e\uddb3',
        ),
    ),
    Unicode(
        'student_tone5',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8e\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83c\udf93',
        ),
    ),
    Unicode(
        'judge_tone2',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9a\x96\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d⚖️',
        ),
    ),
    Unicode(
        'woman_in_tuxedo_tone2',
        b'\xf0\x9f\xa4\xb5\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd35\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'person_tone3_white_hair',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xa6\xb3'.decode('utf8'),
        False,
        (
            'person_medium_skin_tone_white_hair',
        ),
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83e\uddb3',
        ),
    ),
    Unicode(
        'student',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xf0\x9f\x8e\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d\ud83c\udf93',
        ),
    ),
    Unicode(
        'man_in_tuxedo_tone3',
        b'\xf0\x9f\xa4\xb5\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        True,
        None,
        None,
        (
            '\ud83e\udd35\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'student_tone1',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8e\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83c\udf93',
        ),
    ),
    Unicode(
        'man_in_tuxedo_tone5',
        b'\xf0\x9f\xa4\xb5\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        True,
        None,
        None,
        (
            '\ud83e\udd35\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'person_in_motorized_wheelchair',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xf0\x9f\xa6\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d\ud83e\uddbc',
        ),
    ),
    Unicode(
        'student_tone2',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8e\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83c\udf93',
        ),
    ),
    Unicode(
        'student_tone3',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8e\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83c\udf93',
        ),
    ),
    Unicode(
        'person_in_motorized_wheelchair_tone1',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xa6\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83e\uddbc',
        ),
    ),
    Unicode(
        'person_in_motorized_wheelchair_tone2',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xa6\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83e\uddbc',
        ),
    ),
    Unicode(
        'person_in_motorized_wheelchair_tone3',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xa6\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83e\uddbc',
        ),
    ),
    Unicode(
        'farmer_tone3',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8c\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83c\udf3e',
        ),
    ),
    Unicode(
        'farmer_tone5',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8c\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83c\udf3e',
        ),
    ),
    Unicode(
        'office_worker',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xf0\x9f\x92\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d\ud83d\udcbc',
        ),
    ),
    Unicode(
        'carpentry_saw',
        b'\xf0\x9f\xaa\x9a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude9a',
        ),
    ),
    Unicode(
        'office_worker_tone1',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x92\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83d\udcbc',
        ),
    ),
    Unicode(
        'office_worker_tone2',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x92\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83d\udcbc',
        ),
    ),
    Unicode(
        'pickup_truck',
        b'\xf0\x9f\x9b\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udefb',
        ),
    ),
    Unicode(
        'office_worker_tone3',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x92\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83d\udcbc',
        ),
    ),
    Unicode(
        'person_with_probing_cane_tone3',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xa6\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83e\uddaf',
        ),
    ),
    Unicode(
        'person_with_probing_cane_tone5',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xa6\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83e\uddaf',
        ),
    ),
    Unicode(
        'man_in_tuxedo',
        b'\xf0\x9f\xa4\xb5\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        True,
        None,
        None,
        (
            '\ud83e\udd35\u200d♂️',
        ),
    ),
    Unicode(
        'headstone',
        b'\xf0\x9f\xaa\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udea6',
        ),
    ),
    Unicode(
        'man_in_tuxedo_tone1',
        b'\xf0\x9f\xa4\xb5\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        True,
        None,
        None,
        (
            '\ud83e\udd35\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'man_in_tuxedo_tone2',
        b'\xf0\x9f\xa4\xb5\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        True,
        None,
        None,
        (
            '\ud83e\udd35\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'man_in_tuxedo_tone4',
        b'\xf0\x9f\xa4\xb5\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        True,
        None,
        None,
        (
            '\ud83e\udd35\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'magic_wand',
        b'\xf0\x9f\xaa\x84'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude84',
        ),
    ),
    Unicode(
        'farmer',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xf0\x9f\x8c\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d\ud83c\udf3e',
        ),
    ),
    Unicode(
        'farmer_tone1',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8c\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83c\udf3e',
        ),
    ),
    Unicode(
        'farmer_tone2',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8c\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83c\udf3e',
        ),
    ),
    Unicode(
        'farmer_tone4',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8c\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83c\udf3e',
        ),
    ),
    Unicode(
        'roller_skate',
        b'\xf0\x9f\x9b\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udefc',
        ),
    ),
    Unicode(
        'long_drum',
        b'\xf0\x9f\xaa\x98'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude98',
        ),
    ),
    Unicode(
        'person_with_probing_cane',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xf0\x9f\xa6\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d\ud83e\uddaf',
        ),
    ),
    Unicode(
        'person_with_probing_cane_tone1',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xa6\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83e\uddaf',
        ),
    ),
    Unicode(
        'person_with_probing_cane_tone2',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xa6\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83e\uddaf',
        ),
    ),
    Unicode(
        'person_with_probing_cane_tone4',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xa6\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83e\uddaf',
        ),
    ),
    Unicode(
        'artist_tone3',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8e\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83c\udfa8',
        ),
    ),
    Unicode(
        'artist_tone5',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8e\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83c\udfa8',
        ),
    ),
    Unicode(
        'accordion',
        b'\xf0\x9f\xaa\x97'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude97',
        ),
    ),
    Unicode(
        'boomerang',
        b'\xf0\x9f\xaa\x83'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude83',
        ),
    ),
    Unicode(
        'hook',
        b'\xf0\x9f\xaa\x9d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude9d',
        ),
    ),
    Unicode(
        'knot',
        b'\xf0\x9f\xaa\xa2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udea2',
        ),
    ),
    Unicode(
        'artist',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xf0\x9f\x8e\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d\ud83c\udfa8',
        ),
    ),
    Unicode(
        'artist_tone1',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8e\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83c\udfa8',
        ),
    ),
    Unicode(
        'artist_tone2',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8e\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83c\udfa8',
        ),
    ),
    Unicode(
        'artist_tone4',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8e\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83c\udfa8',
        ),
    ),
    Unicode(
        'men_holding_hands_tone1',
        b'\xf0\x9f\x91\xac\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6c\ud83c\udffb',
        ),
    ),
    Unicode(
        'men_holding_hands_tone1_tone2',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'men_holding_hands_tone1_tone3',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'men_holding_hands_tone1_tone4',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'transgender_flag',
        b'\xf0\x9f\x8f\xb3\xef\xb8\x8f\xe2\x80\x8d\xe2\x9a\xa7\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83c\udff3️\u200d⚧️',
        ),
    ),
    Unicode(
        'pilot_tone3',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9c\x88\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d✈️',
        ),
    ),
    Unicode(
        'men_holding_hands_tone1_tone5',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'thong_sandal',
        b'\xf0\x9f\xa9\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude74',
        ),
    ),
    Unicode(
        'pilot_tone5',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9c\x88\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d✈️',
        ),
    ),
    Unicode(
        'men_holding_hands_tone2_tone1',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'men_holding_hands_tone2',
        b'\xf0\x9f\x91\xac\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6c\ud83c\udffc',
        ),
    ),
    Unicode(
        'men_holding_hands_tone2_tone3',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'men_holding_hands_tone2_tone4',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'olive',
        b'\xf0\x9f\xab\x92'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uded2',
        ),
    ),
    Unicode(
        'men_holding_hands_tone2_tone5',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'men_holding_hands_tone3_tone1',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'men_holding_hands_tone3_tone2',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'bell_pepper',
        b'\xf0\x9f\xab\x91'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uded1',
        ),
    ),
    Unicode(
        'men_holding_hands_tone3',
        b'\xf0\x9f\x91\xac\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6c\ud83c\udffd',
        ),
    ),
    Unicode(
        'men_holding_hands_tone3_tone4',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'men_holding_hands_tone3_tone5',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'men_holding_hands_tone4_tone1',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'men_holding_hands_tone4_tone2',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'blueberries',
        b'\xf0\x9f\xab\x90'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uded0',
        ),
    ),
    Unicode(
        'pilot',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xe2\x9c\x88\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d✈️',
        ),
    ),
    Unicode(
        'men_holding_hands_tone4_tone3',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'men_holding_hands_tone4',
        b'\xf0\x9f\x91\xac\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6c\ud83c\udffe',
        ),
    ),
    Unicode(
        'pilot_tone1',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9c\x88\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d✈️',
        ),
    ),
    Unicode(
        'men_holding_hands_tone4_tone5',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'pilot_tone2',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9c\x88\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d✈️',
        ),
    ),
    Unicode(
        'pilot_tone4',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9c\x88\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d✈️',
        ),
    ),
    Unicode(
        'men_holding_hands_tone5_tone1',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'men_holding_hands_tone5_tone2',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'men_holding_hands_tone5_tone3',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'men_holding_hands_tone5_tone4',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'men_holding_hands_tone5',
        b'\xf0\x9f\x91\xac\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6c\ud83c\udfff',
        ),
    ),
    Unicode(
        'military_helmet',
        b'\xf0\x9f\xaa\x96'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude96',
        ),
    ),
    Unicode(
        'teapot',
        b'\xf0\x9f\xab\x96'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uded6',
        ),
    ),
    Unicode(
        'bubble_tea',
        b'\xf0\x9f\xa7\x8b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcb',
        ),
    ),
    Unicode(
        'ninja_tone4',
        b'\xf0\x9f\xa5\xb7\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd77\ud83c\udffe',
        ),
    ),
    Unicode(
        'ninja_tone5',
        b'\xf0\x9f\xa5\xb7\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd77\ud83c\udfff',
        ),
    ),
    Unicode(
        'smiling_face_with_tear',
        b'\xf0\x9f\xa5\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd72',
        ),
    ),
    Unicode(
        'singer_tone3',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8e\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83c\udfa4',
        ),
    ),
    Unicode(
        'singer_tone5',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8e\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83c\udfa4',
        ),
    ),
    Unicode(
        'ninja',
        b'\xf0\x9f\xa5\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd77',
        ),
    ),
    Unicode(
        'ninja_tone1',
        b'\xf0\x9f\xa5\xb7\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd77\ud83c\udffb',
        ),
    ),
    Unicode(
        'person_feeding_baby_tone3',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8d\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83c\udf7c',
        ),
    ),
    Unicode(
        'ladder',
        b'\xf0\x9f\xaa\x9c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude9c',
        ),
    ),
    Unicode(
        'ninja_tone2',
        b'\xf0\x9f\xa5\xb7\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd77\ud83c\udffc',
        ),
    ),
    Unicode(
        'person_feeding_baby_tone5',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8d\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83c\udf7c',
        ),
    ),
    Unicode(
        'ninja_tone3',
        b'\xf0\x9f\xa5\xb7\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd77\ud83c\udffd',
        ),
    ),
    Unicode(
        'screwdriver',
        b'\xf0\x9f\xaa\x9b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude9b',
        ),
    ),
    Unicode(
        'mx_claus_tone3',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8e\x84'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83c\udf84',
        ),
    ),
    Unicode(
        'mx_claus_tone5',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8e\x84'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83c\udf84',
        ),
    ),
    Unicode(
        'person_in_manual_wheelchair_tone3',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xa6\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83e\uddbd',
        ),
    ),
    Unicode(
        'singer',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xf0\x9f\x8e\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d\ud83c\udfa4',
        ),
    ),
    Unicode(
        'singer_tone1',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8e\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83c\udfa4',
        ),
    ),
    Unicode(
        'singer_tone2',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8e\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83c\udfa4',
        ),
    ),
    Unicode(
        'singer_tone4',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8e\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83c\udfa4',
        ),
    ),
    Unicode(
        'lungs',
        b'\xf0\x9f\xab\x81'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udec1',
        ),
    ),
    Unicode(
        'woman_with_veil_tone3',
        b'\xf0\x9f\x91\xb0\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc70\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'woman_with_veil_tone5',
        b'\xf0\x9f\x91\xb0\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc70\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'person_feeding_baby',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xf0\x9f\x8d\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d\ud83c\udf7c',
        ),
    ),
    Unicode(
        'flatbread',
        b'\xf0\x9f\xab\x93'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uded3',
        ),
    ),
    Unicode(
        'person_feeding_baby_tone1',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8d\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83c\udf7c',
        ),
    ),
    Unicode(
        'person_feeding_baby_tone2',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8d\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83c\udf7c',
        ),
    ),
    Unicode(
        'person_feeding_baby_tone4',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8d\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83c\udf7c',
        ),
    ),
    Unicode(
        'people_hugging',
        b'\xf0\x9f\xab\x82'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udec2',
        ),
    ),
    Unicode(
        'woman_feeding_baby_tone3',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8d\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83c\udf7c',
        ),
    ),
    Unicode(
        'woman_feeding_baby_tone5',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8d\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83c\udf7c',
        ),
    ),
    Unicode(
        'mx_claus',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xf0\x9f\x8e\x84'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d\ud83c\udf84',
        ),
    ),
    Unicode(
        'mx_claus_tone1',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8e\x84'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83c\udf84',
        ),
    ),
    Unicode(
        'mx_claus_tone2',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8e\x84'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83c\udf84',
        ),
    ),
    Unicode(
        'mx_claus_tone4',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8e\x84'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83c\udf84',
        ),
    ),
    Unicode(
        'woman_with_veil',
        b'\xf0\x9f\x91\xb0\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'bride_with_veil',
        ),
        None,
        (
            '\ud83d\udc70\u200d♀️',
        ),
    ),
    Unicode(
        'coin',
        b'\xf0\x9f\xaa\x99'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude99',
        ),
    ),
    Unicode(
        'woman_with_veil_tone1',
        b'\xf0\x9f\x91\xb0\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc70\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'people_holding_hands_tone4_tone2',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffc',
        ),
    ),
    Unicode(
        'woman_with_veil_tone2',
        b'\xf0\x9f\x91\xb0\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc70\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'people_holding_hands_tone4_tone3',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffd',
        ),
    ),
    Unicode(
        'woman_with_veil_tone4',
        b'\xf0\x9f\x91\xb0\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc70\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'people_holding_hands_tone4',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffe',
        ),
    ),
    Unicode(
        'people_holding_hands_tone4_tone5',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udfff',
        ),
    ),
    Unicode(
        'people_holding_hands_tone5_tone1',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffb',
        ),
    ),
    Unicode(
        'anatomical_heart',
        b'\xf0\x9f\xab\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udec0',
        ),
    ),
    Unicode(
        'woman_feeding_baby',
        b'\xf0\x9f\x91\xa9\xe2\x80\x8d\xf0\x9f\x8d\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\u200d\ud83c\udf7c',
        ),
    ),
    Unicode(
        'people_holding_hands_tone5_tone2',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffc',
        ),
    ),
    Unicode(
        'woman_feeding_baby_tone1',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8d\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83c\udf7c',
        ),
    ),
    Unicode(
        'people_holding_hands_tone5_tone3',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffd',
        ),
    ),
    Unicode(
        'woman_feeding_baby_tone2',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8d\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83c\udf7c',
        ),
    ),
    Unicode(
        'people_holding_hands_tone5_tone4',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffe',
        ),
    ),
    Unicode(
        'woman_feeding_baby_tone4',
        b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8d\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83c\udf7c',
        ),
    ),
    Unicode(
        'people_holding_hands_tone5',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udfff',
        ),
    ),
    Unicode(
        'pinched_fingers_tone3',
        b'\xf0\x9f\xa4\x8c\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd0c\ud83c\udffd',
        ),
    ),
    Unicode(
        'pinched_fingers_tone5',
        b'\xf0\x9f\xa4\x8c\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd0c\ud83c\udfff',
        ),
    ),
    Unicode(
        'cockroach',
        b'\xf0\x9f\xaa\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udeb3',
        ),
    ),
    Unicode(
        'beetle',
        b'\xf0\x9f\xaa\xb2'.decode('utf8'),
        True,
        None,
        None,
        (
            '\ud83e\udeb2',
        ),
    ),
    Unicode(
        'mechanic_tone3',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x94\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83d\udd27',
        ),
    ),
    Unicode(
        'mechanic_tone5',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x94\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83d\udd27',
        ),
    ),
    Unicode(
        'disguised_face',
        b'\xf0\x9f\xa5\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd78',
        ),
    ),
    Unicode(
        'pinched_fingers',
        b'\xf0\x9f\xa4\x8c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd0c',
        ),
    ),
    Unicode(
        'pinched_fingers_tone2',
        b'\xf0\x9f\xa4\x8c\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd0c\ud83c\udffc',
        ),
    ),
    Unicode(
        'fly',
        b'\xf0\x9f\xaa\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udeb0',
        ),
    ),
    Unicode(
        'pinched_fingers_tone1',
        b'\xf0\x9f\xa4\x8c\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd0c\ud83c\udffb',
        ),
    ),
    Unicode(
        'pinched_fingers_tone4',
        b'\xf0\x9f\xa4\x8c\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd0c\ud83c\udffe',
        ),
    ),
    Unicode(
        'placard',
        b'\xf0\x9f\xaa\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udea7',
        ),
    ),
    Unicode(
        'polar_bear',
        b'\xf0\x9f\x90\xbb\xe2\x80\x8d\xe2\x9d\x84\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc3b\u200d❄️',
        ),
    ),
    Unicode(
        'astronaut_tone3',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x9a\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83d\ude80',
        ),
    ),
    Unicode(
        'mechanic',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xf0\x9f\x94\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d\ud83d\udd27',
        ),
    ),
    Unicode(
        'astronaut_tone5',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x9a\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83d\ude80',
        ),
    ),
    Unicode(
        'mechanic_tone1',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x94\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83d\udd27',
        ),
    ),
    Unicode(
        'mechanic_tone2',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x94\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83d\udd27',
        ),
    ),
    Unicode(
        'mechanic_tone4',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x94\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83d\udd27',
        ),
    ),
    Unicode(
        'cook_tone3',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\x8d\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83c\udf73',
        ),
    ),
    Unicode(
        'cook_tone5',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\x8d\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83c\udf73',
        ),
    ),
    Unicode(
        'mirror',
        b'\xf0\x9f\xaa\x9e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude9e',
        ),
    ),
    Unicode(
        'astronaut',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xf0\x9f\x9a\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d\ud83d\ude80',
        ),
    ),
    Unicode(
        'toothbrush',
        b'\xf0\x9f\xaa\xa5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udea5',
        ),
    ),
    Unicode(
        'cook',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xf0\x9f\x8d\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d\ud83c\udf73',
        ),
    ),
    Unicode(
        'astronaut_tone1',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x9a\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83d\ude80',
        ),
    ),
    Unicode(
        'worm',
        b'\xf0\x9f\xaa\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udeb1',
        ),
    ),
    Unicode(
        'astronaut_tone2',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x9a\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83d\ude80',
        ),
    ),
    Unicode(
        'dodo',
        b'\xf0\x9f\xa6\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udda4',
        ),
    ),
    Unicode(
        'cook_tone1',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\x8d\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83c\udf73',
        ),
    ),
    Unicode(
        'astronaut_tone4',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x9a\x80'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83d\ude80',
        ),
    ),
    Unicode(
        'cook_tone2',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\x8d\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83c\udf73',
        ),
    ),
    Unicode(
        'cook_tone4',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\x8d\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83c\udf73',
        ),
    ),
    Unicode(
        'hut',
        b'\xf0\x9f\x9b\x96'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\uded6',
        ),
    ),
    Unicode(
        'person_tone4_bald',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xa6\xb2'.decode('utf8'),
        False,
        (
            'person_medium_dark_skin_tone_bald',
        ),
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83e\uddb2',
        ),
    ),
    Unicode(
        'person_tone5_bald',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xa6\xb2'.decode('utf8'),
        False,
        (
            'person_dark_skin_tone_bald',
        ),
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83e\uddb2',
        ),
    ),
    Unicode(
        'people_holding_hands_tone1_tone3',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffd',
        ),
    ),
    Unicode(
        'people_holding_hands_tone1_tone5',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udfff',
        ),
    ),
    Unicode(
        'person_bald',
        b'\xf0\x9f\xa7\x91\xe2\x80\x8d\xf0\x9f\xa6\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\u200d\ud83e\uddb2',
        ),
    ),
    Unicode(
        'people_holding_hands_tone2_tone1',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffb',
        ),
    ),
    Unicode(
        'people_holding_hands_tone2',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffc',
        ),
    ),
    Unicode(
        'people_holding_hands_tone2_tone3',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffd',
        ),
    ),
    Unicode(
        'person_tone1_bald',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xa6\xb2'.decode('utf8'),
        False,
        (
            'person_light_skin_tone_bald',
        ),
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83e\uddb2',
        ),
    ),
    Unicode(
        'person_tone2_bald',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xa6\xb2'.decode('utf8'),
        False,
        (
            'person_medium_light_skin_tone_bald',
        ),
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83e\uddb2',
        ),
    ),
    Unicode(
        'person_tone3_bald',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xa6\xb2'.decode('utf8'),
        False,
        (
            'person_medium_skin_tone_bald',
        ),
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83e\uddb2',
        ),
    ),
    Unicode(
        'people_holding_hands_tone2_tone4',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffe',
        ),
    ),
    Unicode(
        'transgender_symbol',
        b'\xe2\x9a\xa7'.decode('utf8'),
        False,
        None,
        None,
        None,
    ),
    Unicode(
        'people_holding_hands_tone2_tone5',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udfff',
        ),
    ),
    Unicode(
        'people_holding_hands_tone3_tone1',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffb',
        ),
    ),
    Unicode(
        'people_holding_hands_tone3_tone2',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffc',
        ),
    ),
    Unicode(
        'people_holding_hands_tone3',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffd',
        ),
    ),
    Unicode(
        'people_holding_hands_tone3_tone4',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffe',
        ),
    ),
    Unicode(
        'people_holding_hands_tone3_tone5',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udfff',
        ),
    ),
    Unicode(
        'people_holding_hands_tone4_tone1',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffb',
        ),
    ),
    Unicode(
        'people_holding_hands_tone1',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffb',
        ),
    ),
    Unicode(
        'people_holding_hands_tone1_tone2',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffc',
        ),
    ),
    Unicode(
        'people_holding_hands_tone1_tone4',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffe',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone1',
        b'\xf0\x9f\x91\xab\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6b\ud83c\udffb',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone1_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone1_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone1_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone1_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone2_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone2',
        b'\xf0\x9f\x91\xab\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6b\ud83c\udffc',
        ),
    ),
    Unicode(
        'person_in_manual_wheelchair_tone4',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xa6\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d\ud83e\uddbd',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone2_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'person_in_manual_wheelchair_tone5',
        b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xa6\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d\ud83e\uddbd',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone2_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone2_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone3_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone3_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone3',
        b'\xf0\x9f\x91\xab\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6b\ud83c\udffd',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone3_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone3_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone4_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone4_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone4_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone4',
        b'\xf0\x9f\x91\xab\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6b\ud83c\udffe',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone5',
        b'\xf0\x9f\x91\xab\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc6b\ud83c\udfff',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone4_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone5_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone5_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone5_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'woman_and_man_holding_hands_tone5_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f'
            b'\xa4\x9d\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'man_tone4_beard',
        b'\xf0\x9f\xa7\x94\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'man_medium_dark_skin_tone_beard',
        ),
        None,
        (
            '\ud83e\uddd4\ud83c\udffe\u200d♂️',
        ),
    ),
    Unicode(
        'man_tone5_beard',
        b'\xf0\x9f\xa7\x94\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'man_dark_skin_tone_beard',
        ),
        None,
        (
            '\ud83e\uddd4\ud83c\udfff\u200d♂️',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d❤️\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d❤️\u200d\ud83d\udc69\ud83c\udffb',
        ),
    ),
    Unicode(
        'kiss_person_person_tone5_tone4',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d❤️\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffe',
        ),
    ),
    Unicode(
        'couple_with_heart_tone1',
        b'\xf0\x9f\x92\x91\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc91\ud83c\udffb',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone1_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d❤️\u200d\ud83d\udc69\ud83c\udffc',
        ),
    ),
    Unicode(
        'kiss_tone1',
        b'\xf0\x9f\x92\x8f\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc8f\ud83c\udffb',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffb',
        ),
    ),
    Unicode(
        'couple_with_heart_person_person_tone1_tone2',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d❤️\u200d\ud83e\uddd1\ud83c\udffc',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone1_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d❤️\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'kiss_person_person_tone1_tone2',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d❤️\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffc',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone1_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffc',
        ),
    ),
    Unicode(
        'couple_with_heart_person_person_tone1_tone3',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d❤️\u200d\ud83e\uddd1\ud83c\udffd',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone1_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d❤️\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone1_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d❤️\u200d\ud83d\udc69\ud83c\udffd',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone1_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffd',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone1_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d❤️\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone1_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d❤️\u200d\ud83d\udc69\ud83c\udffe',
        ),
    ),
    Unicode(
        'kiss_person_person_tone1_tone3',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d❤️\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffd',
        ),
    ),
    Unicode(
        'couple_with_heart_person_person_tone1_tone4',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d❤️\u200d\ud83e\uddd1\ud83c\udffe',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone1_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d❤️\u200d\ud83d\udc69\ud83c\udfff',
        ),
    ),
    Unicode(
        'kiss_person_person_tone1_tone4',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d❤️\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffe',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone1_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffe',
        ),
    ),
    Unicode(
        'couple_with_heart_person_person_tone1_tone5',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d❤️\u200d\ud83e\uddd1\ud83c\udfff',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone1_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d❤️\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone2_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d❤️\u200d\ud83d\udc69\ud83c\udffb',
        ),
    ),
    Unicode(
        'kiss_person_person_tone1_tone5',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffb\u200d❤️\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udfff',
        ),
    ),
    Unicode(
        'couple_with_heart_person_person_tone2_tone1',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d❤️\u200d\ud83e\uddd1\ud83c\udffb',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone2_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d❤️\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone1_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udfff',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone2_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffb',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d❤️\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d❤️\u200d\ud83d\udc69\ud83c\udffc',
        ),
    ),
    Unicode(
        'kiss_person_person_tone2_tone1',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d❤️\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffb',
        ),
    ),
    Unicode(
        'man_beard',
        b'\xf0\x9f\xa7\x94\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd4\u200d♂️',
        ),
    ),
    Unicode(
        'couple_with_heart_tone2',
        b'\xf0\x9f\x92\x91\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc91\ud83c\udffc',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone2_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d❤️\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone2_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d❤️\u200d\ud83d\udc69\ud83c\udffd',
        ),
    ),
    Unicode(
        'couple_with_heart_person_person_tone2_tone3',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d❤️\u200d\ud83e\uddd1\ud83c\udffd',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone2_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d❤️\u200d\ud83d\udc69\ud83c\udffe',
        ),
    ),
    Unicode(
        'kiss_tone2',
        b'\xf0\x9f\x92\x8f\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc8f\ud83c\udffc',
        ),
    ),
    Unicode(
        'kiss_person_person_tone2_tone3',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d❤️\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffd',
        ),
    ),
    Unicode(
        'man_tone1_beard',
        b'\xf0\x9f\xa7\x94\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'man_light_skin_tone_beard',
        ),
        None,
        (
            '\ud83e\uddd4\ud83c\udffb\u200d♂️',
        ),
    ),
    Unicode(
        'couple_with_heart_person_person_tone2_tone4',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d❤️\u200d\ud83e\uddd1\ud83c\udffe',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone2_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d❤️\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'kiss_person_person_tone2_tone4',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d❤️\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffe',
        ),
    ),
    Unicode(
        'man_tone2_beard',
        b'\xf0\x9f\xa7\x94\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'man_medium_light_skin_tone_beard',
        ),
        None,
        (
            '\ud83e\uddd4\ud83c\udffc\u200d♂️',
        ),
    ),
    Unicode(
        'couple_with_heart_person_person_tone2_tone5',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d❤️\u200d\ud83e\uddd1\ud83c\udfff',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone2_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d❤️\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone2_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d❤️\u200d\ud83d\udc69\ud83c\udfff',
        ),
    ),
    Unicode(
        'man_tone3_beard',
        b'\xf0\x9f\xa7\x94\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x82\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'man_medium_skin_tone_beard',
        ),
        None,
        (
            '\ud83e\uddd4\ud83c\udffd\u200d♂️',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone3_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d❤️\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone3_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d❤️\u200d\ud83d\udc69\ud83c\udffb',
        ),
    ),
    Unicode(
        'kiss_person_person_tone2_tone5',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffc\u200d❤️\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udfff',
        ),
    ),
    Unicode(
        'couple_with_heart_person_person_tone3_tone1',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d❤️\u200d\ud83e\uddd1\ud83c\udffb',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone3_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d❤️\u200d\ud83d\udc69\ud83c\udffc',
        ),
    ),
    Unicode(
        'kiss_person_person_tone3_tone1',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d❤️\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffb',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone3_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffb',
        ),
    ),
    Unicode(
        'couple_with_heart_person_person_tone3_tone2',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d❤️\u200d\ud83e\uddd1\ud83c\udffc',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone3_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d❤️\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d❤️\u200d\ud83d\udc69\ud83c\udffd',
        ),
    ),
    Unicode(
        'kiss_person_person_tone3_tone2',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d❤️\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffc',
        ),
    ),
    Unicode(
        'couple_with_heart_tone3',
        b'\xf0\x9f\x92\x91\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc91\ud83c\udffd',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d❤️\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'kiss_tone3',
        b'\xf0\x9f\x92\x8f\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc8f\ud83c\udffd',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone3_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffc',
        ),
    ),
    Unicode(
        'woman_tone3_beard',
        b'\xf0\x9f\xa7\x94\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'woman_medium_skin_tone_beard',
        ),
        None,
        (
            '\ud83e\uddd4\ud83c\udffd\u200d♀️',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone3_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d❤️\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone3_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d❤️\u200d\ud83d\udc69\ud83c\udffe',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffd',
        ),
    ),
    Unicode(
        'woman_tone5_beard',
        b'\xf0\x9f\xa7\x94\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'woman_dark_skin_tone_beard',
        ),
        None,
        (
            '\ud83e\uddd4\ud83c\udfff\u200d♀️',
        ),
    ),
    Unicode(
        'couple_with_heart_person_person_tone3_tone4',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d❤️\u200d\ud83e\uddd1\ud83c\udffe',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone3_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d❤️\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone3_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d❤️\u200d\ud83d\udc69\ud83c\udfff',
        ),
    ),
    Unicode(
        'couple_with_heart_person_person_tone3_tone5',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d❤️\u200d\ud83e\uddd1\ud83c\udfff',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone4_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d❤️\u200d\ud83d\udc69\ud83c\udffb',
        ),
    ),
    Unicode(
        'kiss_person_person_tone3_tone4',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d❤️\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffe',
        ),
    ),
    Unicode(
        'kiss_person_person_tone3_tone5',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffd\u200d❤️\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udfff',
        ),
    ),
    Unicode(
        'couple_with_heart_person_person_tone4_tone1',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d❤️\u200d\ud83e\uddd1\ud83c\udffb',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone4_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d❤️\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone4_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d❤️\u200d\ud83d\udc69\ud83c\udffc',
        ),
    ),
    Unicode(
        'kiss_person_person_tone4_tone1',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d❤️\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffb',
        ),
    ),
    Unicode(
        'couple_with_heart_person_person_tone4_tone2',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d❤️\u200d\ud83e\uddd1\ud83c\udffc',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone4_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d❤️\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'kiss_person_person_tone4_tone2',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d❤️\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffc',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone4_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffb',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone4_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d❤️\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone4_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d❤️\u200d\ud83d\udc69\ud83c\udffd',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone4_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffc',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone4_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffd',
        ),
    ),
    Unicode(
        'couple_with_heart_person_person_tone4_tone3',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d❤️\u200d\ud83e\uddd1\ud83c\udffd',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d❤️\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d❤️\u200d\ud83d\udc69\ud83c\udffe',
        ),
    ),
    Unicode(
        'kiss_person_person_tone4_tone3',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d❤️\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffd',
        ),
    ),
    Unicode(
        'couple_with_heart_tone4',
        b'\xf0\x9f\x92\x91\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc91\ud83c\udffe',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone4_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d❤️\u200d\ud83d\udc69\ud83c\udfff',
        ),
    ),
    Unicode(
        'kiss_tone4',
        b'\xf0\x9f\x92\x8f\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc8f\ud83c\udffe',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffe',
        ),
    ),
    Unicode(
        'couple_with_heart_person_person_tone4_tone5',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d❤️\u200d\ud83e\uddd1\ud83c\udfff',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone4_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d❤️\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone5_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d❤️\u200d\ud83d\udc69\ud83c\udffb',
        ),
    ),
    Unicode(
        'kiss_person_person_tone4_tone5',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udffe\u200d❤️\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udfff',
        ),
    ),
    Unicode(
        'couple_with_heart_person_person_tone5_tone1',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d❤️\u200d\ud83e\uddd1\ud83c\udffb',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone5_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d❤️\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone4_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udfff',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone5_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffb',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone5_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d❤️\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone5_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d❤️\u200d\ud83d\udc69\ud83c\udffc',
        ),
    ),
    Unicode(
        'kiss_person_person_tone5_tone1',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d❤️\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffb',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone5_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d❤️\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'couple_with_heart_person_person_tone5_tone2',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d❤️\u200d\ud83e\uddd1\ud83c\udffc',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone5_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d❤️\u200d\ud83d\udc69\ud83c\udffd',
        ),
    ),
    Unicode(
        'kiss_person_person_tone5_tone2',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d❤️\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffc',
        ),
    ),
    Unicode(
        'couple_with_heart_person_person_tone5_tone3',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d❤️\u200d\ud83e\uddd1\ud83c\udffd',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone5_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d❤️\u200d\ud83d\udc69\ud83c\udffe',
        ),
    ),
    Unicode(
        'kiss_person_person_tone5_tone3',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d❤️\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffd',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffc',
        ),
    ),
    Unicode(
        'couple_with_heart_person_person_tone5_tone4',
        (
            b'\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\xa7\x91\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd1\ud83c\udfff\u200d❤️\u200d\ud83e\uddd1\ud83c\udffe',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone5_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d❤️\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'kiss_tone5',
        b'\xf0\x9f\x92\x8f\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc8f\ud83c\udfff',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone5_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffd',
        ),
    ),
    Unicode(
        'couple_with_heart_tone5',
        b'\xf0\x9f\x92\x91\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc91\ud83c\udfff',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_man_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d❤️\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'couple_with_heart_woman_woman_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d❤️\u200d\ud83d\udc69\ud83c\udfff',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone5_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffe',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udfff',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone2_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffd',
        ),
    ),
    Unicode(
        'woman_beard',
        b'\xf0\x9f\xa7\x94\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddd4\u200d♀️',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone2_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffe',
        ),
    ),
    Unicode(
        'woman_tone1_beard',
        b'\xf0\x9f\xa7\x94\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'woman_light_skin_tone_beard',
        ),
        None,
        (
            '\ud83e\uddd4\ud83c\udffb\u200d♀️',
        ),
    ),
    Unicode(
        'woman_tone2_beard',
        b'\xf0\x9f\xa7\x94\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'woman_medium_light_skin_tone_beard',
        ),
        None,
        (
            '\ud83e\uddd4\ud83c\udffc\u200d♀️',
        ),
    ),
    Unicode(
        'woman_tone4_beard',
        b'\xf0\x9f\xa7\x94\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x99\x80\xef\xb8\x8f'.decode('utf8'),
        False,
        (
            'woman_medium_dark_skin_tone_beard',
        ),
        None,
        (
            '\ud83e\uddd4\ud83c\udffe\u200d♀️',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone2_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udfff',
        ),
    ),
    Unicode(
        'kiss_man_man_tone1',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone1',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d❤️\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'kiss_man_man_tone1_tone2',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone1_tone2',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d❤️\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone1_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'kiss_man_man_tone1_tone3',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone1_tone3',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d❤️\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone1_tone4',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d❤️\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone1_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'kiss_man_man_tone1_tone4',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone1_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'kiss_man_man_tone1_tone5',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone3_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffe',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone1_tone5',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffb\u200d❤️\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone1_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbb\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffb\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'kiss_man_man_tone2_tone1',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone2_tone1',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d❤️\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone2',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d❤️\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone2_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'kiss_man_man_tone2',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'kiss_man_man_tone2_tone3',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone2_tone3',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d❤️\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone2_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'kiss_man_man_tone2_tone4',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone2_tone4',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d❤️\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone2_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'kiss_man_man_tone2_tone5',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone2_tone5',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffc\u200d❤️\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'mending_heart',
        b'\xe2\x9d\xa4\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\xa9\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '❤️\u200d\ud83e\ude79',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone3_tone1',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d❤️\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone2_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffc\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'kiss_man_man_tone3_tone1',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone3_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'kiss_man_man_tone3_tone2',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone3_tone2',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d❤️\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone3_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'kiss_man_man_tone3',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone3_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udfff',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone3',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d❤️\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'kiss_man_man_tone3_tone4',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone3_tone4',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d❤️\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'heart_on_fire',
        b'\xe2\x9d\xa4\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x94\xa5'.decode('utf8'),
        False,
        None,
        None,
        (
            '❤️\u200d\ud83d\udd25',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone3_tone5',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d❤️\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone3_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'kiss_man_man_tone3_tone5',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffd\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone3_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbd\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffd\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'kiss_man_man_tone4_tone1',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone4_tone1',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d❤️\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone4_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'kiss_man_man_tone4_tone2',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'face_exhaling',
        b'\xf0\x9f\x98\xae\xe2\x80\x8d\xf0\x9f\x92\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude2e\u200d\ud83d\udca8',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone4_tone2',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d❤️\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone4_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'kiss_man_man_tone4_tone3',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone4_tone3',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d❤️\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone4',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d❤️\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone4_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'kiss_man_man_tone4',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'kiss_man_man_tone4_tone5',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone4_tone5',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udffe\u200d❤️\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone4_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbe\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udffe\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'kiss_man_man_tone5_tone1',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone5_tone1',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d❤️\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone5_tone1',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbb'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffb',
        ),
    ),
    Unicode(
        'face_in_clouds',
        b'\xf0\x9f\x98\xb6\xe2\x80\x8d\xf0\x9f\x8c\xab\xef\xb8\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude36\u200d\ud83c\udf2b️',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone5_tone2',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d❤️\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'kiss_man_man_tone5_tone2',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'kiss_man_man_tone5_tone3',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone5_tone3',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d❤️\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone5_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffc',
        ),
    ),
    Unicode(
        'kiss_man_man_tone5_tone4',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone5_tone4',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d❤️\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone5_tone3',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbd'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffd',
        ),
    ),
    Unicode(
        'kiss_man_man_tone5',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'couple_with_heart_man_man_tone5',
        (
            b'\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4'
            b'\xef\xb8\x8f\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc68\ud83c\udfff\u200d❤️\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone5_tone4',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbe'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffe',
        ),
    ),
    Unicode(
        'kiss_woman_man_tone5',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa8\xf0\x9f\x8f\xbf'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udfff',
        ),
    ),
    Unicode(
        'face_with_spiral_eyes',
        b'\xf0\x9f\x98\xb5\xe2\x80\x8d\xf0\x9f\x92\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\ude35\u200d\ud83d\udcab',
        ),
    ),
    Unicode(
        'kiss_woman_woman_tone5_tone2',
        (
            b'\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbf\xe2\x80\x8d\xe2\x9d\xa4\xef\xb8\x8f\xe2'
            b'\x80\x8d\xf0\x9f\x92\x8b\xe2\x80\x8d\xf0\x9f\x91\xa9\xf0\x9f\x8f\xbc'
        ).decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc69\ud83c\udfff\u200d❤️\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffc',
        ),
    ),
    Unicode(
        'infinity',
        b'\xe2\x99\xbe'.decode('utf8'),
        True,
        None,
        None,
        None,
    ),
    Unicode(
        'dotted_line_face',
        b'\xf0\x9f\xab\xa5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udee5',
        ),
    ),
    Unicode(
        'face_holding_back_tears',
        b'\xf0\x9f\xa5\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd79',
        ),
    ),
    Unicode(
        'face_with_peeking_eye',
        b'\xf0\x9f\xab\xa3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udee3',
        ),
    ),
    Unicode(
        'face_with_open_eyes_and_hand_over_mouth',
        b'\xf0\x9f\xab\xa2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udee2',
        ),
    ),
    Unicode(
        'saluting_face',
        b'\xf0\x9f\xab\xa1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udee1',
        ),
    ),
    Unicode(
        'melting_face',
        b'\xf0\x9f\xab\xa0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udee0',
        ),
    ),
    Unicode(
        'face_with_diagonal_mouth',
        b'\xf0\x9f\xab\xa4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udee4',
        ),
    ),
    Unicode(
        'heart_hands',
        b'\xf0\x9f\xab\xb6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef6',
        ),
    ),
    Unicode(
        'heart_hands_tone1',
        b'\xf0\x9f\xab\xb6\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef6\ud83c\udffb',
        ),
    ),
    Unicode(
        'heart_hands_tone2',
        b'\xf0\x9f\xab\xb6\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef6\ud83c\udffc',
        ),
    ),
    Unicode(
        'heart_hands_tone3',
        b'\xf0\x9f\xab\xb6\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef6\ud83c\udffd',
        ),
    ),
    Unicode(
        'heart_hands_tone4',
        b'\xf0\x9f\xab\xb6\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef6\ud83c\udffe',
        ),
    ),
    Unicode(
        'heart_hands_tone5',
        b'\xf0\x9f\xab\xb6\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef6\ud83c\udfff',
        ),
    ),
    Unicode(
        'handshake_tone1',
        b'\xf0\x9f\xa4\x9d\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd1d\ud83c\udffb',
        ),
    ),
    Unicode(
        'handshake_tone1_tone2',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udffb\u200d\ud83e\udef2\ud83c\udffc',
        ),
    ),
    Unicode(
        'handshake_tone1_tone3',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udffb\u200d\ud83e\udef2\ud83c\udffd',
        ),
    ),
    Unicode(
        'handshake_tone1_tone4',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udffb\u200d\ud83e\udef2\ud83c\udffe',
        ),
    ),
    Unicode(
        'handshake_tone1_tone5',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbb\xe2\x80\x8d\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udffb\u200d\ud83e\udef2\ud83c\udfff',
        ),
    ),
    Unicode(
        'handshake_tone2_tone1',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udffc\u200d\ud83e\udef2\ud83c\udffb',
        ),
    ),
    Unicode(
        'handshake_tone2',
        b'\xf0\x9f\xa4\x9d\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd1d\ud83c\udffc',
        ),
    ),
    Unicode(
        'handshake_tone2_tone3',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udffc\u200d\ud83e\udef2\ud83c\udffd',
        ),
    ),
    Unicode(
        'handshake_tone2_tone4',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udffc\u200d\ud83e\udef2\ud83c\udffe',
        ),
    ),
    Unicode(
        'handshake_tone2_tone5',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbc\xe2\x80\x8d\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udffc\u200d\ud83e\udef2\ud83c\udfff',
        ),
    ),
    Unicode(
        'handshake_tone3_tone1',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udffd\u200d\ud83e\udef2\ud83c\udffb',
        ),
    ),
    Unicode(
        'handshake_tone3_tone2',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udffd\u200d\ud83e\udef2\ud83c\udffc',
        ),
    ),
    Unicode(
        'handshake_tone3',
        b'\xf0\x9f\xa4\x9d\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd1d\ud83c\udffd',
        ),
    ),
    Unicode(
        'handshake_tone3_tone4',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udffd\u200d\ud83e\udef2\ud83c\udffe',
        ),
    ),
    Unicode(
        'handshake_tone3_tone5',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbd\xe2\x80\x8d\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udffd\u200d\ud83e\udef2\ud83c\udfff',
        ),
    ),
    Unicode(
        'handshake_tone4_tone1',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udffe\u200d\ud83e\udef2\ud83c\udffb',
        ),
    ),
    Unicode(
        'handshake_tone4_tone2',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udffe\u200d\ud83e\udef2\ud83c\udffc',
        ),
    ),
    Unicode(
        'handshake_tone4_tone3',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udffe\u200d\ud83e\udef2\ud83c\udffd',
        ),
    ),
    Unicode(
        'handshake_tone4',
        b'\xf0\x9f\xa4\x9d\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd1d\ud83c\udffe',
        ),
    ),
    Unicode(
        'handshake_tone4_tone5',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbe\xe2\x80\x8d\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udffe\u200d\ud83e\udef2\ud83c\udfff',
        ),
    ),
    Unicode(
        'handshake_tone5_tone1',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udfff\u200d\ud83e\udef2\ud83c\udffb',
        ),
    ),
    Unicode(
        'handshake_tone5_tone2',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udfff\u200d\ud83e\udef2\ud83c\udffc',
        ),
    ),
    Unicode(
        'handshake_tone5_tone3',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udfff\u200d\ud83e\udef2\ud83c\udffd',
        ),
    ),
    Unicode(
        'handshake_tone5_tone4',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbf\xe2\x80\x8d\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udfff\u200d\ud83e\udef2\ud83c\udffe',
        ),
    ),
    Unicode(
        'handshake_tone5',
        b'\xf0\x9f\xa4\x9d\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udd1d\ud83c\udfff',
        ),
    ),
    Unicode(
        'hand_with_index_finger_and_thumb_crossed',
        b'\xf0\x9f\xab\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef0',
        ),
    ),
    Unicode(
        'hand_with_index_finger_and_thumb_crossed_tone1',
        b'\xf0\x9f\xab\xb0\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef0\ud83c\udffb',
        ),
    ),
    Unicode(
        'hand_with_index_finger_and_thumb_crossed_tone2',
        b'\xf0\x9f\xab\xb0\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef0\ud83c\udffc',
        ),
    ),
    Unicode(
        'hand_with_index_finger_and_thumb_crossed_tone3',
        b'\xf0\x9f\xab\xb0\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef0\ud83c\udffd',
        ),
    ),
    Unicode(
        'hand_with_index_finger_and_thumb_crossed_tone4',
        b'\xf0\x9f\xab\xb0\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef0\ud83c\udffe',
        ),
    ),
    Unicode(
        'hand_with_index_finger_and_thumb_crossed_tone5',
        b'\xf0\x9f\xab\xb0\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef0\ud83c\udfff',
        ),
    ),
    Unicode(
        'palm_down_hand',
        b'\xf0\x9f\xab\xb3'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef3',
        ),
    ),
    Unicode(
        'palm_down_hand_tone1',
        b'\xf0\x9f\xab\xb3\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef3\ud83c\udffb',
        ),
    ),
    Unicode(
        'palm_down_hand_tone2',
        b'\xf0\x9f\xab\xb3\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef3\ud83c\udffc',
        ),
    ),
    Unicode(
        'palm_down_hand_tone3',
        b'\xf0\x9f\xab\xb3\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef3\ud83c\udffd',
        ),
    ),
    Unicode(
        'palm_down_hand_tone4',
        b'\xf0\x9f\xab\xb3\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef3\ud83c\udffe',
        ),
    ),
    Unicode(
        'palm_down_hand_tone5',
        b'\xf0\x9f\xab\xb3\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef3\ud83c\udfff',
        ),
    ),
    Unicode(
        'palm_up_hand',
        b'\xf0\x9f\xab\xb4'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef4',
        ),
    ),
    Unicode(
        'palm_up_hand_tone1',
        b'\xf0\x9f\xab\xb4\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef4\ud83c\udffb',
        ),
    ),
    Unicode(
        'palm_up_hand_tone2',
        b'\xf0\x9f\xab\xb4\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef4\ud83c\udffc',
        ),
    ),
    Unicode(
        'palm_up_hand_tone3',
        b'\xf0\x9f\xab\xb4\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef4\ud83c\udffd',
        ),
    ),
    Unicode(
        'palm_up_hand_tone4',
        b'\xf0\x9f\xab\xb4\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef4\ud83c\udffe',
        ),
    ),
    Unicode(
        'palm_up_hand_tone5',
        b'\xf0\x9f\xab\xb4\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef4\ud83c\udfff',
        ),
    ),
    Unicode(
        'leftwards_hand',
        b'\xf0\x9f\xab\xb2'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef2',
        ),
    ),
    Unicode(
        'leftwards_hand_tone1',
        b'\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef2\ud83c\udffb',
        ),
    ),
    Unicode(
        'leftwards_hand_tone2',
        b'\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef2\ud83c\udffc',
        ),
    ),
    Unicode(
        'leftwards_hand_tone3',
        b'\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef2\ud83c\udffd',
        ),
    ),
    Unicode(
        'leftwards_hand_tone4',
        b'\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef2\ud83c\udffe',
        ),
    ),
    Unicode(
        'leftwards_hand_tone5',
        b'\xf0\x9f\xab\xb2\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef2\ud83c\udfff',
        ),
    ),
    Unicode(
        'rightwards_hand',
        b'\xf0\x9f\xab\xb1'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1',
        ),
    ),
    Unicode(
        'rightwards_hand_tone1',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udffb',
        ),
    ),
    Unicode(
        'rightwards_hand_tone2',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udffc',
        ),
    ),
    Unicode(
        'rightwards_hand_tone3',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udffd',
        ),
    ),
    Unicode(
        'rightwards_hand_tone4',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udffe',
        ),
    ),
    Unicode(
        'rightwards_hand_tone5',
        b'\xf0\x9f\xab\xb1\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef1\ud83c\udfff',
        ),
    ),
    Unicode(
        'index_pointing_at_the_viewer',
        b'\xf0\x9f\xab\xb5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef5',
        ),
    ),
    Unicode(
        'index_pointing_at_the_viewer_tone1',
        b'\xf0\x9f\xab\xb5\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef5\ud83c\udffb',
        ),
    ),
    Unicode(
        'index_pointing_at_the_viewer_tone2',
        b'\xf0\x9f\xab\xb5\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef5\ud83c\udffc',
        ),
    ),
    Unicode(
        'index_pointing_at_the_viewer_tone3',
        b'\xf0\x9f\xab\xb5\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef5\ud83c\udffd',
        ),
    ),
    Unicode(
        'index_pointing_at_the_viewer_tone4',
        b'\xf0\x9f\xab\xb5\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef5\ud83c\udffe',
        ),
    ),
    Unicode(
        'index_pointing_at_the_viewer_tone5',
        b'\xf0\x9f\xab\xb5\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef5\ud83c\udfff',
        ),
    ),
    Unicode(
        'biting_lip',
        b'\xf0\x9f\xab\xa6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udee6',
        ),
    ),
    Unicode(
        'person_with_crown',
        b'\xf0\x9f\xab\x85'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udec5',
        ),
    ),
    Unicode(
        'person_with_crown_tone1',
        b'\xf0\x9f\xab\x85\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udec5\ud83c\udffb',
        ),
    ),
    Unicode(
        'person_with_crown_tone2',
        b'\xf0\x9f\xab\x85\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udec5\ud83c\udffc',
        ),
    ),
    Unicode(
        'person_with_crown_tone3',
        b'\xf0\x9f\xab\x85\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udec5\ud83c\udffd',
        ),
    ),
    Unicode(
        'person_with_crown_tone4',
        b'\xf0\x9f\xab\x85\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udec5\ud83c\udffe',
        ),
    ),
    Unicode(
        'person_with_crown_tone5',
        b'\xf0\x9f\xab\x85\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udec5\ud83c\udfff',
        ),
    ),
    Unicode(
        'troll',
        b'\xf0\x9f\xa7\x8c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uddcc',
        ),
    ),
    Unicode(
        'pregnant_person',
        b'\xf0\x9f\xab\x84'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udec4',
        ),
    ),
    Unicode(
        'pregnant_person_tone1',
        b'\xf0\x9f\xab\x84\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udec4\ud83c\udffb',
        ),
    ),
    Unicode(
        'pregnant_person_tone2',
        b'\xf0\x9f\xab\x84\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udec4\ud83c\udffc',
        ),
    ),
    Unicode(
        'pregnant_person_tone3',
        b'\xf0\x9f\xab\x84\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udec4\ud83c\udffd',
        ),
    ),
    Unicode(
        'pregnant_person_tone4',
        b'\xf0\x9f\xab\x84\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udec4\ud83c\udffe',
        ),
    ),
    Unicode(
        'pregnant_person_tone5',
        b'\xf0\x9f\xab\x84\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udec4\ud83c\udfff',
        ),
    ),
    Unicode(
        'pregnant_man',
        b'\xf0\x9f\xab\x83'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udec3',
        ),
    ),
    Unicode(
        'pregnant_man_tone1',
        b'\xf0\x9f\xab\x83\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udec3\ud83c\udffb',
        ),
    ),
    Unicode(
        'pregnant_man_tone2',
        b'\xf0\x9f\xab\x83\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udec3\ud83c\udffc',
        ),
    ),
    Unicode(
        'pregnant_man_tone3',
        b'\xf0\x9f\xab\x83\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udec3\ud83c\udffd',
        ),
    ),
    Unicode(
        'pregnant_man_tone4',
        b'\xf0\x9f\xab\x83\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udec3\ud83c\udffe',
        ),
    ),
    Unicode(
        'pregnant_man_tone5',
        b'\xf0\x9f\xab\x83\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udec3\ud83c\udfff',
        ),
    ),
    Unicode(
        'empty_nest',
        b'\xf0\x9f\xaa\xb9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udeb9',
        ),
    ),
    Unicode(
        'nest_with_eggs',
        b'\xf0\x9f\xaa\xba'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udeba',
        ),
    ),
    Unicode(
        'coral',
        b'\xf0\x9f\xaa\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udeb8',
        ),
    ),
    Unicode(
        'lotus',
        b'\xf0\x9f\xaa\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udeb7',
        ),
    ),
    Unicode(
        'bubbles',
        b'\xf0\x9f\xab\xa7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udee7',
        ),
    ),
    Unicode(
        'jar',
        b'\xf0\x9f\xab\x99'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uded9',
        ),
    ),
    Unicode(
        'beans',
        b'\xf0\x9f\xab\x98'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uded8',
        ),
    ),
    Unicode(
        'pouring_liquid',
        b'\xf0\x9f\xab\x97'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\uded7',
        ),
    ),
    Unicode(
        'playground_slide',
        b'\xf0\x9f\x9b\x9d'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udedd',
        ),
    ),
    Unicode(
        'crutch',
        b'\xf0\x9f\xa9\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude7c',
        ),
    ),
    Unicode(
        'wheel',
        b'\xf0\x9f\x9b\x9e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udede',
        ),
    ),
    Unicode(
        'ring_buoy',
        b'\xf0\x9f\x9b\x9f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udedf',
        ),
    ),
    Unicode(
        'low_battery',
        b'\xf0\x9f\xaa\xab'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udeab',
        ),
    ),
    Unicode(
        'identification_card',
        b'\xf0\x9f\xaa\xaa'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udeaa',
        ),
    ),
    Unicode(
        'hamsa',
        b'\xf0\x9f\xaa\xac'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udeac',
        ),
    ),
    Unicode(
        'x_ray',
        b'\xf0\x9f\xa9\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude7b',
        ),
    ),
    Unicode(
        'mirror_ball',
        b'\xf0\x9f\xaa\xa9'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udea9',
        ),
    ),
    Unicode(
        'heavy_equals_sign',
        b'\xf0\x9f\x9f\xb0'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udff0',
        ),
    ),
    Unicode(
        'shaking_face',
        b'\xf0\x9f\xab\xa8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udee8',
        ),
    ),
    Unicode(
        'leftwards_pushing_hand',
        b'\xf0\x9f\xab\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef7',
        ),
    ),
    Unicode(
        'leftwards_pushing_hand_tone1',
        b'\xf0\x9f\xab\xb7\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef7\ud83c\udffb',
        ),
    ),
    Unicode(
        'leftwards_pushing_hand_tone2',
        b'\xf0\x9f\xab\xb7\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef7\ud83c\udffc',
        ),
    ),
    Unicode(
        'leftwards_pushing_hand_tone3',
        b'\xf0\x9f\xab\xb7\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef7\ud83c\udffd',
        ),
    ),
    Unicode(
        'leftwards_pushing_hand_tone4',
        b'\xf0\x9f\xab\xb7\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef7\ud83c\udffe',
        ),
    ),
    Unicode(
        'leftwards_pushing_hand_tone5',
        b'\xf0\x9f\xab\xb7\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef7\ud83c\udfff',
        ),
    ),
    Unicode(
        'rightwards_pushing_hand',
        b'\xf0\x9f\xab\xb8'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef8',
        ),
    ),
    Unicode(
        'rightwards_pushing_hand_tone1',
        b'\xf0\x9f\xab\xb8\xf0\x9f\x8f\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef8\ud83c\udffb',
        ),
    ),
    Unicode(
        'rightwards_pushing_hand_tone2',
        b'\xf0\x9f\xab\xb8\xf0\x9f\x8f\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef8\ud83c\udffc',
        ),
    ),
    Unicode(
        'rightwards_pushing_hand_tone3',
        b'\xf0\x9f\xab\xb8\xf0\x9f\x8f\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef8\ud83c\udffd',
        ),
    ),
    Unicode(
        'rightwards_pushing_hand_tone4',
        b'\xf0\x9f\xab\xb8\xf0\x9f\x8f\xbe'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef8\ud83c\udffe',
        ),
    ),
    Unicode(
        'rightwards_pushing_hand_tone5',
        b'\xf0\x9f\xab\xb8\xf0\x9f\x8f\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udef8\ud83c\udfff',
        ),
    ),
    Unicode(
        'goose',
        b'\xf0\x9f\xaa\xbf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udebf',
        ),
    ),
    Unicode(
        'black_bird',
        b'\xf0\x9f\x90\xa6\xe2\x80\x8d\xe2\xac\x9b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udc26\u200d⬛',
        ),
    ),
    Unicode(
        'moose',
        b'\xf0\x9f\xab\x8e'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udece',
        ),
    ),
    Unicode(
        'jellyfish',
        b'\xf0\x9f\xaa\xbc'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udebc',
        ),
    ),
    Unicode(
        'donkey',
        b'\xf0\x9f\xab\x8f'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udecf',
        ),
    ),
    Unicode(
        'wing',
        b'\xf0\x9f\xaa\xbd'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udebd',
        ),
    ),
    Unicode(
        'hyacinth',
        b'\xf0\x9f\xaa\xbb'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udebb',
        ),
    ),
    Unicode(
        'pea_pod',
        b'\xf0\x9f\xab\x9b'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udedb',
        ),
    ),
    Unicode(
        'ginger_root',
        b'\xf0\x9f\xab\x9a'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udeda',
        ),
    ),
    Unicode(
        'maracas',
        b'\xf0\x9f\xaa\x87'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude87',
        ),
    ),
    Unicode(
        'flute',
        b'\xf0\x9f\xaa\x88'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude88',
        ),
    ),
    Unicode(
        'hair_pick',
        b'\xf0\x9f\xaa\xae'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udeae',
        ),
    ),
    Unicode(
        'folding_hand_fan',
        b'\xf0\x9f\xaa\xad'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udead',
        ),
    ),
    Unicode(
        'pink_heart',
        b'\xf0\x9f\xa9\xb7'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude77',
        ),
    ),
    Unicode(
        'light_blue_heart',
        b'\xf0\x9f\xa9\xb5'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude75',
        ),
    ),
    Unicode(
        'grey_heart',
        b'\xf0\x9f\xa9\xb6'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\ude76',
        ),
    ),
    Unicode(
        'khanda',
        b'\xf0\x9f\xaa\xaf'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83e\udeaf',
        ),
    ),
    Unicode(
        'wireless',
        b'\xf0\x9f\x9b\x9c'.decode('utf8'),
        False,
        None,
        None,
        (
            '\ud83d\udedc',
        ),
    ),
)


for unicode in UNICODES:
    Emoji._create_unicode(unicode, True)

unicode = None
del unicode
